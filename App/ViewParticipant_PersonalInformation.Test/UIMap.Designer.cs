// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ViewParticipant_PersonalInformation.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Verify the Content Menu button is available to toggle and expand to view the content menu.
        /// </summary>
        public void AssertContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
            Assert.AreEqual(this.AssertContentMenuButtonExpectedValues.UITogglenavigationButtonControlType, uITogglenavigationButton.ControlType.ToString(), "No Content Menu button available.");
        }
        
        /// <summary>
        /// Verify the Participant name appears in the heading for the individual participant (Abdelatif Elboudjay)
        /// </summary>
        public void AssertParticipantNameHeading()
        {
            #region Variable Declarations
            HtmlDiv uIPARTICIPANTAbdelatifPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITopPane.UIPARTICIPANTAbdelatifPane;
            #endregion

            // Verify that the 'InnerText' property of 'PARTICIPANT Abdelatif Elboudjay Prom' pane contains 'PARTICIPANT
            //
            //Abdelatif Elboudjay
            //Prominent 
            //Permalink: url goes here'
            StringAssert.Contains(uIPARTICIPANTAbdelatifPane.InnerText, this.AssertParticipantNameHeadingExpectedValues.UIPARTICIPANTAbdelatifPaneInnerText, "No Participant data available in the Participant name heading. (Abdelatif Elboudj" +
                    "ay)");
        }
        
        /// <summary>
        /// Verify the Participants Banner displays on the all participants page.
        /// </summary>
        public void AssertParticipantsBanner()
        {
            #region Variable Declarations
            HtmlDiv uIParticipantsPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UIParticipantsPane;
            #endregion

            // Verify that the 'InnerText' property of 'Participants' pane equals 'Participants'
            Assert.AreEqual(this.AssertParticipantsBannerExpectedValues.UIParticipantsPaneInnerText, uIParticipantsPane.InnerText, "No Participants banner. ");
        }
        
        /// <summary>
        /// Verify the Participants link is available for selection in the content menu. check inner text; check hyperlink controltype
        /// </summary>
        public void AssertParticipantsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIParticipantsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIParticipantsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Participants' link equals 'Participants'
            Assert.AreEqual(this.AssertParticipantsLinkExpectedValues.UIParticipantsHyperlinkInnerText, uIParticipantsHyperlink.InnerText, "No participants link available in content menu.");

            // Verify that the 'ControlType' property of 'Participants' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertParticipantsLinkExpectedValues.UIParticipantsHyperlinkControlType, uIParticipantsHyperlink.ControlType.ToString(), "No hyperlink for Participants available in the Content Menu.");
        }
        
        /// <summary>
        /// Verify the Participant name is available for selection from the All Participants link (Abdelatif Elboudjay)
        /// </summary>
        public void AssertParticipantsNameLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAbdelatifElboudjayHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIAbdelatifElboudjayHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Abdelatif Elboudjay' link equals 'Abdelatif Elboudjay'
            Assert.AreEqual(this.AssertParticipantsNameLinkExpectedValues.UIAbdelatifElboudjayHyperlinkInnerText, uIAbdelatifElboudjayHyperlink.InnerText, "No Participant for selection (Abdelatif Elboudjay)");

            // Verify that the 'ControlType' property of 'Abdelatif Elboudjay' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertParticipantsNameLinkExpectedValues.UIAbdelatifElboudjayHyperlinkControlType, uIAbdelatifElboudjayHyperlink.ControlType.ToString(), "No hyperlink available for the participant name (Abdelatif Elboudjay)");
        }
        
        /// <summary>
        /// Verify the Participants Personal Information exists and is displayed; check innertext - contains-.
        /// </summary>
        public void AssertParticipantsPersonalInfo()
        {
            #region Variable Declarations
            HtmlDiv uIPersonalInformationPPane1 = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITopPane.UIPersonalInformationPPane1;
            #endregion

            // Verify that the 'InnerText' property of 'Personal Information Personal' pane contains 'Personal Information
            // 
            //
            //
            //
            //Personal Identifiable Information (PII)
            //
            //
            //
            //
            //
            //
            //Names & Alternatives
            //
            //First name: Abdelatif
            //Last name: Elboudjay
            //Name prefix: 
            //Name suffix: 
            //Given name: 
            //Family name: 
            //Middle name: 
            //Patronym: 
            //Alias: 
            //
            //
            //Gender
            //
            //Male
            //
            //
            //Ethnicity
            //
            // 
            //
            //Place of Birth
            //
            //
            //
            //
            //Date of Birth
            //
            //Jan 1, 2015
            //
            //
            //
            //
            //Countries of Citizenship
            //
            //Morocco
            // 
            //
            //Residence Address
            //
            // 
            //
            //Medical Conditions
            //
            // 
            //
            //Marital Status
            //
            //
            //
            //
            //Sevis Id'
            StringAssert.Contains(uIPersonalInformationPPane1.InnerText, this.AssertParticipantsPersonalInfoExpectedValues.UIPersonalInformationPPane1InnerText, "No Personal Information fields available for the individual participant (Abdelati" +
                    "f Elboudjay)");
        }
        
        /// <summary>
        /// Close browser. End test.
        /// </summary>
        public void CloseBrowser()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Perform Close on Browser Window
            uINewtabInternetExplorWindow.Close();
        }
        
        /// <summary>
        /// Open browser; navigate to QA site; input ECATest creds; click sign in
        /// </summary>
        public void LogintoQA()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UINewtabInternetExplorWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            WinEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIItemWindow.UIItemEdit;
            WinButton uIGotohttpsecakmtqaazuButton = this.UINewtabInternetExplorWindow.UIPageControlToolBar.UIGotohttpsecakmtqaazuButton;
            HtmlEdit uIUseraccountEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIUseraccountEdit;
            HtmlEdit uIPasswordEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIPasswordEdit;
            HtmlSpan uISigninPane = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UISigninPane;
            #endregion

            // Go to web page 'about:Tabs' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.LogintoQAParams.UINewtabInternetExplorWindowUrl));

            // Click 'Address and search using Bing' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(45, 11));

            // Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
            Keyboard.SendKeys(uIItemEdit, this.LogintoQAParams.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt...' button
            Mouse.Click(uIGotohttpsecakmtqaazuButton, new Point(12, 13));

            // Type 'ECATest1@statedept.us' in 'User account' text box
            uIUseraccountEdit.Text = this.LogintoQAParams.UIUseraccountEditText;

            // Type '{Tab}' in 'User account' text box
            Keyboard.SendKeys(uIUseraccountEdit, this.LogintoQAParams.UIUseraccountEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LogintoQAParams.UIPasswordEditPassword;

            // Double-Click 'Sign in' pane
            Mouse.DoubleClick(uISigninPane, new Point(42, 15));
        }
        
        /// <summary>
        /// Select the Participants link in the content menu to navigate to the all participants page.
        /// </summary>
        public void SelectContentMenu_ParticipantsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIParticipantsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIParticipantsHyperlink;
            #endregion

            // Click 'Participants' link
            Mouse.Click(uIParticipantsHyperlink, new Point(58, 29));
        }
        
        /// <summary>
        /// Select the content menu button to expand the content menu and view the sections.
        /// </summary>
        public void SelectContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Click 'Toggle navigation' button
            Mouse.Click(uITogglenavigationButton, new Point(25, 12));
        }
        
        /// <summary>
        /// Select the Participant to view the Personal Information participant page. (Abdelatif Elboudjay)
        /// </summary>
        public void SelectParticipant()
        {
            #region Variable Declarations
            HtmlHyperlink uIAbdelatifElboudjayHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UISortlistPane.UIAbdelatifElboudjayHyperlink;
            #endregion

            // Click 'Abdelatif Elboudjay' link
            Mouse.Click(uIAbdelatifElboudjayHyperlink, new Point(91, 6));
        }
        
        #region Properties
        public virtual AssertContentMenuButtonExpectedValues AssertContentMenuButtonExpectedValues
        {
            get
            {
                if ((this.mAssertContentMenuButtonExpectedValues == null))
                {
                    this.mAssertContentMenuButtonExpectedValues = new AssertContentMenuButtonExpectedValues();
                }
                return this.mAssertContentMenuButtonExpectedValues;
            }
        }
        
        public virtual AssertParticipantNameHeadingExpectedValues AssertParticipantNameHeadingExpectedValues
        {
            get
            {
                if ((this.mAssertParticipantNameHeadingExpectedValues == null))
                {
                    this.mAssertParticipantNameHeadingExpectedValues = new AssertParticipantNameHeadingExpectedValues();
                }
                return this.mAssertParticipantNameHeadingExpectedValues;
            }
        }
        
        public virtual AssertParticipantsBannerExpectedValues AssertParticipantsBannerExpectedValues
        {
            get
            {
                if ((this.mAssertParticipantsBannerExpectedValues == null))
                {
                    this.mAssertParticipantsBannerExpectedValues = new AssertParticipantsBannerExpectedValues();
                }
                return this.mAssertParticipantsBannerExpectedValues;
            }
        }
        
        public virtual AssertParticipantsLinkExpectedValues AssertParticipantsLinkExpectedValues
        {
            get
            {
                if ((this.mAssertParticipantsLinkExpectedValues == null))
                {
                    this.mAssertParticipantsLinkExpectedValues = new AssertParticipantsLinkExpectedValues();
                }
                return this.mAssertParticipantsLinkExpectedValues;
            }
        }
        
        public virtual AssertParticipantsNameLinkExpectedValues AssertParticipantsNameLinkExpectedValues
        {
            get
            {
                if ((this.mAssertParticipantsNameLinkExpectedValues == null))
                {
                    this.mAssertParticipantsNameLinkExpectedValues = new AssertParticipantsNameLinkExpectedValues();
                }
                return this.mAssertParticipantsNameLinkExpectedValues;
            }
        }
        
        public virtual AssertParticipantsPersonalInfoExpectedValues AssertParticipantsPersonalInfoExpectedValues
        {
            get
            {
                if ((this.mAssertParticipantsPersonalInfoExpectedValues == null))
                {
                    this.mAssertParticipantsPersonalInfoExpectedValues = new AssertParticipantsPersonalInfoExpectedValues();
                }
                return this.mAssertParticipantsPersonalInfoExpectedValues;
            }
        }
        
        public virtual LogintoQAParams LogintoQAParams
        {
            get
            {
                if ((this.mLogintoQAParams == null))
                {
                    this.mLogintoQAParams = new LogintoQAParams();
                }
                return this.mLogintoQAParams;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertContentMenuButtonExpectedValues mAssertContentMenuButtonExpectedValues;
        
        private AssertParticipantNameHeadingExpectedValues mAssertParticipantNameHeadingExpectedValues;
        
        private AssertParticipantsBannerExpectedValues mAssertParticipantsBannerExpectedValues;
        
        private AssertParticipantsLinkExpectedValues mAssertParticipantsLinkExpectedValues;
        
        private AssertParticipantsNameLinkExpectedValues mAssertParticipantsNameLinkExpectedValues;
        
        private AssertParticipantsPersonalInfoExpectedValues mAssertParticipantsPersonalInfoExpectedValues;
        
        private LogintoQAParams mLogintoQAParams;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertContentMenuButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertContentMenuButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
        /// </summary>
        public string UITogglenavigationButtonControlType = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipantNameHeading'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertParticipantNameHeadingExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'PARTICIPANT Abdelatif Elboudjay Prom' pane contains 'PARTICIPANT
        ///
        ///Abdelatif Elboudjay
        ///Prominent 
        ///Permalink: url goes here'
        /// </summary>
        public string UIPARTICIPANTAbdelatifPaneInnerText = "PARTICIPANT\r\n\r\nAbdelatif Elboudjay\r\nProminent \r\nPermalink: url goes here";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipantsBanner'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertParticipantsBannerExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Participants' pane equals 'Participants'
        /// </summary>
        public string UIParticipantsPaneInnerText = "Participants";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipantsLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertParticipantsLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Participants' link equals 'Participants'
        /// </summary>
        public string UIParticipantsHyperlinkInnerText = "Participants";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Participants' link equals 'Hyperlink'
        /// </summary>
        public string UIParticipantsHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipantsNameLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertParticipantsNameLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Abdelatif Elboudjay' link equals 'Abdelatif Elboudjay'
        /// </summary>
        public string UIAbdelatifElboudjayHyperlinkInnerText = "Abdelatif Elboudjay";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Abdelatif Elboudjay' link equals 'Hyperlink'
        /// </summary>
        public string UIAbdelatifElboudjayHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipantsPersonalInfo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertParticipantsPersonalInfoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Personal Information Personal' pane contains 'Personal Information
        /// 
        ///
        ///
        ///
        ///Personal Identifiable Information (PII)
        ///
        ///
        ///
        ///
        ///
        ///
        ///Names & Alternatives
        ///
        ///First name: Abdelatif
        ///Last name: Elboudjay
        ///Name prefix: 
        ///Name suffix: 
        ///Given name: 
        ///Family name: 
        ///Middle name: 
        ///Patronym: 
        ///Alias: 
        ///
        ///
        ///Gender
        ///
        ///Male
        ///
        ///
        ///Ethnicity
        ///
        /// 
        ///
        ///Place of Birth
        ///
        ///
        ///
        ///
        ///Date of Birth
        ///
        ///Jan 1, 2015
        ///
        ///
        ///
        ///
        ///Countries of Citizenship
        ///
        ///Morocco
        /// 
        ///
        ///Residence Address
        ///
        /// 
        ///
        ///Medical Conditions
        ///
        /// 
        ///
        ///Marital Status
        ///
        ///
        ///
        ///
        ///Sevis Id'
        /// </summary>
        public string UIPersonalInformationPPane1InnerText = @"Personal Information
 



Personal Identifiable Information (PII)






Names & Alternatives

First name: Abdelatif
Last name: Elboudjay
Name prefix: 
Name suffix: 
Given name: 
Family name: 
Middle name: 
Patronym: 
Alias: 


Gender

Male


Ethnicity

 

Place of Birth




Date of Birth

Jan 1, 2015




Countries of Citizenship

Morocco
 

Residence Address

 

Medical Conditions

 

Marital Status




Sevis Id";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogintoQA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class LogintoQAParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:Tabs' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "about:Tabs";
        
        /// <summary>
        /// Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
        /// </summary>
        public string UIItemEditSendKeys = "https://eca-kmt-qa.azurewebsites.net/";
        
        /// <summary>
        /// Type 'ECATest1@statedept.us' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditText = "ECATest1@statedept.us";
        
        /// <summary>
        /// Type '{Tab}' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pnl8gvcmh7k//RLoLhz21H311rAYM7tLgX1DFCS84gg=";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPageControlToolBar UIPageControlToolBar
        {
            get
            {
                if ((this.mUIPageControlToolBar == null))
                {
                    this.mUIPageControlToolBar = new UIPageControlToolBar(this);
                }
                return this.mUIPageControlToolBar;
            }
        }
        
        public UISignintoAzureActiveDDocument UISignintoAzureActiveDDocument
        {
            get
            {
                if ((this.mUISignintoAzureActiveDDocument == null))
                {
                    this.mUISignintoAzureActiveDDocument = new UISignintoAzureActiveDDocument(this);
                }
                return this.mUISignintoAzureActiveDDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument UIHttpsecakmtqaazureweDocument
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument = new UIHttpsecakmtqaazureweDocument(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument1 UIHttpsecakmtqaazureweDocument1
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument1 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument1 = new UIHttpsecakmtqaazureweDocument1(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument1;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument2 UIHttpsecakmtqaazureweDocument2
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument2 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument2 = new UIHttpsecakmtqaazureweDocument2(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument2;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument3 UIHttpsecakmtqaazureweDocument3
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument3 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument3 = new UIHttpsecakmtqaazureweDocument3(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument3;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIPageControlToolBar mUIPageControlToolBar;
        
        private UISignintoAzureActiveDDocument mUISignintoAzureActiveDDocument;
        
        private UIHttpsecakmtqaazureweDocument mUIHttpsecakmtqaazureweDocument;
        
        private UIHttpsecakmtqaazureweDocument1 mUIHttpsecakmtqaazureweDocument1;
        
        private UIHttpsecakmtqaazureweDocument2 mUIHttpsecakmtqaazureweDocument2;
        
        private UIHttpsecakmtqaazureweDocument3 mUIHttpsecakmtqaazureweDocument3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Address and search using Bing";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIPageControlToolBar : WinToolBar
    {
        
        public UIPageControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Page Control";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinButton UIGotohttpsecakmtqaazuButton
        {
            get
            {
                if ((this.mUIGotohttpsecakmtqaazuButton == null))
                {
                    this.mUIGotohttpsecakmtqaazuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGotohttpsecakmtqaazuButton.SearchProperties[WinButton.PropertyNames.Name] = "Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt+Enter to open in a new tab)";
                    this.mUIGotohttpsecakmtqaazuButton.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIGotohttpsecakmtqaazuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGotohttpsecakmtqaazuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISignintoAzureActiveDDocument : HtmlDocument
    {
        
        public UISignintoAzureActiveDDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to Azure Active Directory";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/login.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/login.srf?wa=wsignin1.0&wtrealm=https%3a%2f%2flogin.windows.net&wreply=https%3a%2f%2flogin.windows.net%2fstatedept.us%2fwsfederation&wctx=3wEBD09BdXRoMkF1dGhvcml6ZQEPT0F1dGgyQXV0aG9yaXplAQxzdGF0ZWRlcHQudXMBAQEVb3BlbmlkY29ubmVjdC5pZHRva2VuAAABASRlMDM1NmU1NS1lMTI0LTQ1MmMtODM3ZC1hZWI3NTA0MTg1ZmYBJWh0dHBzOi8vZWNhLWttdC1xYS5henVyZXdlYnNpdGVzLm5ldC8AAAAAAAAAAAAAAQEaAAAAASVodHRwczovL2VjYS1rbXQtcWEuYXp1cmV3ZWJzaXRlcy5uZXQvAQkBCGFkYWxfdmVyAQUxLjAuMAEDY2lkASRiZWUxOWY4Zi04ZTMyLTQ3MTYtOWM5MC03YzQwYjQwNTczMmUBCWVycm9yX3VyaQElaHR0cHM6Ly9lY2Eta210LXFhLmF6dXJld2Vic2l0ZXMubmV0LwEPaW5jbHVkZV9hdF9oYXNoAQExAQtpbnRlcmFjdGl2ZQEBMQEFTm9uY2UBJDgyMGFjODZkLTkyMmUtNGQ4YS1hMWYzLTY1Y2MxOWYxMmViNgECcmMBJDQ1OGU1M2M2LWRjY2EtNGFmNS04YmE1LTM5Y2ZhMGZhZmViYgEJc2Vzc2lvbklkASQ0MGM3MjA0MC1kOGU3LTQzMmYtYTBkOS0xNjQ4Y2ExMWJmNDQBD2xpbWl0X3Rva2Vuc2l6ZQEBMe01&wp=MBI_FED_SSL&id=";
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIUseraccountEdit
        {
            get
            {
                if ((this.mUIUseraccountEdit == null))
                {
                    this.mUIUseraccountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_userid_inputtext";
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User account";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required email field normaltext";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login\" tabindex=\"1\" class=\"login_t";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUseraccountEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIUseraccountEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state\" " +
                        "id=\"cred_sign_in_button\" role=\"button\" style=\"opacity: 1;\" onclick=\"Post.SubmitC" +
                        "reds();return false;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIUseraccountEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public UICbpspmenus1Custom UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUITogglenavigationButton;
        
        private UICbpspmenus1Custom mUICbpspmenus1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UICbpspmenus1Custom : HtmlCustom
    {
        
        public UICbpspmenus1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIParticipantsHyperlink
        {
            get
            {
                if ((this.mUIParticipantsHyperlink == null))
                {
                    this.mUIParticipantsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Participants";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/allparticipants/";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allp";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIParticipantsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIParticipantsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIParticipantsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument1 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/allparticipants/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane(this);
                }
                return this.mUITopPane;
            }
        }
        
        public UISortlistPane UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane(this);
                }
                return this.mUISortlistPane;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane mUITopPane;
        
        private UISortlistPane mUISortlistPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UITopPane : HtmlDiv
    {
        
        public UITopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants\r\n\r\n\r\nParticipants List\r\n\r\nS";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIParticipantsPane
        {
            get
            {
                if ((this.mUIParticipantsPane == null))
                {
                    this.mUIParticipantsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIParticipantsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIParticipantsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIParticipantsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants";
                    this.mUIParticipantsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIParticipantsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "heading";
                    this.mUIParticipantsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"heading\"";
                    this.mUIParticipantsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "26";
                    this.mUIParticipantsPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIParticipantsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIParticipantsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISortlistPane : HtmlDiv
    {
        
        public UISortlistPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Name\r\n\r\nType\r\n\r\nStatus\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"participants\" st-pipe=\"getParti" +
                "cipants\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAbdelatifElboudjayHyperlink
        {
            get
            {
                if ((this.mUIAbdelatifElboudjayHyperlink == null))
                {
                    this.mUIAbdelatifElboudjayHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Abdelatif Elboudjay";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/participants/986/personalinformation";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/participants/";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAbdelatifElboudjayHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIAbdelatifElboudjayHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAbdelatifElboudjayHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument2 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane1 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane1(this);
                }
                return this.mUISortlistPane;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane1 mUISortlistPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISortlistPane1 : HtmlDiv
    {
        
        public UISortlistPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Name\r\n\r\nType\r\n\r\nStatus\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"participants\" st-pipe=\"getParti" +
                "cipants\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAbdelatifElboudjayHyperlink
        {
            get
            {
                if ((this.mUIAbdelatifElboudjayHyperlink == null))
                {
                    this.mUIAbdelatifElboudjayHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAbdelatifElboudjayHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Abdelatif Elboudjay";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/participants/986/personalinformation";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/participants/";
                    this.mUIAbdelatifElboudjayHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAbdelatifElboudjayHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIAbdelatifElboudjayHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAbdelatifElboudjayHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument3 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/participants/986/personalinformation#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane1 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane1(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane1 mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UITopPane1 : HtmlDiv
    {
        
        public UITopPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants • Abdelatif Elboudjay\r\n\r\n\r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPersonalInformationPPane
        {
            get
            {
                if ((this.mUIPersonalInformationPPane == null))
                {
                    this.mUIPersonalInformationPPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPersonalInformationPPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPersonalInformationPPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPersonalInformationPPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Personal Information\r\n \r\n\r\n\r\n\r\nPersonal ", PropertyExpressionOperator.Contains));
                    this.mUIPersonalInformationPPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPersonalInformationPPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container ng-scope";
                    this.mUIPersonalInformationPPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container ng-scope\" ui-view=\"\"";
                    this.mUIPersonalInformationPPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "39";
                    this.mUIPersonalInformationPPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIPersonalInformationPPane;
            }
        }
        
        public HtmlDiv UIPARTICIPANTAbdelatifPane
        {
            get
            {
                if ((this.mUIPARTICIPANTAbdelatifPane == null))
                {
                    this.mUIPARTICIPANTAbdelatifPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPARTICIPANTAbdelatifPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPARTICIPANTAbdelatifPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPARTICIPANTAbdelatifPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "PARTICIPANT\r\n\r\nAbdelatif Elboudjay\r\nProm";
                    this.mUIPARTICIPANTAbdelatifPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPARTICIPANTAbdelatifPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "heading";
                    this.mUIPARTICIPANTAbdelatifPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"heading\"";
                    this.mUIPARTICIPANTAbdelatifPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "30";
                    this.mUIPARTICIPANTAbdelatifPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIPARTICIPANTAbdelatifPane;
            }
        }
        
        public HtmlDiv UIPersonalInformationPPane1
        {
            get
            {
                if ((this.mUIPersonalInformationPPane1 == null))
                {
                    this.mUIPersonalInformationPPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPersonalInformationPPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPersonalInformationPPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPersonalInformationPPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Personal Information\r\n \r\n\r\n\r\n\r\nPersonal ";
                    this.mUIPersonalInformationPPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPersonalInformationPPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "container ng-scope";
                    this.mUIPersonalInformationPPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container ng-scope\" ui-view=\"\"";
                    this.mUIPersonalInformationPPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "39";
                    this.mUIPersonalInformationPPane1.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIPersonalInformationPPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPersonalInformationPPane;
        
        private HtmlDiv mUIPARTICIPANTAbdelatifPane;
        
        private HtmlDiv mUIPersonalInformationPPane1;
        #endregion
    }
}
