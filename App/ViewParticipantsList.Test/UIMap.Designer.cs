// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ViewParticipantsList.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Verify the Content Menu button is available to expand.
        /// </summary>
        public void AssertContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
            Assert.AreEqual(this.AssertContentMenuButtonExpectedValues.UITogglenavigationButtonControlType, uITogglenavigationButton.ControlType.ToString(), "No Content Menu button");
        }
        
        /// <summary>
        /// Verify that the Page 3 custom control exists for selection.
        /// </summary>
        public void AssertPageNumberCustomControl()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIItemCustom;
            #endregion

            // Verify that the 'InnerText' property of custom control equals '3'
            Assert.AreEqual(this.AssertPageNumberCustomControlExpectedValues.UIItemCustomInnerText, uIItemCustom.InnerText, "No page 3 available.");
        }
        
        /// <summary>
        /// Verify that page (3) of the participants list is displayed.
        /// </summary>
        public void AssertPageNumberParticipantsList()
        {
            #region Variable Declarations
            HtmlDiv uIParticipantsListShowPane1 = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UIParticipantsListShowPane1;
            #endregion

            // Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Participants List Showing 51 - 75 of' pane contains 'Participants List
            //
            //Showing 51 - 75 of 1697 participants
            //
            //
            //
            //Name
            //
            //Type
            //
            //Status
            //
            // 
            //
            //
            //
            //
            //
            //  
            //
            //
            // 
            //Albanian Music Council
            //Foreign NGO/PVOActive   
            // 
            //Albert Bienvenu Akoha
            //IndividualActive   
            // 
            //Alcaldia de Vara de Monimbó
            //Foreign NGO/PVOActive   
            // 
            //Alek Tamaryan
            //IndividualActive   
            // 
            //Aleksandar Dajkpvic
            //IndividualActive   
            // 
            //Aleksandr Ramaswamy
            //IndividualActive   
            // 
            //Alessandra Peruzzetto
            //IndividualActive   
            // 
            //Alex Sarra
            //IndividualActive   
            // 
            //Alexander Rubashvili
            //IndividualActive   
            // 
            //Alexandra Wilson
            //IndividualActive   
            // 
            //Alexey Kirichenko
            //IndividualActive   
            // 
            //Alexey Starkov
            //IndividualActive   
            // 
            //Alfredo Pinillos Ganoza
            //IndividualActive   
            // 
            //Ali Ghopur
            //IndividualActive   
            // 
            //Ali Hassan Mwarora
            //IndividualActive   
            // 
            //Aliya Urmanova
            //IndividualActive   
            // 
            //Alliance for Ecotourism
            //Foreign NGO/PVOActive   
            // 
            //Alma Mekondjo Nankela
            //IndividualActive   
            // 
            //Alok Tuladhar
            //IndividualActive   
            // 
            //Alson Kelen
            //IndividualActive   
            // 
            //Aman Ullah Mitsui
            //IndividualActive   
            // 
            //Amanda Batson
            //IndividualActive   
            // 
            //Amanda Eyre
            //IndividualActive   
            // 
            //Amanda Koster
            //IndividualActive   
            // 
            //Amanda Thomas Trienens
            //IndividualActive   
            // 
            //
            //
            //
            //
            //
            //
            //1
            //2
            //3
            //4
            //5
            //6
            //7
            //8
            //9
            //10'
            Playback.Wait(5000);
            StringAssert.Contains(uIParticipantsListShowPane1.InnerText, this.AssertPageNumberParticipantsListExpectedValues.UIParticipantsListShowPane1InnerText, "No Participants List displayed on page (3).");
        }
        
        /// <summary>
        /// Verify the participant's name exists; verify the name is a hyperlink (Alexey Starkov) Page (3).
        /// </summary>
        public void AssertParticipant_NameandHyperlink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAlexeyStarkovHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UISortlistPane.UIAlexeyStarkovHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Alexey Starkov' link equals 'Alexey Starkov'
            Assert.AreEqual(this.AssertParticipant_NameandHyperlinkExpectedValues.UIAlexeyStarkovHyperlinkInnerText, uIAlexeyStarkovHyperlink.InnerText, "No (Alexey Starkov) available on page (3) of the participants list.");

            // Verify that the 'ControlType' property of 'Alexey Starkov' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertParticipant_NameandHyperlinkExpectedValues.UIAlexeyStarkovHyperlinkControlType, uIAlexeyStarkovHyperlink.ControlType.ToString(), "No hyperlink available for (Alexey Starkov) in participants list.");
        }
        
        /// <summary>
        /// Verify the Participants Link exists for selection.
        /// </summary>
        public void AssertParticipantsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIParticipantsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIParticipantsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Participants' link equals 'Participants'
            Assert.AreEqual(this.AssertParticipantsLinkExpectedValues.UIParticipantsHyperlinkInnerText, uIParticipantsHyperlink.InnerText, "No Participants section in Content Menu");
        }
        
        /// <summary>
        /// Verify that the Participants List is available for view on the All Participants landing page.
        /// </summary>
        public void AssertParticipantsList()
        {
            #region Variable Declarations
            HtmlDiv uIParticipantsListShowPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UIParticipantsListShowPane;
            #endregion

            // Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Participants List Showing 1 - 25 of 1' pane contains 'Participants List
            //
            //Showing 1 - 25 of 1697 participants
            //
            //
            //
            //Name
            //
            //Type
            //
            //Status
            //
            // 
            //
            //
            //
            //
            //
            //  
            //
            //
            // 
            //Abdelatif Elboudjay
            //IndividualActive   
            // 
            //Abderahamane Ben Essayouti
            //IndividualActive   
            // 
            //Abdu Al-Hadhrami
            //IndividualActive   
            // 
            //Abdu Allah Al-Hadhrami
            //IndividualActive   
            // 
            //Abdul Habib Noori
            //IndividualActive   
            // 
            //Abdul Kuddus
            //IndividualActive   
            // 
            //Abdul Kuddus
            //IndividualActive   
            // 
            //Abdulkarim Shraim
            //IndividualActive   
            // 
            //Abdumijit Mamat’imin
            //IndividualActive   
            // 
            //Abdur Rahim
            //IndividualActive   
            // 
            //Abdurazaq Sayim
            //IndividualActive   
            // 
            //Abeer Al-Bawab
            //IndividualActive   
            // 
            //Ablikim Abdureshit
            //IndividualActive   
            // 
            //Abraham Cepo
            //IndividualActive   
            // 
            //Abu Raykhan Institute of Oriental Studies
            //Foreign Educational InstitutionActive   
            // 
            //Abu Sayeed M. Ahmed
            //IndividualActive   
            // 
            //Abubakar Tafawa Balewa Tomb
            //Foreign NGO/PVOActive   
            // 
            //Academy of Fine Arts and Design Bratislava
            //IndividualActive   
            // 
            //Academy of Sciences of Tajikistan
            //Foreign Educational InstitutionActive   
            // 
            //Adam Mickiewicz University
            //IndividualActive   
            // 
            //Addis Woubet
            //Foreign NGO/PVOActive   
            // 
            //Aden Hassan Aden
            //IndividualActive   
            // 
            //Adi Ćorović
            //IndividualActive   
            // 
            //Aditya
            //IndividualActive   
            // 
            //Adopt a Work of Art
            //Foreign NGO/PVOActive   
            // 
            //
            //
            //
            //
            //
            //
            //1
            //2
            //3
            //4
            //5
            //6
            //7
            //8
            //9
            //10'
            Playback.Wait(5000);
            StringAssert.Contains(uIParticipantsListShowPane.InnerText, this.AssertParticipantsListExpectedValues.UIParticipantsListShowPaneInnerText, "No Participants List Available.");
        }
        
        /// <summary>
        /// Close Browser Window; test complete.
        /// </summary>
        public void CloseBrowserWindow()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Perform Close on Browser Window
            uINewtabInternetExplorWindow.Close();
        }
        
        /// <summary>
        /// Open browser; navigate to QA site; login with ECATest creds
        /// </summary>
        public void LogintoQA()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UINewtabInternetExplorWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            WinEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIItemWindow.UIItemEdit;
            WinButton uIGotohttpsecakmtqaazuButton = this.UINewtabInternetExplorWindow.UIPageControlToolBar.UIGotohttpsecakmtqaazuButton;
            HtmlEdit uIUseraccountEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIUseraccountEdit;
            HtmlEdit uIPasswordEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIPasswordEdit;
            HtmlSpan uISigninPane = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UISigninPane;
            #endregion

            // Go to web page 'about:Tabs' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.LogintoQAParams.UINewtabInternetExplorWindowUrl));

            // Click 'Address and search using Google' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(34, 10));

            // Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
            Keyboard.SendKeys(uIItemEdit, this.LogintoQAParams.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt...' button
            Mouse.Click(uIGotohttpsecakmtqaazuButton, new Point(6, 12));

            // Type 'ECATest1@statedept.us' in 'User account' text box
            uIUseraccountEdit.Text = this.LogintoQAParams.UIUseraccountEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LogintoQAParams.UIPasswordEditPassword;

            // Double-Click 'Sign in' pane
            Mouse.DoubleClick(uISigninPane, new Point(25, 8));
        }
        
        /// <summary>
        /// Refresh/Reload All Participants Page for display.
        /// </summary>
        public void RefreshAllParticipantsPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIParticipantsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UICbpspmenus1Custom.UIParticipantsHyperlink;
            #endregion

            // Type '{F5}' in 'Participants' link
            Keyboard.SendKeys(uIParticipantsHyperlink, this.RefreshAllParticipantsPageParams.UIParticipantsHyperlinkSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Click the Content Menu button to expand the menu and view the list of sections.
        /// </summary>
        public void SelectContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Click 'Toggle navigation' button
            Mouse.Click(uITogglenavigationButton, new Point(19, 18));
        }
        
        /// <summary>
        /// Select Page #(3) to navigate to this page of the participant list.
        /// </summary>
        public void SelectPageCustomControl()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UISortlistPane.UIItemCustom;
            #endregion

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(17, 17));
        }
        
        /// <summary>
        /// Click on the Participants link in the Content Menu to navigate to the All Participants page.
        /// </summary>
        public void SelectParticipantsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIParticipantsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIParticipantsHyperlink;
            #endregion

            // Click 'Participants' link
            Mouse.Click(uIParticipantsHyperlink, new Point(61, 32));
        }
        
        #region Properties
        public virtual AssertContentMenuButtonExpectedValues AssertContentMenuButtonExpectedValues
        {
            get
            {
                if ((this.mAssertContentMenuButtonExpectedValues == null))
                {
                    this.mAssertContentMenuButtonExpectedValues = new AssertContentMenuButtonExpectedValues();
                }
                return this.mAssertContentMenuButtonExpectedValues;
            }
        }
        
        public virtual AssertPageNumberCustomControlExpectedValues AssertPageNumberCustomControlExpectedValues
        {
            get
            {
                if ((this.mAssertPageNumberCustomControlExpectedValues == null))
                {
                    this.mAssertPageNumberCustomControlExpectedValues = new AssertPageNumberCustomControlExpectedValues();
                }
                return this.mAssertPageNumberCustomControlExpectedValues;
            }
        }
        
        public virtual AssertPageNumberParticipantsListExpectedValues AssertPageNumberParticipantsListExpectedValues
        {
            get
            {
                if ((this.mAssertPageNumberParticipantsListExpectedValues == null))
                {
                    this.mAssertPageNumberParticipantsListExpectedValues = new AssertPageNumberParticipantsListExpectedValues();
                }
                return this.mAssertPageNumberParticipantsListExpectedValues;
            }
        }
        
        public virtual AssertParticipant_NameandHyperlinkExpectedValues AssertParticipant_NameandHyperlinkExpectedValues
        {
            get
            {
                if ((this.mAssertParticipant_NameandHyperlinkExpectedValues == null))
                {
                    this.mAssertParticipant_NameandHyperlinkExpectedValues = new AssertParticipant_NameandHyperlinkExpectedValues();
                }
                return this.mAssertParticipant_NameandHyperlinkExpectedValues;
            }
        }
        
        public virtual AssertParticipantsLinkExpectedValues AssertParticipantsLinkExpectedValues
        {
            get
            {
                if ((this.mAssertParticipantsLinkExpectedValues == null))
                {
                    this.mAssertParticipantsLinkExpectedValues = new AssertParticipantsLinkExpectedValues();
                }
                return this.mAssertParticipantsLinkExpectedValues;
            }
        }
        
        public virtual AssertParticipantsListExpectedValues AssertParticipantsListExpectedValues
        {
            get
            {
                if ((this.mAssertParticipantsListExpectedValues == null))
                {
                    this.mAssertParticipantsListExpectedValues = new AssertParticipantsListExpectedValues();
                }
                return this.mAssertParticipantsListExpectedValues;
            }
        }
        
        public virtual LogintoQAParams LogintoQAParams
        {
            get
            {
                if ((this.mLogintoQAParams == null))
                {
                    this.mLogintoQAParams = new LogintoQAParams();
                }
                return this.mLogintoQAParams;
            }
        }
        
        public virtual RefreshAllParticipantsPageParams RefreshAllParticipantsPageParams
        {
            get
            {
                if ((this.mRefreshAllParticipantsPageParams == null))
                {
                    this.mRefreshAllParticipantsPageParams = new RefreshAllParticipantsPageParams();
                }
                return this.mRefreshAllParticipantsPageParams;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertContentMenuButtonExpectedValues mAssertContentMenuButtonExpectedValues;
        
        private AssertPageNumberCustomControlExpectedValues mAssertPageNumberCustomControlExpectedValues;
        
        private AssertPageNumberParticipantsListExpectedValues mAssertPageNumberParticipantsListExpectedValues;
        
        private AssertParticipant_NameandHyperlinkExpectedValues mAssertParticipant_NameandHyperlinkExpectedValues;
        
        private AssertParticipantsLinkExpectedValues mAssertParticipantsLinkExpectedValues;
        
        private AssertParticipantsListExpectedValues mAssertParticipantsListExpectedValues;
        
        private LogintoQAParams mLogintoQAParams;
        
        private RefreshAllParticipantsPageParams mRefreshAllParticipantsPageParams;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertContentMenuButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertContentMenuButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
        /// </summary>
        public string UITogglenavigationButtonControlType = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPageNumberCustomControl'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertPageNumberCustomControlExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of custom control equals '3'
        /// </summary>
        public string UIItemCustomInnerText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPageNumberParticipantsList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertPageNumberParticipantsListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Participants List Showing 51 - 75 of' pane contains 'Participants List
        ///
        ///Showing 51 - 75 of 1697 participants
        ///
        ///
        ///
        ///Name
        ///
        ///Type
        ///
        ///Status
        ///
        /// 
        ///
        ///
        ///
        ///
        ///
        ///  
        ///
        ///
        /// 
        ///Albanian Music Council
        ///Foreign NGO/PVOActive   
        /// 
        ///Albert Bienvenu Akoha
        ///IndividualActive   
        /// 
        ///Alcaldia de Vara de Monimbó
        ///Foreign NGO/PVOActive   
        /// 
        ///Alek Tamaryan
        ///IndividualActive   
        /// 
        ///Aleksandar Dajkpvic
        ///IndividualActive   
        /// 
        ///Aleksandr Ramaswamy
        ///IndividualActive   
        /// 
        ///Alessandra Peruzzetto
        ///IndividualActive   
        /// 
        ///Alex Sarra
        ///IndividualActive   
        /// 
        ///Alexander Rubashvili
        ///IndividualActive   
        /// 
        ///Alexandra Wilson
        ///IndividualActive   
        /// 
        ///Alexey Kirichenko
        ///IndividualActive   
        /// 
        ///Alexey Starkov
        ///IndividualActive   
        /// 
        ///Alfredo Pinillos Ganoza
        ///IndividualActive   
        /// 
        ///Ali Ghopur
        ///IndividualActive   
        /// 
        ///Ali Hassan Mwarora
        ///IndividualActive   
        /// 
        ///Aliya Urmanova
        ///IndividualActive   
        /// 
        ///Alliance for Ecotourism
        ///Foreign NGO/PVOActive   
        /// 
        ///Alma Mekondjo Nankela
        ///IndividualActive   
        /// 
        ///Alok Tuladhar
        ///IndividualActive   
        /// 
        ///Alson Kelen
        ///IndividualActive   
        /// 
        ///Aman Ullah Mitsui
        ///IndividualActive   
        /// 
        ///Amanda Batson
        ///IndividualActive   
        /// 
        ///Amanda Eyre
        ///IndividualActive   
        /// 
        ///Amanda Koster
        ///IndividualActive   
        /// 
        ///Amanda Thomas Trienens
        ///IndividualActive   
        /// 
        ///
        ///
        ///
        ///
        ///
        ///
        ///1
        ///2
        ///3
        ///4
        ///5
        ///6
        ///7
        ///8
        ///9
        ///10'
        /// </summary>
        public string UIParticipantsListShowPane1InnerText = @"Participants List

Showing 51 - 75 of 1697 participants



Name

Type

Status

 





  


 
Albanian Music Council
Foreign NGO/PVOActive   
 
Albert Bienvenu Akoha
IndividualActive   
 
Alcaldia de Vara de Monimbó
Foreign NGO/PVOActive   
 
Alek Tamaryan
IndividualActive   
 
Aleksandar Dajkpvic
IndividualActive   
 
Aleksandr Ramaswamy
IndividualActive   
 
Alessandra Peruzzetto
IndividualActive   
 
Alex Sarra
IndividualActive   
 
Alexander Rubashvili
IndividualActive   
 
Alexandra Wilson
IndividualActive   
 
Alexey Kirichenko
IndividualActive   
 
Alexey Starkov
IndividualActive   
 
Alfredo Pinillos Ganoza
IndividualActive   
 
Ali Ghopur
IndividualActive   
 
Ali Hassan Mwarora
IndividualActive   
 
Aliya Urmanova
IndividualActive   
 
Alliance for Ecotourism
Foreign NGO/PVOActive   
 
Alma Mekondjo Nankela
IndividualActive   
 
Alok Tuladhar
IndividualActive   
 
Alson Kelen
IndividualActive   
 
Aman Ullah Mitsui
IndividualActive   
 
Amanda Batson
IndividualActive   
 
Amanda Eyre
IndividualActive   
 
Amanda Koster
IndividualActive   
 
Amanda Thomas Trienens
IndividualActive   
 






1
2
3
4
5
6
7
8
9
10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipant_NameandHyperlink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertParticipant_NameandHyperlinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Alexey Starkov' link equals 'Alexey Starkov'
        /// </summary>
        public string UIAlexeyStarkovHyperlinkInnerText = "Alexey Starkov";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Alexey Starkov' link equals 'Hyperlink'
        /// </summary>
        public string UIAlexeyStarkovHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipantsLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertParticipantsLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Participants' link equals 'Participants'
        /// </summary>
        public string UIParticipantsHyperlinkInnerText = "Participants";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertParticipantsList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertParticipantsListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Participants List Showing 1 - 25 of 1' pane contains 'Participants List
        ///
        ///Showing 1 - 25 of 1697 participants
        ///
        ///
        ///
        ///Name
        ///
        ///Type
        ///
        ///Status
        ///
        /// 
        ///
        ///
        ///
        ///
        ///
        ///  
        ///
        ///
        /// 
        ///Abdelatif Elboudjay
        ///IndividualActive   
        /// 
        ///Abderahamane Ben Essayouti
        ///IndividualActive   
        /// 
        ///Abdu Al-Hadhrami
        ///IndividualActive   
        /// 
        ///Abdu Allah Al-Hadhrami
        ///IndividualActive   
        /// 
        ///Abdul Habib Noori
        ///IndividualActive   
        /// 
        ///Abdul Kuddus
        ///IndividualActive   
        /// 
        ///Abdul Kuddus
        ///IndividualActive   
        /// 
        ///Abdulkarim Shraim
        ///IndividualActive   
        /// 
        ///Abdumijit Mamat’imin
        ///IndividualActive   
        /// 
        ///Abdur Rahim
        ///IndividualActive   
        /// 
        ///Abdurazaq Sayim
        ///IndividualActive   
        /// 
        ///Abeer Al-Bawab
        ///IndividualActive   
        /// 
        ///Ablikim Abdureshit
        ///IndividualActive   
        /// 
        ///Abraham Cepo
        ///IndividualActive   
        /// 
        ///Abu Raykhan Institute of Oriental Studies
        ///Foreign Educational InstitutionActive   
        /// 
        ///Abu Sayeed M. Ahmed
        ///IndividualActive   
        /// 
        ///Abubakar Tafawa Balewa Tomb
        ///Foreign NGO/PVOActive   
        /// 
        ///Academy of Fine Arts and Design Bratislava
        ///IndividualActive   
        /// 
        ///Academy of Sciences of Tajikistan
        ///Foreign Educational InstitutionActive   
        /// 
        ///Adam Mickiewicz University
        ///IndividualActive   
        /// 
        ///Addis Woubet
        ///Foreign NGO/PVOActive   
        /// 
        ///Aden Hassan Aden
        ///IndividualActive   
        /// 
        ///Adi Ćorović
        ///IndividualActive   
        /// 
        ///Aditya
        ///IndividualActive   
        /// 
        ///Adopt a Work of Art
        ///Foreign NGO/PVOActive   
        /// 
        ///
        ///
        ///
        ///
        ///
        ///
        ///1
        ///2
        ///3
        ///4
        ///5
        ///6
        ///7
        ///8
        ///9
        ///10'
        /// </summary>
        public string UIParticipantsListShowPaneInnerText = @"Participants List

Showing 1 - 25 of 1697 participants



Name

Type

Status

 





  


 
Abdelatif Elboudjay
IndividualActive   
 
Abderahamane Ben Essayouti
IndividualActive   
 
Abdu Al-Hadhrami
IndividualActive   
 
Abdu Allah Al-Hadhrami
IndividualActive   
 
Abdul Habib Noori
IndividualActive   
 
Abdul Kuddus
IndividualActive   
 
Abdul Kuddus
IndividualActive   
 
Abdulkarim Shraim
IndividualActive   
 
Abdumijit Mamat’imin
IndividualActive   
 
Abdur Rahim
IndividualActive   
 
Abdurazaq Sayim
IndividualActive   
 
Abeer Al-Bawab
IndividualActive   
 
Ablikim Abdureshit
IndividualActive   
 
Abraham Cepo
IndividualActive   
 
Abu Raykhan Institute of Oriental Studies
Foreign Educational InstitutionActive   
 
Abu Sayeed M. Ahmed
IndividualActive   
 
Abubakar Tafawa Balewa Tomb
Foreign NGO/PVOActive   
 
Academy of Fine Arts and Design Bratislava
IndividualActive   
 
Academy of Sciences of Tajikistan
Foreign Educational InstitutionActive   
 
Adam Mickiewicz University
IndividualActive   
 
Addis Woubet
Foreign NGO/PVOActive   
 
Aden Hassan Aden
IndividualActive   
 
Adi Ćorović
IndividualActive   
 
Aditya
IndividualActive   
 
Adopt a Work of Art
Foreign NGO/PVOActive   
 






1
2
3
4
5
6
7
8
9
10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogintoQA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class LogintoQAParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:Tabs' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "about:Tabs";
        
        /// <summary>
        /// Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
        /// </summary>
        public string UIItemEditSendKeys = "https://eca-kmt-qa.azurewebsites.net/";
        
        /// <summary>
        /// Type 'ECATest1@statedept.us' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditText = "ECATest1@statedept.us";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pnl8gvcmh7nq2IDxDyIPucvLUfiP5WCkCWyYApPZam4=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RefreshAllParticipantsPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RefreshAllParticipantsPageParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{F5}' in 'Participants' link
        /// </summary>
        public string UIParticipantsHyperlinkSendKeys = "{F5}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPageControlToolBar UIPageControlToolBar
        {
            get
            {
                if ((this.mUIPageControlToolBar == null))
                {
                    this.mUIPageControlToolBar = new UIPageControlToolBar(this);
                }
                return this.mUIPageControlToolBar;
            }
        }
        
        public UISignintoAzureActiveDDocument UISignintoAzureActiveDDocument
        {
            get
            {
                if ((this.mUISignintoAzureActiveDDocument == null))
                {
                    this.mUISignintoAzureActiveDDocument = new UISignintoAzureActiveDDocument(this);
                }
                return this.mUISignintoAzureActiveDDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument UIHttpsecakmtqaazureweDocument
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument = new UIHttpsecakmtqaazureweDocument(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument1 UIHttpsecakmtqaazureweDocument1
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument1 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument1 = new UIHttpsecakmtqaazureweDocument1(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument1;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument2 UIHttpsecakmtqaazureweDocument2
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument2 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument2 = new UIHttpsecakmtqaazureweDocument2(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIPageControlToolBar mUIPageControlToolBar;
        
        private UISignintoAzureActiveDDocument mUISignintoAzureActiveDDocument;
        
        private UIHttpsecakmtqaazureweDocument mUIHttpsecakmtqaazureweDocument;
        
        private UIHttpsecakmtqaazureweDocument1 mUIHttpsecakmtqaazureweDocument1;
        
        private UIHttpsecakmtqaazureweDocument2 mUIHttpsecakmtqaazureweDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Google";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Address and search using Google";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPageControlToolBar : WinToolBar
    {
        
        public UIPageControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Page Control";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinButton UIGotohttpsecakmtqaazuButton
        {
            get
            {
                if ((this.mUIGotohttpsecakmtqaazuButton == null))
                {
                    this.mUIGotohttpsecakmtqaazuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGotohttpsecakmtqaazuButton.SearchProperties[WinButton.PropertyNames.Name] = "Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt+Enter to open in a new tab)";
                    this.mUIGotohttpsecakmtqaazuButton.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIGotohttpsecakmtqaazuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGotohttpsecakmtqaazuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoAzureActiveDDocument : HtmlDocument
    {
        
        public UISignintoAzureActiveDDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to Azure Active Directory";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/login.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/login.srf?wa=wsignin1.0&wtrealm=https%3a%2f%2flogin.windows.net&wreply=https%3a%2f%2flogin.windows.net%2fstatedept.us%2fwsfederation&wctx=3wEBD09BdXRoMkF1dGhvcml6ZQEPT0F1dGgyQXV0aG9yaXplAQxzdGF0ZWRlcHQudXMBAQEVb3BlbmlkY29ubmVjdC5pZHRva2VuAAABASRlMDM1NmU1NS1lMTI0LTQ1MmMtODM3ZC1hZWI3NTA0MTg1ZmYBJWh0dHBzOi8vZWNhLWttdC1xYS5henVyZXdlYnNpdGVzLm5ldC8AAAAAAAAAAAAAAQEaAAAAASVodHRwczovL2VjYS1rbXQtcWEuYXp1cmV3ZWJzaXRlcy5uZXQvAQkBCGFkYWxfdmVyAQUwLjAuNwEDY2lkASQ1NjdjZTk3OC0yYmMwLTQyMzQtYWJlNy1mNmZjZTI5MzRhNGUBCWVycm9yX3VyaQElaHR0cHM6Ly9lY2Eta210LXFhLmF6dXJld2Vic2l0ZXMubmV0LwEPaW5jbHVkZV9hdF9oYXNoAQExAQtpbnRlcmFjdGl2ZQEBMQEFTm9uY2UBJDlmNWI3ZDc1LWM1NGEtNDRlZi1hMDFmLTVhYTM2NWI0YThmMQECcmMBJGViYjU3NGYwLTk4MmEtNDRkNC1iNmIyLWY4OTFjMmExYjA4YQEJc2Vzc2lvbklkASRlZTQwMmY1MC1mMjBmLTRkNWEtYWNhZC0zNmM0OTVmNzU5YWIBD2xpbWl0X3Rva2Vuc2l6ZQEBMe01&wp=MBI_FED_SSL&id=";
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIUseraccountEdit
        {
            get
            {
                if ((this.mUIUseraccountEdit == null))
                {
                    this.mUIUseraccountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_userid_inputtext";
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User account";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required email field normaltext";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login\" tabindex=\"1\" class=\"login_t";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUseraccountEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIUseraccountEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state\" " +
                        "id=\"cred_sign_in_button\" role=\"button\" style=\"opacity: 1;\" onclick=\"Post.SubmitC" +
                        "reds();return false;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIUseraccountEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public UICbpspmenus1Custom UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUITogglenavigationButton;
        
        private UICbpspmenus1Custom mUICbpspmenus1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbpspmenus1Custom : HtmlCustom
    {
        
        public UICbpspmenus1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIParticipantsHyperlink
        {
            get
            {
                if ((this.mUIParticipantsHyperlink == null))
                {
                    this.mUIParticipantsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Participants";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/allparticipants/1";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allp";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIParticipantsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIParticipantsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIParticipantsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument1 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/allparticipants/1#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UICbpspmenus1Custom1 UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom1(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        
        public UITopPane UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane(this);
                }
                return this.mUITopPane;
            }
        }
        
        public UISortlistPane UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane(this);
                }
                return this.mUISortlistPane;
            }
        }
        #endregion
        
        #region Fields
        private UICbpspmenus1Custom1 mUICbpspmenus1Custom;
        
        private UITopPane mUITopPane;
        
        private UISortlistPane mUISortlistPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbpspmenus1Custom1 : HtmlCustom
    {
        
        public UICbpspmenus1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIParticipantsHyperlink
        {
            get
            {
                if ((this.mUIParticipantsHyperlink == null))
                {
                    this.mUIParticipantsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIParticipantsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Participants";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/allparticipants/1";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allp";
                    this.mUIParticipantsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIParticipantsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIParticipantsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIParticipantsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane : HtmlDiv
    {
        
        public UITopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants\r\n\r\n\r\nParticipants List\r\n\r\nS";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIParticipantsListShowPane
        {
            get
            {
                if ((this.mUIParticipantsListShowPane == null))
                {
                    this.mUIParticipantsListShowPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIParticipantsListShowPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIParticipantsListShowPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants List\r\n\r\nShowing 1 - 25 of 1";
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container ng-scope";
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container ng-scope\"";
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "27";
                    this.mUIParticipantsListShowPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIParticipantsListShowPane;
            }
        }
        
        public HtmlDiv UIParticipantsListShowPane1
        {
            get
            {
                if ((this.mUIParticipantsListShowPane1 == null))
                {
                    this.mUIParticipantsListShowPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIParticipantsListShowPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIParticipantsListShowPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIParticipantsListShowPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants List\r\n\r\nShowing 51 - 75 of ";
                    this.mUIParticipantsListShowPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIParticipantsListShowPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "container ng-scope";
                    this.mUIParticipantsListShowPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container ng-scope\"";
                    this.mUIParticipantsListShowPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "27";
                    this.mUIParticipantsListShowPane1.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIParticipantsListShowPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIParticipantsListShowPane;
        
        private HtmlDiv mUIParticipantsListShowPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane : HtmlDiv
    {
        
        public UISortlistPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Name\r\n\r\nType\r\n\r\nStatus\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"participants\" st-pipe=\"getParti" +
                "cipants\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "ng-binding";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"ng-binding\" ng-click=\"selectPage(";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "28";
                    this.mUIItemCustom.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument2 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane1 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane1(this);
                }
                return this.mUISortlistPane;
            }
        }
        
        public UITopPane1 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane1(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane1 mUISortlistPane;
        
        private UITopPane1 mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane1 : HtmlDiv
    {
        
        public UISortlistPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Name\r\n\r\nType\r\n\r\nStatus\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"participants\" st-pipe=\"getParti" +
                "cipants\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "ng-binding";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"ng-binding\" ng-click=\"selectPage(";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "28";
                    this.mUIItemCustom.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlHyperlink UIAlexeyStarkovHyperlink
        {
            get
            {
                if ((this.mUIAlexeyStarkovHyperlink == null))
                {
                    this.mUIAlexeyStarkovHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAlexeyStarkovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAlexeyStarkovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAlexeyStarkovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAlexeyStarkovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Alexey Starkov";
                    this.mUIAlexeyStarkovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIAlexeyStarkovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAlexeyStarkovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/people/446/activity";
                    this.mUIAlexeyStarkovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIAlexeyStarkovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/people/446/ac";
                    this.mUIAlexeyStarkovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "12";
                    this.mUIAlexeyStarkovHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIAlexeyStarkovHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        
        private HtmlHyperlink mUIAlexeyStarkovHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane1 : HtmlDiv
    {
        
        public UITopPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants\r\n\r\n\r\nParticipants List\r\n\r\nS";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIParticipantsListShowPane
        {
            get
            {
                if ((this.mUIParticipantsListShowPane == null))
                {
                    this.mUIParticipantsListShowPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIParticipantsListShowPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIParticipantsListShowPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Participants List\r\n\r\nShowing 51 - 75 of ";
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container ng-scope";
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container ng-scope\"";
                    this.mUIParticipantsListShowPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "27";
                    this.mUIParticipantsListShowPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIParticipantsListShowPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIParticipantsListShowPane;
        #endregion
    }
}
