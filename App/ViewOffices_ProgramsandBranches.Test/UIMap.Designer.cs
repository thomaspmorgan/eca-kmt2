// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ViewOffices_ProgramsandBranches.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Verify the Content Menu button is available to toggle and expand to display the Content Menu sections.
        /// </summary>
        public void AssertContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
            Assert.AreEqual(this.AssertContentMenuButtonExpectedValues.UITogglenavigationButtonControlType, uITogglenavigationButton.ControlType.ToString(), "No Content Menu button available.");
        }
        
        /// <summary>
        /// Verify Branches & Programs tab is available for selection; check innertext; check control type for hyperlink.
        /// </summary>
        public void AssertIndividualOffice_BranchesandPrograms()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UITopPane1.UIBranchesProgramsHyperlink;
            #endregion

            // Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Branches & Programs' link contains 'Branches & Programs'
            Playback.Wait(5000);
            StringAssert.Contains(uIBranchesProgramsHyperlink.InnerText, this.AssertIndividualOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkInnerText, "No branches and programs tab innertext available.");

            // Verify that the 'ControlType' property of 'Branches & Programs' link contains 'Hyperlink'
            StringAssert.Contains(uIBranchesProgramsHyperlink.ControlType.ToString(), this.AssertIndividualOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkControlType, "No branches and programs tab control type hyperlink available.");
        }
        
        /// <summary>
        /// Verify the branch list displays for the (Office of Academic Exchanges); check innertext
        /// </summary>
        public void AssertIndividualOffice_BranchList()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITopPane1.UIItemCustom;
            #endregion

            // Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of custom control contains ' 
            //Branch
            //AF Branch 
            // 
            //Branch
            //EAP Branch 
            // 
            //Branch
            //EUR Branch 
            // 
            //Branch
            //NEA Branch 
            // 
            //Branch
            //SCA Branch 
            // 
            //Branch
            //WHA Branch 
            // 
            //Branch
            //Study of the U.S. Branch 
            // '
            Playback.Wait(5000);
            StringAssert.Contains(uIItemCustom.InnerText, this.AssertIndividualOffice_BranchListExpectedValues.UIItemCustomInnerText, "No innertext branch list available.");
        }
        
        /// <summary>
        /// Verify the innertext and controltype are available for the program in the list under the individual office. (Fulbright Visiting Scholar Program)
        /// </summary>
        public void AssertIndividualOffice_Program()
        {
            #region Variable Declarations
            HtmlHyperlink uIFulbrightVisitingSchHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane.UIFulbrightVisitingSchHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Fulbright Visiting Scholar Program' link equals 'Fulbright Visiting Scholar Program'
            Assert.AreEqual(this.AssertIndividualOffice_ProgramExpectedValues.UIFulbrightVisitingSchHyperlinkInnerText, uIFulbrightVisitingSchHyperlink.InnerText, "No individual program available (Fulbright Visiting Scholar Program) in Program l" +
                    "ist for the individual office.");

            // Verify that the 'ControlType' property of 'Fulbright Visiting Scholar Program' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertIndividualOffice_ProgramExpectedValues.UIFulbrightVisitingSchHyperlinkControlType, uIFulbrightVisitingSchHyperlink.ControlType.ToString(), "No Hyperlink available for (Fulbright Visiting Scholar Program) in the Program li" +
                    "st for the individual office.");
        }
        
        /// <summary>
        /// Verify the innertext for the cell and inside the cell line item for (ECA/A/E Fulbright Visiting Scholar Program). Two checks for this program on innertext.
        /// </summary>
        public void AssertIndividualOffice_ProgramNameDescription()
        {
            #region Variable Declarations
            HtmlCell uIECAAEFulbrightVisitiCell = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane1.UIItemTable.UIECAAEFulbrightVisitiCell;
            HtmlDiv uIECAAEFulbrightVisitiPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane1.UIECAAEFulbrightVisitiPane;
            #endregion

            // Verify that the 'InnerText' property of 'ECA/A/E Fulbright Visiting Scholar Pro' cell contains 'ECA/A/E 
            //Fulbright Visiting Scholar Program 
            //
            //Supports foreign scholars to conduct post-doctoral research and university lecturing at U.S. institutions for an academic year or term.'
            StringAssert.Contains(uIECAAEFulbrightVisitiCell.InnerText, this.AssertIndividualOffice_ProgramNameDescriptionExpectedValues.UIECAAEFulbrightVisitiCellInnerText, "No InnerText for (ECA/A/E Fulbright Visiting Scholar Program and Description)");

            // Verify that the 'InnerText' property of 'ECA/A/E Fulbright Visiting Scholar Pro' pane contains 'ECA/A/E 
            //Fulbright Visiting Scholar Program 
            //
            //Supports foreign scholars to conduct post-doctoral research and university lecturing at U.S. institutions for an academic year or term.'
            StringAssert.Contains(uIECAAEFulbrightVisitiPane.InnerText, this.AssertIndividualOffice_ProgramNameDescriptionExpectedValues.UIECAAEFulbrightVisitiPaneInnerText, "No innertext for inside the cell line item for (ECA/A/E Fulbright Visiting Schola" +
                    "r Program and Description).");
        }
        
        /// <summary>
        /// Verify the Offices link is available for selection; check inner text; check controltype.
        /// </summary>
        public void AssertOfficesContentMenuLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIOfficesHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIOfficesHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Offices' link equals 'Offices'
            Assert.AreEqual(this.AssertOfficesContentMenuLinkExpectedValues.UIOfficesHyperlinkInnerText, uIOfficesHyperlink.InnerText, "No Offices Inner Text available.");

            // Verify that the 'ControlType' property of 'Offices' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertOfficesContentMenuLinkExpectedValues.UIOfficesHyperlinkControlType, uIOfficesHyperlink.ControlType.ToString(), "No Offices hyperlink ControlType available.");
        }
        
        /// <summary>
        /// Verify the innertext of the returned search result to contain (ECA-IIP/EX Office of the Executive Director).
        /// </summary>
        public void AssertOfficeSearchResult_SecOffice()
        {
            #region Variable Declarations
            HtmlCell uIECAIIPEXOfficeoftheECell = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument7.UISortlistPane1.UIItemTable.UIECAIIPEXOfficeoftheECell;
            #endregion

            // Wait for 10 seconds for user delay between actions; Verify that the 'InnerText' property of 'ECA-IIP/EX Office of the Executive Dir' cell contains 'ECA-IIP/EX 
            //Office of the Executive Director
            //
            //The Office of the Executive Director (ECA-IIP/EX) reports to the ECA PDAS and IIP Deputy Coordinator and supports the operations of the Bureau of Educational and Cultural Affairs and the Bureau of International Information Programs. We strive to efficiently, effectively support ECA and IIP in realizing their program objectives by providing the highest quality customer service in administrative support, budget and financial management, grants, human resources, information technology, and management analysis.'
            Playback.Wait(10000);
            StringAssert.Contains(uIECAIIPEXOfficeoftheECell.InnerText, this.AssertOfficeSearchResult_SecOfficeExpectedValues.UIECAIIPEXOfficeoftheECellInnerText, "No available innertext for search result of (IIP) for the (ECA-IIP/EX Office of t" +
                    "he Executive Director) cell.");
        }
        
        /// <summary>
        /// Verify the search box text input value is the same as the entry (American)
        /// </summary>
        public void AssertSearchBoxTextInputValue()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument5.UISortlistPane1.UIItemEdit;
            #endregion

            // Verify that the 'ValueAttribute' property of text box contains 'American'
            StringAssert.Contains(uIItemEdit.ValueAttribute, this.AssertSearchBoxTextInputValueExpectedValues.UIItemEditValueAttribute, "Text Input does not match.");
        }
        
        /// <summary>
        /// Verify Search Offices text box is available for input to search for an office.
        /// </summary>
        public void AssertSearchOfficesTextBox_SecOffice()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument7.UISortlistPane.UIItemEdit;
            #endregion

            // Verify that the 'ControlType' property of text box equals 'Edit'
            Assert.AreEqual(this.AssertSearchOfficesTextBox_SecOfficeExpectedValues.UIItemEditControlType, uIItemEdit.ControlType.ToString(), "No Search Offices field available for searching.");
        }
        
        /// <summary>
        /// Verify the Search Programs box is available on the individual office's Branches and Programs page; check class; check controltype.
        /// </summary>
        public void AssertSearchProgramsTextBox()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane.UIItemEdit;
            #endregion

            // Verify that the 'ControlType' property of text box equals 'Edit'
            Assert.AreEqual(this.AssertSearchProgramsTextBoxExpectedValues.UIItemEditControlType, uIItemEdit.ControlType.ToString(), "No Search box for Search Programs.");

            // Verify that the 'Class' property of text box equals 'search-contextual'
            Assert.AreEqual(this.AssertSearchProgramsTextBoxExpectedValues.UIItemEditClass, uIItemEdit.Class, "No Class for search-contextual box for Search Programs.");
        }
        
        /// <summary>
        /// Verify the (ECA-IIP/EX) office is available for selection on the Office Directory landing page.
        /// </summary>
        public void AssertSecondOffice()
        {
            #region Variable Declarations
            HtmlHyperlink uIECAIIPEXHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIECAIIPEXHyperlink;
            #endregion

            // Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'ECA-IIP/EX' link equals 'ECA-IIP/EX'
            Playback.Wait(5000);
            Assert.AreEqual(this.AssertSecondOfficeExpectedValues.UIECAIIPEXHyperlinkInnerText, uIECAIIPEXHyperlink.InnerText, "No ECA-IIP/EX innertext found.");

            // Verify that the 'ControlType' property of 'ECA-IIP/EX' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertSecondOfficeExpectedValues.UIECAIIPEXHyperlinkControlType, uIECAIIPEXHyperlink.ControlType.ToString(), "No hyperlink for (ECA-IIP/EX) found.");
        }
        
        /// <summary>
        /// Verify the tab for Branches and Programs is available for selection for the individual second office (ECA-IIP/EX).
        /// </summary>
        public void AssertSecondOffice_BranchesandPrograms()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument4.UITopPane.UIBranchesProgramsHyperlink;
            #endregion

            // Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Branches & Programs' link equals 'Branches & Programs'
            Playback.Wait(5000);
            Assert.AreEqual(this.AssertSecondOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkInnerText, uIBranchesProgramsHyperlink.InnerText, "No Branches and Programs innertext found for the tab under the individual office " +
                    "(ECA-IIP/EX)");

            // Verify that the 'ControlType' property of 'Branches & Programs' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertSecondOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkControlType, uIBranchesProgramsHyperlink.ControlType.ToString(), "No hyperlink available/ tab available for selection under the individual second o" +
                    "ffice. (ECA-IIP/EX)");
        }
        
        /// <summary>
        /// Verify the Sub-Program is displayed with the indent for the (ECA/A/E Fulbright English Teaching Assistant Program (ETA)).
        /// </summary>
        public void AssertSubProgramIndent()
        {
            #region Variable Declarations
            HtmlCell uIECAAEFulbrightEnglisCell = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane1.UIItemTable.UIECAAEFulbrightEnglisCell;
            HtmlDiv uIECAAEFulbrightEnglisPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane1.UIECAAEFulbrightEnglisPane;
            #endregion

            // Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'ECA/A/E Fulbright English Teaching Ass' cell contains 'ECA/A/E 
            //Fulbright English Teaching Assistant Program (ETA) 
            //
            //Places recent U.S. college graduates as English teaching assistants in schools or universities overseas, improving foreign studentsâ€™ English language abilities and knowledge of the United States while increasing their own language skills and knowledge of the host country.'
            Playback.Wait(5000);
            StringAssert.Contains(uIECAAEFulbrightEnglisCell.InnerText, this.AssertSubProgramIndentExpectedValues.UIECAAEFulbrightEnglisCellInnerText, "No available InnerText in cell for Sub-program (ECA/A/E Fulbright English Teachin" +
                    "g Assistant Program (ETA)). ");

            // Verify that the 'ControlDefinition' property of 'ECA/A/E Fulbright English Teaching Ass' pane equals 'style="margin-left: 60px;" ng-style="{marginLeft: (program.programLevel - 1) * 60}"'
            Assert.AreEqual(this.AssertSubProgramIndentExpectedValues.UIECAAEFulbrightEnglisPaneControlDefinition, uIECAAEFulbrightEnglisPane.ControlDefinition, "No style indent for Sub-program (ECA/A/E Fulbright English Teaching Assistant Pro" +
                    "gram (ETA)) for ControlDefinition.");
        }
        
        /// <summary>
        /// Clear the text from the Search Programs box.
        /// </summary>
        public void ClearSearchProgramsBox()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument5.UISortlistPane1.UIItemEdit;
            #endregion

            // Type '' in text box
            uIItemEdit.Text = this.ClearSearchProgramsBoxParams.UIItemEditText;
        }
        
        /// <summary>
        /// Close browser. End Test.
        /// </summary>
        public void CloseBrowserWindow()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Perform Close on Browser Window
            uINewtabInternetExplorWindow.Close();
        }
        
        /// <summary>
        /// Open browser; navigate to QA site; input ECATest creds; click sign in
        /// </summary>
        public void LogintoQA()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UINewtabInternetExplorWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            WinEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIItemWindow.UIItemEdit;
            WinButton uIGotohttpsecakmtqaazuButton = this.UINewtabInternetExplorWindow.UIPageControlToolBar.UIGotohttpsecakmtqaazuButton;
            HtmlEdit uIUseraccountEdit = this.UINewtabInternetExplorWindow.UISignintoECAClientDocument.UIUseraccountEdit;
            HtmlEdit uIPasswordEdit = this.UINewtabInternetExplorWindow.UISignintoECAClientDocument.UIPasswordEdit;
            HtmlSpan uISigninPane = this.UINewtabInternetExplorWindow.UISignintoECAClientDocument.UISigninPane;
            #endregion

            // Go to web page 'about:Tabs' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.LogintoQAParams.UINewtabInternetExplorWindowUrl));

            // Click 'Address and search using Bing' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(64, 12));

            // Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
            Keyboard.SendKeys(uIItemEdit, this.LogintoQAParams.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt...' button
            Mouse.Click(uIGotohttpsecakmtqaazuButton, new Point(6, 10));

            // Type 'ECATest1@statedept.us' in 'User account' text box
            uIUseraccountEdit.Text = this.LogintoQAParams.UIUseraccountEditText;

            // Type '{Tab}' in 'User account' text box
            Keyboard.SendKeys(uIUseraccountEdit, this.LogintoQAParams.UIUseraccountEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LogintoQAParams.UIPasswordEditPassword;

            // Double-Click 'Sign in' pane
            Mouse.DoubleClick(uISigninPane, new Point(28, 6));
        }
        
        /// <summary>
        /// Open browser; navigate to QA site; select ECATest user; enter password; click sign in.
        /// </summary>
        public void LogintoQA_ExistingUser()
        {
            #region Variable Declarations
            HtmlHyperlink uIECATest1statedeptusHyperlink = this.UINewtabInternetExplorWindow.UISignintoECAClientDocument1.UIECATest1statedeptusHyperlink;
            HtmlEdit uIPasswordEdit = this.UINewtabInternetExplorWindow.UISignintoECAClientDocument1.UIPasswordEdit;
            HtmlSpan uISigninPane = this.UINewtabInternetExplorWindow.UISignintoECAClientDocument1.UISigninPane;
            #endregion

            // Go to web page 'https://eca-kmt-qa.azurewebsites.net/' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.LogintoQA_ExistingUserParams.UINewtabInternetExplorWindowUrl));

            // Click 'ECATest1@statedept.us •••' link
            Mouse.Click(uIECATest1statedeptusHyperlink, new Point(140, 38));

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LogintoQA_ExistingUserParams.UIPasswordEditPassword;

            // Click 'Sign in' pane
            Mouse.Click(uISigninPane, new Point(33, 24));
        }
        
        /// <summary>
        /// Toggle Content Menu to expand; select Offices link
        /// </summary>
        public void NavigatetoOfficeDirectory()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITogglenavigationButton;
            HtmlHyperlink uIOfficesHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UICbpspmenus1Custom.UIOfficesHyperlink;
            #endregion

            // Click 'Toggle navigation' button
            Mouse.Click(uITogglenavigationButton, new Point(21, 17));

            // Click 'Offices' link
            Mouse.Click(uIOfficesHyperlink, new Point(49, 35));
        }
        
        /// <summary>
        /// Refresh/Reload the page for Branches and Programs for display.
        /// </summary>
        public void RefreshBranchesandProgramsTab()
        {
            #region Variable Declarations
            HtmlDiv uIOverviewBranchesProgPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITopPane1.UIOverviewBranchesProgPane;
            #endregion

            // Click 'Overview Branches & Programs A' pane
            Mouse.Click(uIOverviewBranchesProgPane, new Point(505, 63));

            // Type '{F5}' in 'Overview Branches & Programs A' pane
            Keyboard.SendKeys(uIOverviewBranchesProgPane, this.RefreshBranchesandProgramsTabParams.UIOverviewBranchesProgPaneSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Perform refresh/reload on the page.
        /// </summary>
        public void RefreshECAOfficeDirectory()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Perform Refresh on Browser Window
            uINewtabInternetExplorWindow.Refresh();
        }
        
        /// <summary>
        /// Refresh/reload individual office page. (Office of Academic Exchange Programs)
        /// </summary>
        public void RefreshIndividualOfficePage()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Wait for 10 seconds for user delay between actions; Perform Refresh on Browser Window
            Playback.Wait(10000);
            uINewtabInternetExplorWindow.Refresh();
        }
        
        /// <summary>
        /// Refresh/Reload Office Overview page. (ECA-IIP/EX) office.
        /// </summary>
        public void RefreshOfficeOverview_SecOffice()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Perform Refresh on Browser Window
            uINewtabInternetExplorWindow.Refresh();
        }
        
        /// <summary>
        /// This removes any previous trace of prior sign ins to the ECA KMT QA site.
        /// </summary>
        public void RemoveExistingECAUser()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UINewtabInternetExplorWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            WinEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIItemWindow.UIItemEdit;
            WinButton uIGotohttpsecakmtqaazuButton = this.UINewtabInternetExplorWindow.UIPageControlToolBar.UIGotohttpsecakmtqaazuButton;
            WinButton uIToolsButton = this.UINewtabInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIApplyButton = this.UIInternetOptionsWindow.UIApplyWindow.UIApplyButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            WinButton uICloseButton = this.UINewtabInternetExplorWindow.UISignintoECAClientIntTitleBar.UICloseButton;
            #endregion

            // Go to web page 'about:Tabs' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.RemoveExistingECAUserParams.UINewtabInternetExplorWindowUrl));

            // Click 'Address and search using Bing' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(38, 6));

            // Type 'https{RShiftKey}://eca-kmt-qa.azurewebsites.net' in text box
            Keyboard.SendKeys(uIItemEdit, this.RemoveExistingECAUserParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '/' in text box
            Keyboard.SendKeys(uIItemEdit, this.RemoveExistingECAUserParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Click 'Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt...' button
            Mouse.Click(uIGotohttpsecakmtqaazuButton, new Point(6, 11));

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(8, 9));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(99, 13));

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(55, 12));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(51, 10));

            // Click '&Apply' button
            Mouse.Click(uIApplyButton, new Point(41, 7));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(56, 6));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(26, 9));
        }
        
        /// <summary>
        /// Enter search box text for filtering the Programs list (American).
        /// </summary>
        public void SearchBoxText_Input()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument5.UISortlistPane.UIItemEdit;
            #endregion

            // Type 'American' in text box
            uIItemEdit.Text = this.SearchBoxText_InputParams.UIItemEditText;
        }
        
        /// <summary>
        /// Input (IIP) into text box for search.
        /// </summary>
        public void SearchOfficesTextInput_SecOffice()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument7.UISortlistPane.UIItemEdit;
            #endregion

            // Type 'IIP' in text box
            uIItemEdit.Text = this.SearchOfficesTextInput_SecOfficeParams.UIItemEditText;
        }
        
        /// <summary>
        /// Select the Branches and Programs tab for the individual office.
        /// </summary>
        public void SelectBranchesandProgramsTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UITopPane.UIBranchesProgramsHyperlink;
            #endregion

            // Click 'Branches & Programs' link
            Mouse.Click(uIBranchesProgramsHyperlink, new Point(69, 8));

            // Click 'Branches & Programs' link
            Mouse.Click(uIBranchesProgramsHyperlink, new Point(77, 10));
        }
        
        /// <summary>
        /// Click the Content Menu button to expand the Content Menu and display the links for the menu sections.
        /// </summary>
        public void SelectContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Click 'Toggle navigation' button
            Mouse.Click(uITogglenavigationButton, new Point(16, 14));
        }
        
        /// <summary>
        /// Select the link (Office of Academic Exchanges) to navigate to the office landing page.
        /// </summary>
        public void SelectOfficeName()
        {
            #region Variable Declarations
            HtmlHyperlink uIOfficeofAcademicExchHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIOfficeofAcademicExchHyperlink;
            #endregion

            // Click 'Office of Academic Exchange Programs' link
            Mouse.Click(uIOfficeofAcademicExchHyperlink, new Point(211, 13));
        }
        
        /// <summary>
        /// Click the Offices link in the Content Menu.
        /// </summary>
        public void SelectOfficesContentMenuLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIOfficesHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIOfficesHyperlink;
            #endregion

            // Click 'Offices' link
            Mouse.Click(uIOfficesHyperlink, new Point(53, 33));
        }
        
        /// <summary>
        /// Select Offices link from content menu for display.
        /// </summary>
        public void SelectOfficesLink_ContentMenu()
        {
            #region Variable Declarations
            HtmlHyperlink uIOfficesHyperlink1 = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIOfficesHyperlink1;
            #endregion

            // Click 'Offices' link
            Mouse.Click(uIOfficesHyperlink1, new Point(45, 34));
        }
        
        /// <summary>
        /// Select the tab for the second office's Branches and Programs.
        /// </summary>
        public void SelectSecondBranchesandPrograms()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument4.UITopPane.UIBranchesProgramsHyperlink;
            #endregion

            // Click 'Branches & Programs' link
            Mouse.Click(uIBranchesProgramsHyperlink, new Point(68, 8));
        }
        
        /// <summary>
        /// Select the link to the (Office of the Executive Director) to navigate to the office overview page.
        /// </summary>
        public void SelectSecondOffice()
        {
            #region Variable Declarations
            HtmlHyperlink uIOfficeoftheExecutiveHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument7.UISortlistPane1.UIOfficeoftheExecutiveHyperlink;
            #endregion

            // Click 'Office of the Executive Director' link
            Mouse.Click(uIOfficeoftheExecutiveHyperlink, new Point(154, 16));
        }
        
        /// <summary>
        /// Enter URL for ECA Office Directory Page in address bar; navigate to; refresh page for display
        /// </summary>
        public void URLNav_ECAOfficeDirect()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            HtmlButton uITogglenavigationButton1 = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton1;
            #endregion

            // Go to web page 'https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top'
            uINewtabInternetExplorWindow.NavigateToUrl(new System.Uri(this.URLNav_ECAOfficeDirectParams.UINewtabInternetExplorWindowUrl));

            // Type '{F5}' in 'Toggle navigation' button
            Keyboard.SendKeys(uITogglenavigationButton1, this.URLNav_ECAOfficeDirectParams.UITogglenavigationButton1SendKeys, ModifierKeys.None);
        }
        
        #region Properties
        public virtual AssertContentMenuButtonExpectedValues AssertContentMenuButtonExpectedValues
        {
            get
            {
                if ((this.mAssertContentMenuButtonExpectedValues == null))
                {
                    this.mAssertContentMenuButtonExpectedValues = new AssertContentMenuButtonExpectedValues();
                }
                return this.mAssertContentMenuButtonExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_BranchesandProgramsExpectedValues AssertIndividualOffice_BranchesandProgramsExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_BranchesandProgramsExpectedValues == null))
                {
                    this.mAssertIndividualOffice_BranchesandProgramsExpectedValues = new AssertIndividualOffice_BranchesandProgramsExpectedValues();
                }
                return this.mAssertIndividualOffice_BranchesandProgramsExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_BranchListExpectedValues AssertIndividualOffice_BranchListExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_BranchListExpectedValues == null))
                {
                    this.mAssertIndividualOffice_BranchListExpectedValues = new AssertIndividualOffice_BranchListExpectedValues();
                }
                return this.mAssertIndividualOffice_BranchListExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_ProgramExpectedValues AssertIndividualOffice_ProgramExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_ProgramExpectedValues == null))
                {
                    this.mAssertIndividualOffice_ProgramExpectedValues = new AssertIndividualOffice_ProgramExpectedValues();
                }
                return this.mAssertIndividualOffice_ProgramExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_ProgramNameDescriptionExpectedValues AssertIndividualOffice_ProgramNameDescriptionExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_ProgramNameDescriptionExpectedValues == null))
                {
                    this.mAssertIndividualOffice_ProgramNameDescriptionExpectedValues = new AssertIndividualOffice_ProgramNameDescriptionExpectedValues();
                }
                return this.mAssertIndividualOffice_ProgramNameDescriptionExpectedValues;
            }
        }
        
        public virtual AssertOfficesContentMenuLinkExpectedValues AssertOfficesContentMenuLinkExpectedValues
        {
            get
            {
                if ((this.mAssertOfficesContentMenuLinkExpectedValues == null))
                {
                    this.mAssertOfficesContentMenuLinkExpectedValues = new AssertOfficesContentMenuLinkExpectedValues();
                }
                return this.mAssertOfficesContentMenuLinkExpectedValues;
            }
        }
        
        public virtual AssertOfficeSearchResult_SecOfficeExpectedValues AssertOfficeSearchResult_SecOfficeExpectedValues
        {
            get
            {
                if ((this.mAssertOfficeSearchResult_SecOfficeExpectedValues == null))
                {
                    this.mAssertOfficeSearchResult_SecOfficeExpectedValues = new AssertOfficeSearchResult_SecOfficeExpectedValues();
                }
                return this.mAssertOfficeSearchResult_SecOfficeExpectedValues;
            }
        }
        
        public virtual AssertSearchBoxTextInputValueExpectedValues AssertSearchBoxTextInputValueExpectedValues
        {
            get
            {
                if ((this.mAssertSearchBoxTextInputValueExpectedValues == null))
                {
                    this.mAssertSearchBoxTextInputValueExpectedValues = new AssertSearchBoxTextInputValueExpectedValues();
                }
                return this.mAssertSearchBoxTextInputValueExpectedValues;
            }
        }
        
        public virtual AssertSearchOfficesTextBox_SecOfficeExpectedValues AssertSearchOfficesTextBox_SecOfficeExpectedValues
        {
            get
            {
                if ((this.mAssertSearchOfficesTextBox_SecOfficeExpectedValues == null))
                {
                    this.mAssertSearchOfficesTextBox_SecOfficeExpectedValues = new AssertSearchOfficesTextBox_SecOfficeExpectedValues();
                }
                return this.mAssertSearchOfficesTextBox_SecOfficeExpectedValues;
            }
        }
        
        public virtual AssertSearchProgramsTextBoxExpectedValues AssertSearchProgramsTextBoxExpectedValues
        {
            get
            {
                if ((this.mAssertSearchProgramsTextBoxExpectedValues == null))
                {
                    this.mAssertSearchProgramsTextBoxExpectedValues = new AssertSearchProgramsTextBoxExpectedValues();
                }
                return this.mAssertSearchProgramsTextBoxExpectedValues;
            }
        }
        
        public virtual AssertSecondOfficeExpectedValues AssertSecondOfficeExpectedValues
        {
            get
            {
                if ((this.mAssertSecondOfficeExpectedValues == null))
                {
                    this.mAssertSecondOfficeExpectedValues = new AssertSecondOfficeExpectedValues();
                }
                return this.mAssertSecondOfficeExpectedValues;
            }
        }
        
        public virtual AssertSecondOffice_BranchesandProgramsExpectedValues AssertSecondOffice_BranchesandProgramsExpectedValues
        {
            get
            {
                if ((this.mAssertSecondOffice_BranchesandProgramsExpectedValues == null))
                {
                    this.mAssertSecondOffice_BranchesandProgramsExpectedValues = new AssertSecondOffice_BranchesandProgramsExpectedValues();
                }
                return this.mAssertSecondOffice_BranchesandProgramsExpectedValues;
            }
        }
        
        public virtual AssertSubProgramIndentExpectedValues AssertSubProgramIndentExpectedValues
        {
            get
            {
                if ((this.mAssertSubProgramIndentExpectedValues == null))
                {
                    this.mAssertSubProgramIndentExpectedValues = new AssertSubProgramIndentExpectedValues();
                }
                return this.mAssertSubProgramIndentExpectedValues;
            }
        }
        
        public virtual ClearSearchProgramsBoxParams ClearSearchProgramsBoxParams
        {
            get
            {
                if ((this.mClearSearchProgramsBoxParams == null))
                {
                    this.mClearSearchProgramsBoxParams = new ClearSearchProgramsBoxParams();
                }
                return this.mClearSearchProgramsBoxParams;
            }
        }
        
        public virtual LogintoQAParams LogintoQAParams
        {
            get
            {
                if ((this.mLogintoQAParams == null))
                {
                    this.mLogintoQAParams = new LogintoQAParams();
                }
                return this.mLogintoQAParams;
            }
        }
        
        public virtual LogintoQA_ExistingUserParams LogintoQA_ExistingUserParams
        {
            get
            {
                if ((this.mLogintoQA_ExistingUserParams == null))
                {
                    this.mLogintoQA_ExistingUserParams = new LogintoQA_ExistingUserParams();
                }
                return this.mLogintoQA_ExistingUserParams;
            }
        }
        
        public virtual RefreshBranchesandProgramsTabParams RefreshBranchesandProgramsTabParams
        {
            get
            {
                if ((this.mRefreshBranchesandProgramsTabParams == null))
                {
                    this.mRefreshBranchesandProgramsTabParams = new RefreshBranchesandProgramsTabParams();
                }
                return this.mRefreshBranchesandProgramsTabParams;
            }
        }
        
        public virtual RemoveExistingECAUserParams RemoveExistingECAUserParams
        {
            get
            {
                if ((this.mRemoveExistingECAUserParams == null))
                {
                    this.mRemoveExistingECAUserParams = new RemoveExistingECAUserParams();
                }
                return this.mRemoveExistingECAUserParams;
            }
        }
        
        public virtual SearchBoxText_InputParams SearchBoxText_InputParams
        {
            get
            {
                if ((this.mSearchBoxText_InputParams == null))
                {
                    this.mSearchBoxText_InputParams = new SearchBoxText_InputParams();
                }
                return this.mSearchBoxText_InputParams;
            }
        }
        
        public virtual SearchOfficesTextInput_SecOfficeParams SearchOfficesTextInput_SecOfficeParams
        {
            get
            {
                if ((this.mSearchOfficesTextInput_SecOfficeParams == null))
                {
                    this.mSearchOfficesTextInput_SecOfficeParams = new SearchOfficesTextInput_SecOfficeParams();
                }
                return this.mSearchOfficesTextInput_SecOfficeParams;
            }
        }
        
        public virtual URLNav_ECAOfficeDirectParams URLNav_ECAOfficeDirectParams
        {
            get
            {
                if ((this.mURLNav_ECAOfficeDirectParams == null))
                {
                    this.mURLNav_ECAOfficeDirectParams = new URLNav_ECAOfficeDirectParams();
                }
                return this.mURLNav_ECAOfficeDirectParams;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIInternetOptionsWindow UIInternetOptionsWindow
        {
            get
            {
                if ((this.mUIInternetOptionsWindow == null))
                {
                    this.mUIInternetOptionsWindow = new UIInternetOptionsWindow();
                }
                return this.mUIInternetOptionsWindow;
            }
        }
        
        public UIDeleteBrowsingHistorWindow UIDeleteBrowsingHistorWindow
        {
            get
            {
                if ((this.mUIDeleteBrowsingHistorWindow == null))
                {
                    this.mUIDeleteBrowsingHistorWindow = new UIDeleteBrowsingHistorWindow();
                }
                return this.mUIDeleteBrowsingHistorWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertContentMenuButtonExpectedValues mAssertContentMenuButtonExpectedValues;
        
        private AssertIndividualOffice_BranchesandProgramsExpectedValues mAssertIndividualOffice_BranchesandProgramsExpectedValues;
        
        private AssertIndividualOffice_BranchListExpectedValues mAssertIndividualOffice_BranchListExpectedValues;
        
        private AssertIndividualOffice_ProgramExpectedValues mAssertIndividualOffice_ProgramExpectedValues;
        
        private AssertIndividualOffice_ProgramNameDescriptionExpectedValues mAssertIndividualOffice_ProgramNameDescriptionExpectedValues;
        
        private AssertOfficesContentMenuLinkExpectedValues mAssertOfficesContentMenuLinkExpectedValues;
        
        private AssertOfficeSearchResult_SecOfficeExpectedValues mAssertOfficeSearchResult_SecOfficeExpectedValues;
        
        private AssertSearchBoxTextInputValueExpectedValues mAssertSearchBoxTextInputValueExpectedValues;
        
        private AssertSearchOfficesTextBox_SecOfficeExpectedValues mAssertSearchOfficesTextBox_SecOfficeExpectedValues;
        
        private AssertSearchProgramsTextBoxExpectedValues mAssertSearchProgramsTextBoxExpectedValues;
        
        private AssertSecondOfficeExpectedValues mAssertSecondOfficeExpectedValues;
        
        private AssertSecondOffice_BranchesandProgramsExpectedValues mAssertSecondOffice_BranchesandProgramsExpectedValues;
        
        private AssertSubProgramIndentExpectedValues mAssertSubProgramIndentExpectedValues;
        
        private ClearSearchProgramsBoxParams mClearSearchProgramsBoxParams;
        
        private LogintoQAParams mLogintoQAParams;
        
        private LogintoQA_ExistingUserParams mLogintoQA_ExistingUserParams;
        
        private RefreshBranchesandProgramsTabParams mRefreshBranchesandProgramsTabParams;
        
        private RemoveExistingECAUserParams mRemoveExistingECAUserParams;
        
        private SearchBoxText_InputParams mSearchBoxText_InputParams;
        
        private SearchOfficesTextInput_SecOfficeParams mSearchOfficesTextInput_SecOfficeParams;
        
        private URLNav_ECAOfficeDirectParams mURLNav_ECAOfficeDirectParams;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIInternetOptionsWindow mUIInternetOptionsWindow;
        
        private UIDeleteBrowsingHistorWindow mUIDeleteBrowsingHistorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertContentMenuButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertContentMenuButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
        /// </summary>
        public string UITogglenavigationButtonControlType = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_BranchesandPrograms'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertIndividualOffice_BranchesandProgramsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Branches & Programs' link contains 'Branches & Programs'
        /// </summary>
        public string UIBranchesProgramsHyperlinkInnerText = "Branches & Programs";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Branches & Programs' link contains 'Hyperlink'
        /// </summary>
        public string UIBranchesProgramsHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_BranchList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertIndividualOffice_BranchListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of custom control contains ' 
        ///Branch
        ///AF Branch 
        /// 
        ///Branch
        ///EAP Branch 
        /// 
        ///Branch
        ///EUR Branch 
        /// 
        ///Branch
        ///NEA Branch 
        /// 
        ///Branch
        ///SCA Branch 
        /// 
        ///Branch
        ///WHA Branch 
        /// 
        ///Branch
        ///Study of the U.S. Branch 
        /// '
        /// </summary>
        public string UIItemCustomInnerText = " \r\nBranch\r\nAF Branch \r\n \r\nBranch\r\nEAP Branch \r\n \r\nBranch\r\nEUR Branch \r\n \r\nBranch\r" +
            "\nNEA Branch \r\n \r\nBranch\r\nSCA Branch \r\n \r\nBranch\r\nWHA Branch \r\n \r\nBranch\r\nStudy o" +
            "f the U.S. Branch \r\n ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_Program'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertIndividualOffice_ProgramExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Fulbright Visiting Scholar Program' link equals 'Fulbright Visiting Scholar Program'
        /// </summary>
        public string UIFulbrightVisitingSchHyperlinkInnerText = "Fulbright Visiting Scholar Program";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Fulbright Visiting Scholar Program' link equals 'Hyperlink'
        /// </summary>
        public string UIFulbrightVisitingSchHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_ProgramNameDescription'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertIndividualOffice_ProgramNameDescriptionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ECA/A/E Fulbright Visiting Scholar Pro' cell contains 'ECA/A/E 
        ///Fulbright Visiting Scholar Program 
        ///
        ///Supports foreign scholars to conduct post-doctoral research and university lecturing at U.S. institutions for an academic year or term.'
        /// </summary>
        public string UIECAAEFulbrightVisitiCellInnerText = "ECA/A/E \r\nFulbright Visiting Scholar Program \r\n\r\nSupports foreign scholars to con" +
            "duct post-doctoral research and university lecturing at U.S. institutions for an" +
            " academic year or term.";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'ECA/A/E Fulbright Visiting Scholar Pro' pane contains 'ECA/A/E 
        ///Fulbright Visiting Scholar Program 
        ///
        ///Supports foreign scholars to conduct post-doctoral research and university lecturing at U.S. institutions for an academic year or term.'
        /// </summary>
        public string UIECAAEFulbrightVisitiPaneInnerText = "ECA/A/E \r\nFulbright Visiting Scholar Program \r\n\r\nSupports foreign scholars to con" +
            "duct post-doctoral research and university lecturing at U.S. institutions for an" +
            " academic year or term.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertOfficesContentMenuLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertOfficesContentMenuLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Offices' link equals 'Offices'
        /// </summary>
        public string UIOfficesHyperlinkInnerText = "Offices";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Offices' link equals 'Hyperlink'
        /// </summary>
        public string UIOfficesHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertOfficeSearchResult_SecOffice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertOfficeSearchResult_SecOfficeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 10 seconds for user delay between actions; Verify that the 'InnerText' property of 'ECA-IIP/EX Office of the Executive Dir' cell contains 'ECA-IIP/EX 
        ///Office of the Executive Director
        ///
        ///The Office of the Executive Director (ECA-IIP/EX) reports to the ECA PDAS and IIP Deputy Coordinator and supports the operations of the Bureau of Educational and Cultural Affairs and the Bureau of International Information Programs. We strive to efficiently, effectively support ECA and IIP in realizing their program objectives by providing the highest quality customer service in administrative support, budget and financial management, grants, human resources, information technology, and management analysis.'
        /// </summary>
        public string UIECAIIPEXOfficeoftheECellInnerText = @"ECA-IIP/EX 
Office of the Executive Director

The Office of the Executive Director (ECA-IIP/EX) reports to the ECA PDAS and IIP Deputy Coordinator and supports the operations of the Bureau of Educational and Cultural Affairs and the Bureau of International Information Programs. We strive to efficiently, effectively support ECA and IIP in realizing their program objectives by providing the highest quality customer service in administrative support, budget and financial management, grants, human resources, information technology, and management analysis.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchBoxTextInputValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertSearchBoxTextInputValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAttribute' property of text box contains 'American'
        /// </summary>
        public string UIItemEditValueAttribute = "American";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchOfficesTextBox_SecOffice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertSearchOfficesTextBox_SecOfficeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of text box equals 'Edit'
        /// </summary>
        public string UIItemEditControlType = "Edit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchProgramsTextBox'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertSearchProgramsTextBoxExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of text box equals 'Edit'
        /// </summary>
        public string UIItemEditControlType = "Edit";
        
        /// <summary>
        /// Verify that the 'Class' property of text box equals 'search-contextual'
        /// </summary>
        public string UIItemEditClass = "search-contextual";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSecondOffice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertSecondOfficeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'ECA-IIP/EX' link equals 'ECA-IIP/EX'
        /// </summary>
        public string UIECAIIPEXHyperlinkInnerText = "ECA-IIP/EX";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'ECA-IIP/EX' link equals 'Hyperlink'
        /// </summary>
        public string UIECAIIPEXHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSecondOffice_BranchesandPrograms'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertSecondOffice_BranchesandProgramsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'Branches & Programs' link equals 'Branches & Programs'
        /// </summary>
        public string UIBranchesProgramsHyperlinkInnerText = "Branches & Programs";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Branches & Programs' link equals 'Hyperlink'
        /// </summary>
        public string UIBranchesProgramsHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSubProgramIndent'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertSubProgramIndentExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Wait for 5 seconds for user delay between actions; Verify that the 'InnerText' property of 'ECA/A/E Fulbright English Teaching Ass' cell contains 'ECA/A/E 
        ///Fulbright English Teaching Assistant Program (ETA) 
        ///
        ///Places recent U.S. college graduates as English teaching assistants in schools or universities overseas, improving foreign studentsâ€™ English language abilities and knowledge of the United States while increasing their own language skills and knowledge of the host country.'
        /// </summary>
        public string UIECAAEFulbrightEnglisCellInnerText = @"ECA/A/E 
Fulbright English Teaching Assistant Program (ETA) 

Places recent U.S. college graduates as English teaching assistants in schools or universities overseas, improving foreign studentsâ€™ English language abilities and knowledge of the United States while increasing their own language skills and knowledge of the host country.";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'ECA/A/E Fulbright English Teaching Ass' pane equals 'style="margin-left: 60px;" ng-style="{marginLeft: (program.programLevel - 1) * 60}"'
        /// </summary>
        public string UIECAAEFulbrightEnglisPaneControlDefinition = "style=\"margin-left: 60px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60" +
            "}\"";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClearSearchProgramsBox'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ClearSearchProgramsBoxParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in text box
        /// </summary>
        public string UIItemEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogintoQA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class LogintoQAParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:Tabs' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "about:Tabs";
        
        /// <summary>
        /// Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
        /// </summary>
        public string UIItemEditSendKeys = "https://eca-kmt-qa.azurewebsites.net/";
        
        /// <summary>
        /// Type 'ECATest1@statedept.us' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditText = "ECATest1@statedept.us";
        
        /// <summary>
        /// Type '{Tab}' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pnl8gvcmh7k//RLoLhz21H311rAYM7tLgX1DFCS84gg=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogintoQA_ExistingUser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class LogintoQA_ExistingUserParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://eca-kmt-qa.azurewebsites.net/' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "https://eca-kmt-qa.azurewebsites.net/";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pnl8gvcmh7n9Hp5j+06Q16vTeHomf4bql8vy/6wcjU0=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RefreshBranchesandProgramsTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RefreshBranchesandProgramsTabParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{F5}' in 'Overview Branches & Programs A' pane
        /// </summary>
        public string UIOverviewBranchesProgPaneSendKeys = "{F5}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RemoveExistingECAUser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RemoveExistingECAUserParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:Tabs' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "about:Tabs";
        
        /// <summary>
        /// Type 'https{RShiftKey}://eca-kmt-qa.azurewebsites.net' in text box
        /// </summary>
        public string UIItemEditSendKeys = "https{RShiftKey}://eca-kmt-qa.azurewebsites.net";
        
        /// <summary>
        /// Type '/' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchBoxText_Input'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class SearchBoxText_InputParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'American' in text box
        /// </summary>
        public string UIItemEditText = "American";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchOfficesTextInput_SecOffice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class SearchOfficesTextInput_SecOfficeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'IIP' in text box
        /// </summary>
        public string UIItemEditText = "IIP";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'URLNav_ECAOfficeDirect'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class URLNav_ECAOfficeDirectParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top'
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top";
        
        /// <summary>
        /// Type '{F5}' in 'Toggle navigation' button
        /// </summary>
        public string UITogglenavigationButton1SendKeys = "{F5}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            this.WindowTitles.Add("Sign in to ECA Client");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPageControlToolBar UIPageControlToolBar
        {
            get
            {
                if ((this.mUIPageControlToolBar == null))
                {
                    this.mUIPageControlToolBar = new UIPageControlToolBar(this);
                }
                return this.mUIPageControlToolBar;
            }
        }
        
        public UISignintoAzureActiveDDocument UISignintoAzureActiveDDocument
        {
            get
            {
                if ((this.mUISignintoAzureActiveDDocument == null))
                {
                    this.mUISignintoAzureActiveDDocument = new UISignintoAzureActiveDDocument(this);
                }
                return this.mUISignintoAzureActiveDDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument UIHttpsecakmtqaazureweDocument
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument = new UIHttpsecakmtqaazureweDocument(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument1 UIHttpsecakmtqaazureweDocument1
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument1 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument1 = new UIHttpsecakmtqaazureweDocument1(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument1;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument2 UIHttpsecakmtqaazureweDocument2
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument2 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument2 = new UIHttpsecakmtqaazureweDocument2(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument2;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument3 UIHttpsecakmtqaazureweDocument3
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument3 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument3 = new UIHttpsecakmtqaazureweDocument3(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument3;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument4 UIHttpsecakmtqaazureweDocument4
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument4 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument4 = new UIHttpsecakmtqaazureweDocument4(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument4;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument5 UIHttpsecakmtqaazureweDocument5
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument5 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument5 = new UIHttpsecakmtqaazureweDocument5(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument5;
            }
        }
        
        public UISignintoECAClientDocument UISignintoECAClientDocument
        {
            get
            {
                if ((this.mUISignintoECAClientDocument == null))
                {
                    this.mUISignintoECAClientDocument = new UISignintoECAClientDocument(this);
                }
                return this.mUISignintoECAClientDocument;
            }
        }
        
        public UIFavoritesandToolsBarToolBar UIFavoritesandToolsBarToolBar
        {
            get
            {
                if ((this.mUIFavoritesandToolsBarToolBar == null))
                {
                    this.mUIFavoritesandToolsBarToolBar = new UIFavoritesandToolsBarToolBar(this);
                }
                return this.mUIFavoritesandToolsBarToolBar;
            }
        }
        
        public UISignintoECAClientIntTitleBar UISignintoECAClientIntTitleBar
        {
            get
            {
                if ((this.mUISignintoECAClientIntTitleBar == null))
                {
                    this.mUISignintoECAClientIntTitleBar = new UISignintoECAClientIntTitleBar(this);
                }
                return this.mUISignintoECAClientIntTitleBar;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument6 UIHttpsecakmtqaazureweDocument6
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument6 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument6 = new UIHttpsecakmtqaazureweDocument6(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument6;
            }
        }
        
        public UISignintoECAClientDocument1 UISignintoECAClientDocument1
        {
            get
            {
                if ((this.mUISignintoECAClientDocument1 == null))
                {
                    this.mUISignintoECAClientDocument1 = new UISignintoECAClientDocument1(this);
                }
                return this.mUISignintoECAClientDocument1;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument7 UIHttpsecakmtqaazureweDocument7
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument7 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument7 = new UIHttpsecakmtqaazureweDocument7(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument7;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIPageControlToolBar mUIPageControlToolBar;
        
        private UISignintoAzureActiveDDocument mUISignintoAzureActiveDDocument;
        
        private UIHttpsecakmtqaazureweDocument mUIHttpsecakmtqaazureweDocument;
        
        private UIHttpsecakmtqaazureweDocument1 mUIHttpsecakmtqaazureweDocument1;
        
        private UIHttpsecakmtqaazureweDocument2 mUIHttpsecakmtqaazureweDocument2;
        
        private UIHttpsecakmtqaazureweDocument3 mUIHttpsecakmtqaazureweDocument3;
        
        private UIHttpsecakmtqaazureweDocument4 mUIHttpsecakmtqaazureweDocument4;
        
        private UIHttpsecakmtqaazureweDocument5 mUIHttpsecakmtqaazureweDocument5;
        
        private UISignintoECAClientDocument mUISignintoECAClientDocument;
        
        private UIFavoritesandToolsBarToolBar mUIFavoritesandToolsBarToolBar;
        
        private UISignintoECAClientIntTitleBar mUISignintoECAClientIntTitleBar;
        
        private UIHttpsecakmtqaazureweDocument6 mUIHttpsecakmtqaazureweDocument6;
        
        private UISignintoECAClientDocument1 mUISignintoECAClientDocument1;
        
        private UIHttpsecakmtqaazureweDocument7 mUIHttpsecakmtqaazureweDocument7;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Address and search using Bing";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPageControlToolBar : WinToolBar
    {
        
        public UIPageControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Page Control";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinButton UIGotohttpsecakmtqaazuButton
        {
            get
            {
                if ((this.mUIGotohttpsecakmtqaazuButton == null))
                {
                    this.mUIGotohttpsecakmtqaazuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGotohttpsecakmtqaazuButton.SearchProperties[WinButton.PropertyNames.Name] = "Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt+Enter to open in a new tab)";
                    this.mUIGotohttpsecakmtqaazuButton.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIGotohttpsecakmtqaazuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGotohttpsecakmtqaazuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoAzureActiveDDocument : HtmlDocument
    {
        
        public UISignintoAzureActiveDDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to Azure Active Directory";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/login.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/login.srf?wa=wsignin1.0&wtrealm=https%3a%2f%2flogin.windows.net&wreply=https%3a%2f%2flogin.windows.net%2fstatedept.us%2fwsfederation&wctx=3wEBD09BdXRoMkF1dGhvcml6ZQEPT0F1dGgyQXV0aG9yaXplAQxzdGF0ZWRlcHQudXMBAQEVb3BlbmlkY29ubmVjdC5pZHRva2VuAAABASRlMDM1NmU1NS1lMTI0LTQ1MmMtODM3ZC1hZWI3NTA0MTg1ZmYBJWh0dHBzOi8vZWNhLWttdC1xYS5henVyZXdlYnNpdGVzLm5ldC8AAAAAAAAAAAAAAQEaAAAAASVodHRwczovL2VjYS1rbXQtcWEuYXp1cmV3ZWJzaXRlcy5uZXQvAQkBCGFkYWxfdmVyAQUxLjAuMAEDY2lkASQ5ZGEwN2Q3Ny0wMmRlLTQxM2QtYWU1My0xNzFlZGZkYTA5NDIBCWVycm9yX3VyaQElaHR0cHM6Ly9lY2Eta210LXFhLmF6dXJld2Vic2l0ZXMubmV0LwEPaW5jbHVkZV9hdF9oYXNoAQExAQtpbnRlcmFjdGl2ZQEBMQEFTm9uY2UBJGI0ZjYyNDE2LWFiNDktNDgzMi04YWVmLTgwZTEyNDE5MTM2YQECcmMBJDcwZGRmYTg1LWJjYjgtNDZhYi05MzNkLWFmZWY4ZTgwNTE2ZAEJc2Vzc2lvbklkASRmZmFhNjk0YS02NzkyLTRkZTktOTdkYS0yNDIzY2ZhOWU3OTkBD2xpbWl0X3Rva2Vuc2l6ZQEBMe01&wp=MBI_FED_SSL&id=";
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBackground_page_overPane
        {
            get
            {
                if ((this.mUIBackground_page_overPane == null))
                {
                    this.mUIBackground_page_overPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "background_page_overlay";
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "overlay ie_legacy";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"overlay ie_legacy\" id=\"background_page_overlay\" style=\"visibility: visible" +
                        "; opacity: 0.164; background-color: rgb(0, 114, 198);\"";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIBackground_page_overPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIBackground_page_overPane;
            }
        }
        
        public HtmlEdit UIUseraccountEdit
        {
            get
            {
                if ((this.mUIUseraccountEdit == null))
                {
                    this.mUIUseraccountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_userid_inputtext";
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User account";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required email field normaltext";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login\" tabindex=\"1\" class=\"login_t";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUseraccountEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIUseraccountEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state\" " +
                        "id=\"cred_sign_in_button\" role=\"button\" style=\"opacity: 1;\" onclick=\"Post.SubmitC" +
                        "reds();return false;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBackground_page_overPane;
        
        private HtmlEdit mUIUseraccountEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top");
            #endregion
        }
        
        #region Properties
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public UICbpspmenus1Custom UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        
        public HtmlButton UITogglenavigationButton1
        {
            get
            {
                if ((this.mUITogglenavigationButton1 == null))
                {
                    this.mUITogglenavigationButton1 = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton1.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton1.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton1.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton1.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton1.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton1.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed active";
                    this.mUITogglenavigationButton1.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed active\" t";
                    this.mUITogglenavigationButton1.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton1.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top");
                    #endregion
                }
                return this.mUITogglenavigationButton1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUITogglenavigationButton;
        
        private UICbpspmenus1Custom mUICbpspmenus1Custom;
        
        private HtmlButton mUITogglenavigationButton1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbpspmenus1Custom : HtmlCustom
    {
        
        public UICbpspmenus1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOfficesHyperlink
        {
            get
            {
                if ((this.mUIOfficesHyperlink == null))
                {
                    this.mUIOfficesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Offices";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/alloffices/";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allo";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIOfficesHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficesHyperlink;
            }
        }
        
        public HtmlHyperlink UIOfficesHyperlink1
        {
            get
            {
                if ((this.mUIOfficesHyperlink1 == null))
                {
                    this.mUIOfficesHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficesHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficesHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficesHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficesHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Offices";
                    this.mUIOfficesHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficesHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficesHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/alloffices";
                    this.mUIOfficesHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIOfficesHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allo";
                    this.mUIOfficesHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIOfficesHyperlink1.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficesHyperlink1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOfficesHyperlink;
        
        private HtmlHyperlink mUIOfficesHyperlink1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument1 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane(this);
                }
                return this.mUISortlistPane;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane mUISortlistPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane : HtmlDiv
    {
        
        public UISortlistPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 56 offices\r\n\r\n \r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"offices\" st-pipe=\"getOffices\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIECAAEHyperlink
        {
            get
            {
                if ((this.mUIECAAEHyperlink == null))
                {
                    this.mUIECAAEHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ECA/A/E";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/overview";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIECAAEHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAAEHyperlink;
            }
        }
        
        public HtmlHyperlink UIECAIIPEXHyperlink
        {
            get
            {
                if ((this.mUIECAIIPEXHyperlink == null))
                {
                    this.mUIECAIIPEXHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ECA-IIP/EX";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/overview";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/ove";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIECAIIPEXHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAIIPEXHyperlink;
            }
        }
        
        public HtmlHyperlink UIOfficeofAcademicExchHyperlink
        {
            get
            {
                if ((this.mUIOfficeofAcademicExchHyperlink == null))
                {
                    this.mUIOfficeofAcademicExchHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Office of Academic Exchange Programs";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/overview";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIOfficeofAcademicExchHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficeofAcademicExchHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIECAAEHyperlink;
        
        private HtmlHyperlink mUIECAIIPEXHyperlink;
        
        private HtmlHyperlink mUIOfficeofAcademicExchHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument2 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1414/overview#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane(this);
                }
                return this.mUITopPane;
            }
        }
        
        public UITopPane1 UITopPane1
        {
            get
            {
                if ((this.mUITopPane1 == null))
                {
                    this.mUITopPane1 = new UITopPane1(this);
                }
                return this.mUITopPane1;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane mUITopPane;
        
        private UITopPane1 mUITopPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane : HtmlDiv
    {
        
        public UITopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA/A/E\r\n\r\n\r\n\r\nLast Updated Feb 11, 2015";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBranchesProgramsHyperlink
        {
            get
            {
                if ((this.mUIBranchesProgramsHyperlink == null))
                {
                    this.mUIBranchesProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Branches & Programs";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/branches";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIBranchesProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIBranchesProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBranchesProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane1 : HtmlDiv
    {
        
        public UITopPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Office of Academic Exchange Programs\r\n\r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBranchesProgramsHyperlink
        {
            get
            {
                if ((this.mUIBranchesProgramsHyperlink == null))
                {
                    this.mUIBranchesProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Branches & Programs";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/branches";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIBranchesProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIBranchesProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBranchesProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument3 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1414/branches#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane2 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane2(this);
                }
                return this.mUITopPane;
            }
        }
        
        public UISortlistPane1 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane1(this);
                }
                return this.mUISortlistPane;
            }
        }
        
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public UICbpspmenus1Custom1 UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom1(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        
        public UITopPane11 UITopPane1
        {
            get
            {
                if ((this.mUITopPane1 == null))
                {
                    this.mUITopPane1 = new UITopPane11(this);
                }
                return this.mUITopPane1;
            }
        }
        
        public UISortlistPane11 UISortlistPane1
        {
            get
            {
                if ((this.mUISortlistPane1 == null))
                {
                    this.mUISortlistPane1 = new UISortlistPane11(this);
                }
                return this.mUISortlistPane1;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane2 mUITopPane;
        
        private UISortlistPane1 mUISortlistPane;
        
        private HtmlButton mUITogglenavigationButton;
        
        private UICbpspmenus1Custom1 mUICbpspmenus1Custom;
        
        private UITopPane11 mUITopPane1;
        
        private UISortlistPane11 mUISortlistPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane2 : HtmlDiv
    {
        
        public UITopPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA/A/E\r\n\r\n\r\n\r\nLast Updated Feb 11, 2015";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "UL";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "branch-list";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"branch-list\" ng-show=\"!isLoadingB";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane1 : HtmlDiv
    {
        
        public UISortlistPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 1 of 1 programs\r\n\r\n\r\n \r\n \r\nF";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope ng-isolate-scope\" id=\"sort-list\" st-table=\"programs\" st-pipe=\"get" +
                "Programs\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search-contextual";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search-contextual\" type=\"search\" ";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public HtmlHyperlink UIFulbrightVisitingSchHyperlink
        {
            get
            {
                if ((this.mUIFulbrightVisitingSchHyperlink == null))
                {
                    this.mUIFulbrightVisitingSchHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Fulbright Visiting Scholar Program";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/programs/54/overview";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIFulbrightVisitingSchHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIFulbrightVisitingSchHyperlink;
            }
        }
        
        public HtmlDiv UIFulbrightVisitingSchPane
        {
            get
            {
                if ((this.mUIFulbrightVisitingSchPane == null))
                {
                    this.mUIFulbrightVisitingSchPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFulbrightVisitingSchPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIFulbrightVisitingSchPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Fulbright Visiting Scholar Program \r\n\r\nS";
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"margin-left: 0px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60}" +
                        "\"";
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "49";
                    this.mUIFulbrightVisitingSchPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIFulbrightVisitingSchPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIItemEdit;
        
        private HtmlHyperlink mUIFulbrightVisitingSchHyperlink;
        
        private HtmlDiv mUIFulbrightVisitingSchPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbpspmenus1Custom1 : HtmlCustom
    {
        
        public UICbpspmenus1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOfficesHyperlink
        {
            get
            {
                if ((this.mUIOfficesHyperlink == null))
                {
                    this.mUIOfficesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Offices";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/alloffices/";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allo";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIOfficesHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOfficesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane11 : HtmlDiv
    {
        
        public UITopPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Office of Academic Exchange Programs\r\n\r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "UL";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "branch-list";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"branch-list\" ng-show=\"!isLoadingB";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlDiv UIOverviewBranchesProgPane
        {
            get
            {
                if ((this.mUIOverviewBranchesProgPane == null))
                {
                    this.mUIOverviewBranchesProgPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOverviewBranchesProgPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOverviewBranchesProgPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOverviewBranchesProgPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Overview \r\n\r\n Branches & Programs \r\n\r\n A";
                    this.mUIOverviewBranchesProgPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOverviewBranchesProgPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "tabs ng-isolate-scope";
                    this.mUIOverviewBranchesProgPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"tabs ng-isolate-scope\" tabs=\"tabs\"";
                    this.mUIOverviewBranchesProgPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "31";
                    this.mUIOverviewBranchesProgPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOverviewBranchesProgPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        
        private HtmlDiv mUIOverviewBranchesProgPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane11 : HtmlDiv
    {
        
        public UISortlistPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 26 programs\r\n\r\n\r\n \r\nEC";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope ng-isolate-scope\" id=\"sort-list\" st-table=\"programs\" st-pipe=\"get" +
                "Programs\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlDiv UIECAAEFulbrightVisitiPane
        {
            get
            {
                if ((this.mUIECAAEFulbrightVisitiPane == null))
                {
                    this.mUIECAAEFulbrightVisitiPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIECAAEFulbrightVisitiPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIECAAEFulbrightVisitiPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIECAAEFulbrightVisitiPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA/A/E \r\nFulbright Visiting Scholar Pro";
                    this.mUIECAAEFulbrightVisitiPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIECAAEFulbrightVisitiPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIECAAEFulbrightVisitiPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"margin-left: 0px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60}" +
                        "\"";
                    this.mUIECAAEFulbrightVisitiPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "60";
                    this.mUIECAAEFulbrightVisitiPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAAEFulbrightVisitiPane;
            }
        }
        
        public HtmlDiv UIECAAEFulbrightEnglisPane
        {
            get
            {
                if ((this.mUIECAAEFulbrightEnglisPane == null))
                {
                    this.mUIECAAEFulbrightEnglisPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIECAAEFulbrightEnglisPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIECAAEFulbrightEnglisPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIECAAEFulbrightEnglisPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA/A/E \r\nFulbright English Teaching Ass";
                    this.mUIECAAEFulbrightEnglisPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIECAAEFulbrightEnglisPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIECAAEFulbrightEnglisPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"margin-left: 60px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60" +
                        "}\"";
                    this.mUIECAAEFulbrightEnglisPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "50";
                    this.mUIECAAEFulbrightEnglisPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAAEFulbrightEnglisPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        
        private HtmlDiv mUIECAAEFulbrightVisitiPane;
        
        private HtmlDiv mUIECAAEFulbrightEnglisPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Showing 1 - 25 of 26 programs\r\n\r\n\r\n \r\nEC";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"col-md-12\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "28";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "col-md-12";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIECAAEFulbrightVisitiCell
        {
            get
            {
                if ((this.mUIECAAEFulbrightVisitiCell == null))
                {
                    this.mUIECAAEFulbrightVisitiCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIECAAEFulbrightVisitiCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIECAAEFulbrightVisitiCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIECAAEFulbrightVisitiCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIECAAEFulbrightVisitiCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "ECA/A/E \r\nFulbright Visiting Scholar Pro";
                    this.mUIECAAEFulbrightVisitiCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIECAAEFulbrightVisitiCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "13";
                    this.mUIECAAEFulbrightVisitiCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIECAAEFulbrightVisitiCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIECAAEFulbrightVisitiCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "23";
                    this.mUIECAAEFulbrightVisitiCell.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAAEFulbrightVisitiCell;
            }
        }
        
        public HtmlCell UIECAAEFulbrightEnglisCell
        {
            get
            {
                if ((this.mUIECAAEFulbrightEnglisCell == null))
                {
                    this.mUIECAAEFulbrightEnglisCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIECAAEFulbrightEnglisCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIECAAEFulbrightEnglisCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIECAAEFulbrightEnglisCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIECAAEFulbrightEnglisCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "ECA/A/E \r\nFulbright English Teaching Ass";
                    this.mUIECAAEFulbrightEnglisCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIECAAEFulbrightEnglisCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUIECAAEFulbrightEnglisCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIECAAEFulbrightEnglisCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIECAAEFulbrightEnglisCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
                    this.mUIECAAEFulbrightEnglisCell.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAAEFulbrightEnglisCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIECAAEFulbrightVisitiCell;
        
        private HtmlCell mUIECAAEFulbrightEnglisCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument4 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1/overview#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane3 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane3(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane3 mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane3 : HtmlDiv
    {
        
        public UITopPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA-IIP/EX\r\n\r\n\r\n\r\nLast Updated Jan 26, 2";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBranchesProgramsHyperlink
        {
            get
            {
                if ((this.mUIBranchesProgramsHyperlink == null))
                {
                    this.mUIBranchesProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Branches & Programs";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/branches";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/bra";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIBranchesProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIBranchesProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBranchesProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument5 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1/branches#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane2 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane2(this);
                }
                return this.mUISortlistPane;
            }
        }
        
        public UISortlistPane12 UISortlistPane1
        {
            get
            {
                if ((this.mUISortlistPane1 == null))
                {
                    this.mUISortlistPane1 = new UISortlistPane12(this);
                }
                return this.mUISortlistPane1;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane2 mUISortlistPane;
        
        private UISortlistPane12 mUISortlistPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane2 : HtmlDiv
    {
        
        public UISortlistPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 136 programs\r\n\r\n\r\n \r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope ng-isolate-scope\" id=\"sort-list\" st-table=\"programs\" st-pipe=\"get" +
                "Programs\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search-contextual";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search-contextual\" type=\"search\" ";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public HtmlDiv UIAcademicExchangeProgPane
        {
            get
            {
                if ((this.mUIAcademicExchangeProgPane == null))
                {
                    this.mUIAcademicExchangeProgPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAcademicExchangeProgPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAcademicExchangeProgPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Academic Exchange Programs - Near East P";
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"margin-left: 60px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60" +
                        "}\"";
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "50";
                    this.mUIAcademicExchangeProgPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIAcademicExchangeProgPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIItemEdit;
        
        private HtmlDiv mUIAcademicExchangeProgPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane12 : HtmlDiv
    {
        
        public UISortlistPane12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 37 programs\r\n\r\n\r\n \r\n \r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope ng-isolate-scope\" id=\"sort-list\" st-table=\"programs\" st-pipe=\"get" +
                "Programs\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search-contextual";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search-contextual\" type=\"search\" ";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoECAClientDocument : HtmlDocument
    {
        
        public UISignintoECAClientDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to ECA Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/statedept.us/oauth2/authorize";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/statedept.us/oauth2/authorize?response_type=id_token&client_id=e0356e55-e124-452c-837d-aeb7504185ff&redirect_uri=https%3A%2F%2Feca-kmt-qa.azurewebsites.net%2F&state=eba5db5b-0de3-44e3-bc98-f585564b6a5f&x-client-SKU=Js&x-client-Ver=1.0.0&nonce=556837f7-700b-46a3-8275-6d1e405050b5";
            this.WindowTitles.Add("Sign in to ECA Client");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIUseraccountEdit
        {
            get
            {
                if ((this.mUIUseraccountEdit == null))
                {
                    this.mUIUseraccountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_userid_inputtext";
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User account";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required email field normaltext";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login\" tabindex=\"1\" class=\"login_t";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUseraccountEdit.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUIUseraccountEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state control-button button-" +
                        "two button_primary";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state c" +
                        "ontrol-button button-two button_primary\" id=\"cred_sign_in_button\" role=\"button\" " +
                        "style=\"opacity: 1;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIUseraccountEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFavoritesandToolsBarToolBar : WinToolBar
    {
        
        public UIFavoritesandToolsBarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Favorites and Tools Bar";
            this.WindowTitles.Add("Sign in to ECA Client");
            #endregion
        }
        
        #region Properties
        public WinButton UIToolsButton
        {
            get
            {
                if ((this.mUIToolsButton == null))
                {
                    this.mUIToolsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIToolsButton.SearchProperties[WinButton.PropertyNames.Name] = "Tools";
                    this.mUIToolsButton.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUIToolsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIToolsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoECAClientIntTitleBar : WinTitleBar
    {
        
        public UISignintoECAClientIntTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Sign in to ECA Client");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument6 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane3 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane3(this);
                }
                return this.mUISortlistPane;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane3 mUISortlistPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane3 : HtmlDiv
    {
        
        public UISortlistPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 56 offices\r\n\r\n \r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"offices\" st-pipe=\"getOffices\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOfficeofAcademicExchHyperlink
        {
            get
            {
                if ((this.mUIOfficeofAcademicExchHyperlink == null))
                {
                    this.mUIOfficeofAcademicExchHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficeofAcademicExchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Office of Academic Exchange Programs";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/overview";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIOfficeofAcademicExchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIOfficeofAcademicExchHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficeofAcademicExchHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOfficeofAcademicExchHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoECAClientDocument1 : HtmlDocument
    {
        
        public UISignintoECAClientDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to ECA Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/statedept.us/oauth2/authorize";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/statedept.us/oauth2/authorize?response_type=id_token&client_id=e0356e55-e124-452c-837d-aeb7504185ff&redirect_uri=https%3A%2F%2Feca-kmt-qa.azurewebsites.net%2F&state=ec2a3023-b3d0-42bc-835a-d290eedb80fe&x-client-SKU=Js&x-client-Ver=1.0.0&nonce=5415e9ec-2c3f-429e-8fb7-f3e66f733d75";
            this.WindowTitles.Add("Sign in to ECA Client");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIECATest1statedeptusHyperlink
        {
            get
            {
                if ((this.mUIECATest1statedeptusHyperlink == null))
                {
                    this.mUIECATest1statedeptusHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIECATest1statedeptusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ecatest1_statedept_us_link";
                    this.mUIECATest1statedeptusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIECATest1statedeptusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIECATest1statedeptusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\r\nECATest1@statedept.us\r\n\r\n\r\n\r\n•••";
                    this.mUIECATest1statedeptusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIECATest1statedeptusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIECATest1statedeptusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIECATest1statedeptusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "tile_link tooltip";
                    this.mUIECATest1statedeptusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabindex=\"1\" class=\"tile_link tooltip\" i";
                    this.mUIECATest1statedeptusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIECATest1statedeptusHyperlink.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUIECATest1statedeptusHyperlink;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state control-button button-" +
                        "two button_primary";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state c" +
                        "ontrol-button button-two button_primary\" id=\"cred_sign_in_button\" role=\"button\" " +
                        "style=\"opacity: 1;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to ECA Client");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIECATest1statedeptusHyperlink;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument7 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/alloffices#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane4 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane4(this);
                }
                return this.mUISortlistPane;
            }
        }
        
        public UISortlistPane13 UISortlistPane1
        {
            get
            {
                if ((this.mUISortlistPane1 == null))
                {
                    this.mUISortlistPane1 = new UISortlistPane13(this);
                }
                return this.mUISortlistPane1;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane4 mUISortlistPane;
        
        private UISortlistPane13 mUISortlistPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane4 : HtmlDiv
    {
        
        public UISortlistPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 56 offices\r\n\r\n \r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"offices\" st-pipe=\"getOffices\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new HtmlTable(this);
                    #region Search Criteria
                    this.mUIItemTable.SearchProperties[HtmlTable.PropertyNames.Id] = null;
                    this.mUIItemTable.SearchProperties[HtmlTable.PropertyNames.Name] = null;
                    this.mUIItemTable.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Showing 1 - 25 of 56 offices\r\n\r\n \r\n\r\n\r\n ";
                    this.mUIItemTable.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"col-md-12\"";
                    this.mUIItemTable.FilterProperties[HtmlTable.PropertyNames.RowCount] = "28";
                    this.mUIItemTable.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
                    this.mUIItemTable.FilterProperties[HtmlTable.PropertyNames.Class] = "col-md-12";
                    this.mUIItemTable.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
                    this.mUIItemTable.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search-contextual";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search-contextual\" type=\"search\" ";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlTable mUIItemTable;
        
        private HtmlEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISortlistPane13 : HtmlDiv
    {
        
        public UISortlistPane13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 1 of 1 offices\r\n\r\n \r\n\r\n\r\n EC";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"offices\" st-pipe=\"getOffices\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UIItemTable1 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable1(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlHyperlink UIOfficeoftheExecutiveHyperlink
        {
            get
            {
                if ((this.mUIOfficeoftheExecutiveHyperlink == null))
                {
                    this.mUIOfficeoftheExecutiveHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficeoftheExecutiveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficeoftheExecutiveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficeoftheExecutiveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficeoftheExecutiveHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Office of the Executive Director";
                    this.mUIOfficeoftheExecutiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficeoftheExecutiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficeoftheExecutiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/overview";
                    this.mUIOfficeoftheExecutiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIOfficeoftheExecutiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/ove";
                    this.mUIOfficeoftheExecutiveHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIOfficeoftheExecutiveHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficeoftheExecutiveHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable1 mUIItemTable;
        
        private HtmlHyperlink mUIOfficeoftheExecutiveHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemTable1 : HtmlTable
    {
        
        public UIItemTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Showing 1 - 1 of 1 offices\r\n\r\n \r\n\r\n\r\n EC";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"col-md-12\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "col-md-12";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIECAIIPEXOfficeoftheECell
        {
            get
            {
                if ((this.mUIECAIIPEXOfficeoftheECell == null))
                {
                    this.mUIECAIIPEXOfficeoftheECell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIECAIIPEXOfficeoftheECell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIECAIIPEXOfficeoftheECell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIECAIIPEXOfficeoftheECell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIECAIIPEXOfficeoftheECell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "ECA-IIP/EX \r\nOffice of the Executive Dir";
                    this.mUIECAIIPEXOfficeoftheECell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=\"col-md-7\" style=\"padding-left: 79px;\" ng-style=\"{\'padding-left\': 60+(20*of" +
                        "fice.officeLevel-1)}\"";
                    this.mUIECAIIPEXOfficeoftheECell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUIECAIIPEXOfficeoftheECell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIECAIIPEXOfficeoftheECell.FilterProperties[HtmlCell.PropertyNames.Class] = "col-md-7";
                    this.mUIECAIIPEXOfficeoftheECell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIECAIIPEXOfficeoftheECell.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAIIPEXOfficeoftheECell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIECAIIPEXOfficeoftheECell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIInternetoptionsMenuItem
        {
            get
            {
                if ((this.mUIInternetoptionsMenuItem == null))
                {
                    this.mUIInternetoptionsMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIInternetoptionsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Internet options";
                    #endregion
                }
                return this.mUIInternetoptionsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIInternetoptionsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIInternetOptionsWindow : WinWindow
    {
        
        public UIInternetOptionsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Options";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public UIDeleteWindow UIDeleteWindow
        {
            get
            {
                if ((this.mUIDeleteWindow == null))
                {
                    this.mUIDeleteWindow = new UIDeleteWindow(this);
                }
                return this.mUIDeleteWindow;
            }
        }
        
        public UIApplyWindow UIApplyWindow
        {
            get
            {
                if ((this.mUIApplyWindow == null))
                {
                    this.mUIApplyWindow = new UIApplyWindow(this);
                }
                return this.mUIApplyWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDeleteWindow mUIDeleteWindow;
        
        private UIApplyWindow mUIApplyWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDeleteWindow : WinWindow
    {
        
        public UIDeleteWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5501";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete...";
                    this.mUIDeleteButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIApplyWindow : WinWindow
    {
        
        public UIApplyWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12321";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIApplyButton
        {
            get
            {
                if ((this.mUIApplyButton == null))
                {
                    this.mUIApplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIApplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Apply";
                    this.mUIApplyButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIApplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIApplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDeleteBrowsingHistorWindow : WinWindow
    {
        
        public UIDeleteBrowsingHistorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Delete Browsing History";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Delete Browsing History");
            #endregion
        }
        
        #region Properties
        public UIDeleteWindow1 UIDeleteWindow
        {
            get
            {
                if ((this.mUIDeleteWindow == null))
                {
                    this.mUIDeleteWindow = new UIDeleteWindow1(this);
                }
                return this.mUIDeleteWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDeleteWindow1 mUIDeleteWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDeleteWindow1 : WinWindow
    {
        
        public UIDeleteWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5543";
            this.WindowTitles.Add("Delete Browsing History");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete";
                    this.mUIDeleteButton.WindowTitles.Add("Delete Browsing History");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteButton;
        #endregion
    }
}
