// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ViewOffices_ProgramsandBranches.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Verify the Content Menu button is available to toggle and expand to display the Content Menu sections.
        /// </summary>
        public void AssertContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
            Assert.AreEqual(this.AssertContentMenuButtonExpectedValues.UITogglenavigationButtonControlType, uITogglenavigationButton.ControlType.ToString(), "No Content Menu button available.");
        }
        
        /// <summary>
        /// Verify the Branches and Programs tab is available for selection; check innertext, check controltype.
        /// </summary>
        public void AssertIndividualOffice_BranchesandPrograms()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UITopPane.UIBranchesProgramsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Branches & Programs' link equals 'Branches & Programs'
            Assert.AreEqual(this.AssertIndividualOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkInnerText, uIBranchesProgramsHyperlink.InnerText, "No Branches and Programs InnerText on Office Page.");

            // Verify that the 'ControlType' property of 'Branches & Programs' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertIndividualOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkControlType, uIBranchesProgramsHyperlink.ControlType.ToString(), "No link available for Branches and Programs on individual office page.");
        }
        
        /// <summary>
        /// Verify the Branch list displays for the (ECA/A/E) individual office; check class; check innertext.
        /// </summary>
        public void AssertIndividualOffice_BranchList()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITopPane.UIItemCustom;
            #endregion

            // Verify that the 'Class' property of custom control contains 'branch-list'
            StringAssert.Contains(uIItemCustom.Class, this.AssertIndividualOffice_BranchListExpectedValues.UIItemCustomClass, "No Class Branch list available for (ECA/A/E) office.");

            // Verify that the 'InnerText' property of custom control contains ' 
            //Branch
            //ECA/A/E/AF 
            // 
            //Branch
            //ECA/A/E/EAP 
            // 
            //Branch
            //ECA/A/E/EUR 
            // 
            //Branch
            //ECA/A/E/NEA 
            // 
            //Branch
            //ECA/A/E/SCA 
            // 
            //Branch
            //ECA/A/E/WHA 
            // 
            //Branch
            //ECA/A/E/USS 
            // '
            StringAssert.Contains(uIItemCustom.InnerText, this.AssertIndividualOffice_BranchListExpectedValues.UIItemCustomInnerText, "No InnerText for Branch List available.");
        }
        
        /// <summary>
        /// Verify the innertext and controltype are available for the program in the list under the individual office. (Fulbright Visiting Scholar Program)
        /// </summary>
        public void AssertIndividualOffice_Program()
        {
            #region Variable Declarations
            HtmlHyperlink uIFulbrightVisitingSchHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane.UIFulbrightVisitingSchHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Fulbright Visiting Scholar Program' link equals 'Fulbright Visiting Scholar Program'
            Assert.AreEqual(this.AssertIndividualOffice_ProgramExpectedValues.UIFulbrightVisitingSchHyperlinkInnerText, uIFulbrightVisitingSchHyperlink.InnerText, "No individual program available (Fulbright Visiting Scholar Program) in Program l" +
                    "ist for the individual office.");

            // Verify that the 'ControlType' property of 'Fulbright Visiting Scholar Program' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertIndividualOffice_ProgramExpectedValues.UIFulbrightVisitingSchHyperlinkControlType, uIFulbrightVisitingSchHyperlink.ControlType.ToString(), "No Hyperlink available for (Fulbright Visiting Scholar Program) in the Program li" +
                    "st for the individual office.");
        }
        
        /// <summary>
        /// Verify the Program name and description is available in the Program list for the individual office.
        /// </summary>
        public void AssertIndividualOffice_ProgramNameDescription()
        {
            #region Variable Declarations
            HtmlDiv uIFulbrightVisitingSchPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane.UIFulbrightVisitingSchPane;
            #endregion

            // Verify that the 'InnerText' property of 'Fulbright Visiting Scholar Program S' pane contains ' 
            //Fulbright Visiting Scholar Program 
            //
            //Supports foreign scholars to conduct post-doctoral research and university lecturing at U.S. institutions for an academic year or term.'
            StringAssert.Contains(uIFulbrightVisitingSchPane.InnerText, this.AssertIndividualOffice_ProgramNameDescriptionExpectedValues.UIFulbrightVisitingSchPaneInnerText, "No Name or Description available for Program.");
        }
        
        /// <summary>
        /// Verify the (ECA/A/E) is available for selection from the All Offices list.
        /// </summary>
        public void AssertOfficeName()
        {
            #region Variable Declarations
            HtmlHyperlink uIECAAEHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIECAAEHyperlink;
            #endregion

            // Verify that the 'ControlType' property of 'ECA/A/E' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertOfficeNameExpectedValues.UIECAAEHyperlinkControlType, uIECAAEHyperlink.ControlType.ToString(), "No Hyperlink available for (ECA/A/E) office.");

            // Verify that the 'InnerText' property of 'ECA/A/E' link equals 'ECA/A/E'
            Assert.AreEqual(this.AssertOfficeNameExpectedValues.UIECAAEHyperlinkInnerText, uIECAAEHyperlink.InnerText, "No InnerText available for (ECA/A/E) office.");
        }
        
        /// <summary>
        /// Verify the Offices link is available for selection; check inner text; check controltype.
        /// </summary>
        public void AssertOfficesContentMenuLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIOfficesHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIOfficesHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Offices' link equals 'Offices'
            Assert.AreEqual(this.AssertOfficesContentMenuLinkExpectedValues.UIOfficesHyperlinkInnerText, uIOfficesHyperlink.InnerText, "No Offices Inner Text available.");

            // Verify that the 'ControlType' property of 'Offices' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertOfficesContentMenuLinkExpectedValues.UIOfficesHyperlinkControlType, uIOfficesHyperlink.ControlType.ToString(), "No Offices hyperlink ControlType available.");
        }
        
        /// <summary>
        /// Verify the search box text input value is the same as the entry (American)
        /// </summary>
        public void AssertSearchBoxTextInputValue()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument5.UISortlistPane1.UIItemEdit;
            #endregion

            // Verify that the 'ValueAttribute' property of text box contains 'American'
            StringAssert.Contains(uIItemEdit.ValueAttribute, this.AssertSearchBoxTextInputValueExpectedValues.UIItemEditValueAttribute, "Text Input does not match.");
        }
        
        /// <summary>
        /// Verify the Search Programs box is available on the individual office's Branches and Programs page; check class; check controltype.
        /// </summary>
        public void AssertSearchProgramsTextBox()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UISortlistPane.UIItemEdit;
            #endregion

            // Verify that the 'ControlType' property of text box equals 'Edit'
            Assert.AreEqual(this.AssertSearchProgramsTextBoxExpectedValues.UIItemEditControlType, uIItemEdit.ControlType.ToString(), "No Search box for Search Programs.");

            // Verify that the 'Class' property of text box equals 'search-contextual'
            Assert.AreEqual(this.AssertSearchProgramsTextBoxExpectedValues.UIItemEditClass, uIItemEdit.Class, "No Class for search-contextual box for Search Programs.");
        }
        
        /// <summary>
        /// Verify the (ECA-IIP/EX) office is available for selection on the Office Directory landing page.
        /// </summary>
        public void AssertSecondOffice()
        {
            #region Variable Declarations
            HtmlHyperlink uIECAIIPEXHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIECAIIPEXHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ECA-IIP/EX' link equals 'ECA-IIP/EX'
            Assert.AreEqual(this.AssertSecondOfficeExpectedValues.UIECAIIPEXHyperlinkInnerText, uIECAIIPEXHyperlink.InnerText, "No ECA-IIP/EX innertext found.");

            // Verify that the 'ControlType' property of 'ECA-IIP/EX' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertSecondOfficeExpectedValues.UIECAIIPEXHyperlinkControlType, uIECAIIPEXHyperlink.ControlType.ToString(), "No hyperlink for (ECA-IIP/EX) found.");
        }
        
        /// <summary>
        /// Verify the tab for Branches and Programs is available for selection for the individual second office (ECA-IIP/EX).
        /// </summary>
        public void AssertSecondOffice_BranchesandPrograms()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument4.UITopPane.UIBranchesProgramsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Branches & Programs' link equals 'Branches & Programs'
            Assert.AreEqual(this.AssertSecondOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkInnerText, uIBranchesProgramsHyperlink.InnerText, "No Branches and Programs innertext found for the tab under the individual office " +
                    "(ECA-IIP/EX)");

            // Verify that the 'ControlType' property of 'Branches & Programs' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertSecondOffice_BranchesandProgramsExpectedValues.UIBranchesProgramsHyperlinkControlType, uIBranchesProgramsHyperlink.ControlType.ToString(), "No hyperlink available/ tab available for selection under the individual second o" +
                    "ffice. (ECA-IIP/EX)");
        }
        
        /// <summary>
        /// Verify the (Academic Exchange Programs - Near East Programs) sub program displays on the page with the indent to distinguish it as a sub program/child program.
        /// </summary>
        public void AssertSubProgramIndent()
        {
            #region Variable Declarations
            HtmlDiv uIAcademicExchangeProgPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument5.UISortlistPane.UIAcademicExchangeProgPane;
            #endregion

            // Verify that the 'ControlDefinition' property of 'Academic Exchange Programs - Near East P' pane equals 'style="margin-left: 60px;" ng-style="{marginLeft: (program.programLevel - 1) * 60}"'
            Assert.AreEqual(this.AssertSubProgramIndentExpectedValues.UIAcademicExchangeProgPaneControlDefinition, uIAcademicExchangeProgPane.ControlDefinition, "No indent for sub program in Programs display list. (Indent: Academic Exchange Pr" +
                    "ograms - Near East Programs)");
        }
        
        /// <summary>
        /// Clear the text from the Search Programs box.
        /// </summary>
        public void ClearSearchProgramsBox()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument5.UISortlistPane1.UIItemEdit;
            #endregion

            // Type '' in text box
            uIItemEdit.Text = this.ClearSearchProgramsBoxParams.UIItemEditText;
        }
        
        /// <summary>
        /// Close browser. End Test.
        /// </summary>
        public void CloseBrowserWindow()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Perform Close on Browser Window
            uINewtabInternetExplorWindow.Close();
        }
        
        /// <summary>
        /// Open browser; navigate to QA site; login with ECATest creds; click sign in.
        /// </summary>
        public void LogintoQA()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UINewtabInternetExplorWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            WinEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIItemWindow.UIItemEdit;
            WinButton uIGotohttpsecakmtqaazuButton = this.UINewtabInternetExplorWindow.UIPageControlToolBar.UIGotohttpsecakmtqaazuButton;
            HtmlEdit uIUseraccountEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIUseraccountEdit;
            HtmlEdit uIPasswordEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIPasswordEdit;
            HtmlSpan uISigninPane = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UISigninPane;
            #endregion

            // Go to web page 'about:Tabs' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.LogintoQAParams.UINewtabInternetExplorWindowUrl));

            // Click 'Address and search using Bing' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(31, 8));

            // Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
            Keyboard.SendKeys(uIItemEdit, this.LogintoQAParams.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt...' button
            Mouse.Click(uIGotohttpsecakmtqaazuButton, new Point(9, 11));

            // Type 'ECATest1@statedept.us' in 'User account' text box
            uIUseraccountEdit.Text = this.LogintoQAParams.UIUseraccountEditText;

            // Type '{Tab}' in 'User account' text box
            Keyboard.SendKeys(uIUseraccountEdit, this.LogintoQAParams.UIUseraccountEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LogintoQAParams.UIPasswordEditPassword;

            // Double-Click 'Sign in' pane
            Mouse.DoubleClick(uISigninPane, new Point(45, 18));
        }
        
        /// <summary>
        /// Toggle Content Menu to expand; select Offices link
        /// </summary>
        public void NavigatetoOfficeDirectory()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITogglenavigationButton;
            HtmlHyperlink uIOfficesHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UICbpspmenus1Custom.UIOfficesHyperlink;
            #endregion

            // Click 'Toggle navigation' button
            Mouse.Click(uITogglenavigationButton, new Point(21, 17));

            // Click 'Offices' link
            Mouse.Click(uIOfficesHyperlink, new Point(49, 35));
        }
        
        /// <summary>
        /// Enter search box text for filtering the Programs list (American).
        /// </summary>
        public void SearchBoxText_Input()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument5.UISortlistPane.UIItemEdit;
            #endregion

            // Type 'American' in text box
            uIItemEdit.Text = this.SearchBoxText_InputParams.UIItemEditText;
        }
        
        /// <summary>
        /// Select the Branches and Programs tab for the individual office.
        /// </summary>
        public void SelectBranchesandProgramsTab()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UITopPane.UIBranchesProgramsHyperlink;
            #endregion

            // Click 'Branches & Programs' link
            Mouse.Click(uIBranchesProgramsHyperlink, new Point(69, 8));

            // Click 'Branches & Programs' link
            Mouse.Click(uIBranchesProgramsHyperlink, new Point(77, 10));
        }
        
        /// <summary>
        /// Click the Content Menu button to expand the Content Menu and display the links for the menu sections.
        /// </summary>
        public void SelectContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Click 'Toggle navigation' button
            Mouse.Click(uITogglenavigationButton, new Point(16, 14));
        }
        
        /// <summary>
        /// Click the (ECA/A/E) link to navigate to the office landing page.
        /// </summary>
        public void SelectOfficeName()
        {
            #region Variable Declarations
            HtmlHyperlink uIECAAEHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIECAAEHyperlink;
            #endregion

            // Click 'ECA/A/E' link
            Mouse.Click(uIECAAEHyperlink, new Point(82, 16));
        }
        
        /// <summary>
        /// Click the Offices link in the Content Menu.
        /// </summary>
        public void SelectOfficesContentMenuLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIOfficesHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIOfficesHyperlink;
            #endregion

            // Click 'Offices' link
            Mouse.Click(uIOfficesHyperlink, new Point(53, 33));
        }
        
        /// <summary>
        /// Select the tab for the second office's Branches and Programs.
        /// </summary>
        public void SelectSecondBranchesandPrograms()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument4.UITopPane.UIBranchesProgramsHyperlink;
            #endregion

            // Click 'Branches & Programs' link
            Mouse.Click(uIBranchesProgramsHyperlink, new Point(68, 8));
        }
        
        /// <summary>
        /// Select the (ECA-IIP/EX) office from the Directory list on the landing page.
        /// </summary>
        public void SelectSecondOffice()
        {
            #region Variable Declarations
            HtmlHyperlink uIECAIIPEXHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UISortlistPane.UIECAIIPEXHyperlink;
            #endregion

            // Click 'ECA-IIP/EX' link
            Mouse.Click(uIECAIIPEXHyperlink, new Point(77, 7));
        }
        
        #region Properties
        public virtual AssertContentMenuButtonExpectedValues AssertContentMenuButtonExpectedValues
        {
            get
            {
                if ((this.mAssertContentMenuButtonExpectedValues == null))
                {
                    this.mAssertContentMenuButtonExpectedValues = new AssertContentMenuButtonExpectedValues();
                }
                return this.mAssertContentMenuButtonExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_BranchesandProgramsExpectedValues AssertIndividualOffice_BranchesandProgramsExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_BranchesandProgramsExpectedValues == null))
                {
                    this.mAssertIndividualOffice_BranchesandProgramsExpectedValues = new AssertIndividualOffice_BranchesandProgramsExpectedValues();
                }
                return this.mAssertIndividualOffice_BranchesandProgramsExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_BranchListExpectedValues AssertIndividualOffice_BranchListExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_BranchListExpectedValues == null))
                {
                    this.mAssertIndividualOffice_BranchListExpectedValues = new AssertIndividualOffice_BranchListExpectedValues();
                }
                return this.mAssertIndividualOffice_BranchListExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_ProgramExpectedValues AssertIndividualOffice_ProgramExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_ProgramExpectedValues == null))
                {
                    this.mAssertIndividualOffice_ProgramExpectedValues = new AssertIndividualOffice_ProgramExpectedValues();
                }
                return this.mAssertIndividualOffice_ProgramExpectedValues;
            }
        }
        
        public virtual AssertIndividualOffice_ProgramNameDescriptionExpectedValues AssertIndividualOffice_ProgramNameDescriptionExpectedValues
        {
            get
            {
                if ((this.mAssertIndividualOffice_ProgramNameDescriptionExpectedValues == null))
                {
                    this.mAssertIndividualOffice_ProgramNameDescriptionExpectedValues = new AssertIndividualOffice_ProgramNameDescriptionExpectedValues();
                }
                return this.mAssertIndividualOffice_ProgramNameDescriptionExpectedValues;
            }
        }
        
        public virtual AssertOfficeNameExpectedValues AssertOfficeNameExpectedValues
        {
            get
            {
                if ((this.mAssertOfficeNameExpectedValues == null))
                {
                    this.mAssertOfficeNameExpectedValues = new AssertOfficeNameExpectedValues();
                }
                return this.mAssertOfficeNameExpectedValues;
            }
        }
        
        public virtual AssertOfficesContentMenuLinkExpectedValues AssertOfficesContentMenuLinkExpectedValues
        {
            get
            {
                if ((this.mAssertOfficesContentMenuLinkExpectedValues == null))
                {
                    this.mAssertOfficesContentMenuLinkExpectedValues = new AssertOfficesContentMenuLinkExpectedValues();
                }
                return this.mAssertOfficesContentMenuLinkExpectedValues;
            }
        }
        
        public virtual AssertSearchBoxTextInputValueExpectedValues AssertSearchBoxTextInputValueExpectedValues
        {
            get
            {
                if ((this.mAssertSearchBoxTextInputValueExpectedValues == null))
                {
                    this.mAssertSearchBoxTextInputValueExpectedValues = new AssertSearchBoxTextInputValueExpectedValues();
                }
                return this.mAssertSearchBoxTextInputValueExpectedValues;
            }
        }
        
        public virtual AssertSearchProgramsTextBoxExpectedValues AssertSearchProgramsTextBoxExpectedValues
        {
            get
            {
                if ((this.mAssertSearchProgramsTextBoxExpectedValues == null))
                {
                    this.mAssertSearchProgramsTextBoxExpectedValues = new AssertSearchProgramsTextBoxExpectedValues();
                }
                return this.mAssertSearchProgramsTextBoxExpectedValues;
            }
        }
        
        public virtual AssertSecondOfficeExpectedValues AssertSecondOfficeExpectedValues
        {
            get
            {
                if ((this.mAssertSecondOfficeExpectedValues == null))
                {
                    this.mAssertSecondOfficeExpectedValues = new AssertSecondOfficeExpectedValues();
                }
                return this.mAssertSecondOfficeExpectedValues;
            }
        }
        
        public virtual AssertSecondOffice_BranchesandProgramsExpectedValues AssertSecondOffice_BranchesandProgramsExpectedValues
        {
            get
            {
                if ((this.mAssertSecondOffice_BranchesandProgramsExpectedValues == null))
                {
                    this.mAssertSecondOffice_BranchesandProgramsExpectedValues = new AssertSecondOffice_BranchesandProgramsExpectedValues();
                }
                return this.mAssertSecondOffice_BranchesandProgramsExpectedValues;
            }
        }
        
        public virtual AssertSubProgramIndentExpectedValues AssertSubProgramIndentExpectedValues
        {
            get
            {
                if ((this.mAssertSubProgramIndentExpectedValues == null))
                {
                    this.mAssertSubProgramIndentExpectedValues = new AssertSubProgramIndentExpectedValues();
                }
                return this.mAssertSubProgramIndentExpectedValues;
            }
        }
        
        public virtual ClearSearchProgramsBoxParams ClearSearchProgramsBoxParams
        {
            get
            {
                if ((this.mClearSearchProgramsBoxParams == null))
                {
                    this.mClearSearchProgramsBoxParams = new ClearSearchProgramsBoxParams();
                }
                return this.mClearSearchProgramsBoxParams;
            }
        }
        
        public virtual LogintoQAParams LogintoQAParams
        {
            get
            {
                if ((this.mLogintoQAParams == null))
                {
                    this.mLogintoQAParams = new LogintoQAParams();
                }
                return this.mLogintoQAParams;
            }
        }
        
        public virtual SearchBoxText_InputParams SearchBoxText_InputParams
        {
            get
            {
                if ((this.mSearchBoxText_InputParams == null))
                {
                    this.mSearchBoxText_InputParams = new SearchBoxText_InputParams();
                }
                return this.mSearchBoxText_InputParams;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertContentMenuButtonExpectedValues mAssertContentMenuButtonExpectedValues;
        
        private AssertIndividualOffice_BranchesandProgramsExpectedValues mAssertIndividualOffice_BranchesandProgramsExpectedValues;
        
        private AssertIndividualOffice_BranchListExpectedValues mAssertIndividualOffice_BranchListExpectedValues;
        
        private AssertIndividualOffice_ProgramExpectedValues mAssertIndividualOffice_ProgramExpectedValues;
        
        private AssertIndividualOffice_ProgramNameDescriptionExpectedValues mAssertIndividualOffice_ProgramNameDescriptionExpectedValues;
        
        private AssertOfficeNameExpectedValues mAssertOfficeNameExpectedValues;
        
        private AssertOfficesContentMenuLinkExpectedValues mAssertOfficesContentMenuLinkExpectedValues;
        
        private AssertSearchBoxTextInputValueExpectedValues mAssertSearchBoxTextInputValueExpectedValues;
        
        private AssertSearchProgramsTextBoxExpectedValues mAssertSearchProgramsTextBoxExpectedValues;
        
        private AssertSecondOfficeExpectedValues mAssertSecondOfficeExpectedValues;
        
        private AssertSecondOffice_BranchesandProgramsExpectedValues mAssertSecondOffice_BranchesandProgramsExpectedValues;
        
        private AssertSubProgramIndentExpectedValues mAssertSubProgramIndentExpectedValues;
        
        private ClearSearchProgramsBoxParams mClearSearchProgramsBoxParams;
        
        private LogintoQAParams mLogintoQAParams;
        
        private SearchBoxText_InputParams mSearchBoxText_InputParams;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertContentMenuButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertContentMenuButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
        /// </summary>
        public string UITogglenavigationButtonControlType = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_BranchesandPrograms'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertIndividualOffice_BranchesandProgramsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Branches & Programs' link equals 'Branches & Programs'
        /// </summary>
        public string UIBranchesProgramsHyperlinkInnerText = "Branches & Programs";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Branches & Programs' link equals 'Hyperlink'
        /// </summary>
        public string UIBranchesProgramsHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_BranchList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertIndividualOffice_BranchListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of custom control contains 'branch-list'
        /// </summary>
        public string UIItemCustomClass = "branch-list";
        
        /// <summary>
        /// Verify that the 'InnerText' property of custom control contains ' 
        ///Branch
        ///ECA/A/E/AF 
        /// 
        ///Branch
        ///ECA/A/E/EAP 
        /// 
        ///Branch
        ///ECA/A/E/EUR 
        /// 
        ///Branch
        ///ECA/A/E/NEA 
        /// 
        ///Branch
        ///ECA/A/E/SCA 
        /// 
        ///Branch
        ///ECA/A/E/WHA 
        /// 
        ///Branch
        ///ECA/A/E/USS 
        /// '
        /// </summary>
        public string UIItemCustomInnerText = " \r\nBranch\r\nECA/A/E/AF \r\n \r\nBranch\r\nECA/A/E/EAP \r\n \r\nBranch\r\nECA/A/E/EUR \r\n \r\nBran" +
            "ch\r\nECA/A/E/NEA \r\n \r\nBranch\r\nECA/A/E/SCA \r\n \r\nBranch\r\nECA/A/E/WHA \r\n \r\nBranch\r\nE" +
            "CA/A/E/USS \r\n ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_Program'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertIndividualOffice_ProgramExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Fulbright Visiting Scholar Program' link equals 'Fulbright Visiting Scholar Program'
        /// </summary>
        public string UIFulbrightVisitingSchHyperlinkInnerText = "Fulbright Visiting Scholar Program";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Fulbright Visiting Scholar Program' link equals 'Hyperlink'
        /// </summary>
        public string UIFulbrightVisitingSchHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIndividualOffice_ProgramNameDescription'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertIndividualOffice_ProgramNameDescriptionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Fulbright Visiting Scholar Program S' pane contains ' 
        ///Fulbright Visiting Scholar Program 
        ///
        ///Supports foreign scholars to conduct post-doctoral research and university lecturing at U.S. institutions for an academic year or term.'
        /// </summary>
        public string UIFulbrightVisitingSchPaneInnerText = " \r\nFulbright Visiting Scholar Program \r\n\r\nSupports foreign scholars to conduct po" +
            "st-doctoral research and university lecturing at U.S. institutions for an academ" +
            "ic year or term.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertOfficeName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertOfficeNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'ECA/A/E' link equals 'Hyperlink'
        /// </summary>
        public string UIECAAEHyperlinkControlType = "Hyperlink";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'ECA/A/E' link equals 'ECA/A/E'
        /// </summary>
        public string UIECAAEHyperlinkInnerText = "ECA/A/E";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertOfficesContentMenuLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertOfficesContentMenuLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Offices' link equals 'Offices'
        /// </summary>
        public string UIOfficesHyperlinkInnerText = "Offices";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Offices' link equals 'Hyperlink'
        /// </summary>
        public string UIOfficesHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchBoxTextInputValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertSearchBoxTextInputValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAttribute' property of text box contains 'American'
        /// </summary>
        public string UIItemEditValueAttribute = "American";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchProgramsTextBox'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertSearchProgramsTextBoxExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of text box equals 'Edit'
        /// </summary>
        public string UIItemEditControlType = "Edit";
        
        /// <summary>
        /// Verify that the 'Class' property of text box equals 'search-contextual'
        /// </summary>
        public string UIItemEditClass = "search-contextual";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSecondOffice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertSecondOfficeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ECA-IIP/EX' link equals 'ECA-IIP/EX'
        /// </summary>
        public string UIECAIIPEXHyperlinkInnerText = "ECA-IIP/EX";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'ECA-IIP/EX' link equals 'Hyperlink'
        /// </summary>
        public string UIECAIIPEXHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSecondOffice_BranchesandPrograms'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertSecondOffice_BranchesandProgramsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Branches & Programs' link equals 'Branches & Programs'
        /// </summary>
        public string UIBranchesProgramsHyperlinkInnerText = "Branches & Programs";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Branches & Programs' link equals 'Hyperlink'
        /// </summary>
        public string UIBranchesProgramsHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSubProgramIndent'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertSubProgramIndentExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'Academic Exchange Programs - Near East P' pane equals 'style="margin-left: 60px;" ng-style="{marginLeft: (program.programLevel - 1) * 60}"'
        /// </summary>
        public string UIAcademicExchangeProgPaneControlDefinition = "style=\"margin-left: 60px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60" +
            "}\"";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClearSearchProgramsBox'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class ClearSearchProgramsBoxParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in text box
        /// </summary>
        public string UIItemEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogintoQA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class LogintoQAParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:Tabs' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "about:Tabs";
        
        /// <summary>
        /// Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
        /// </summary>
        public string UIItemEditSendKeys = "https://eca-kmt-qa.azurewebsites.net/";
        
        /// <summary>
        /// Type 'ECATest1@statedept.us' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditText = "ECATest1@statedept.us";
        
        /// <summary>
        /// Type '{Tab}' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pnl8gvcmh7nq2IDxDyIPucvLUfiP5WCkCWyYApPZam4=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchBoxText_Input'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class SearchBoxText_InputParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'American' in text box
        /// </summary>
        public string UIItemEditText = "American";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPageControlToolBar UIPageControlToolBar
        {
            get
            {
                if ((this.mUIPageControlToolBar == null))
                {
                    this.mUIPageControlToolBar = new UIPageControlToolBar(this);
                }
                return this.mUIPageControlToolBar;
            }
        }
        
        public UISignintoAzureActiveDDocument UISignintoAzureActiveDDocument
        {
            get
            {
                if ((this.mUISignintoAzureActiveDDocument == null))
                {
                    this.mUISignintoAzureActiveDDocument = new UISignintoAzureActiveDDocument(this);
                }
                return this.mUISignintoAzureActiveDDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument UIHttpsecakmtqaazureweDocument
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument = new UIHttpsecakmtqaazureweDocument(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument1 UIHttpsecakmtqaazureweDocument1
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument1 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument1 = new UIHttpsecakmtqaazureweDocument1(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument1;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument2 UIHttpsecakmtqaazureweDocument2
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument2 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument2 = new UIHttpsecakmtqaazureweDocument2(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument2;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument3 UIHttpsecakmtqaazureweDocument3
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument3 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument3 = new UIHttpsecakmtqaazureweDocument3(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument3;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument4 UIHttpsecakmtqaazureweDocument4
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument4 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument4 = new UIHttpsecakmtqaazureweDocument4(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument4;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument5 UIHttpsecakmtqaazureweDocument5
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument5 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument5 = new UIHttpsecakmtqaazureweDocument5(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument5;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIPageControlToolBar mUIPageControlToolBar;
        
        private UISignintoAzureActiveDDocument mUISignintoAzureActiveDDocument;
        
        private UIHttpsecakmtqaazureweDocument mUIHttpsecakmtqaazureweDocument;
        
        private UIHttpsecakmtqaazureweDocument1 mUIHttpsecakmtqaazureweDocument1;
        
        private UIHttpsecakmtqaazureweDocument2 mUIHttpsecakmtqaazureweDocument2;
        
        private UIHttpsecakmtqaazureweDocument3 mUIHttpsecakmtqaazureweDocument3;
        
        private UIHttpsecakmtqaazureweDocument4 mUIHttpsecakmtqaazureweDocument4;
        
        private UIHttpsecakmtqaazureweDocument5 mUIHttpsecakmtqaazureweDocument5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Address and search using Bing";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIPageControlToolBar : WinToolBar
    {
        
        public UIPageControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Page Control";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinButton UIGotohttpsecakmtqaazuButton
        {
            get
            {
                if ((this.mUIGotohttpsecakmtqaazuButton == null))
                {
                    this.mUIGotohttpsecakmtqaazuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGotohttpsecakmtqaazuButton.SearchProperties[WinButton.PropertyNames.Name] = "Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt+Enter to open in a new tab)";
                    this.mUIGotohttpsecakmtqaazuButton.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIGotohttpsecakmtqaazuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGotohttpsecakmtqaazuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISignintoAzureActiveDDocument : HtmlDocument
    {
        
        public UISignintoAzureActiveDDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to Azure Active Directory";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/login.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/login.srf?wa=wsignin1.0&wtrealm=https%3a%2f%2flogin.windows.net&wreply=https%3a%2f%2flogin.windows.net%2fstatedept.us%2fwsfederation&wctx=3wEBD09BdXRoMkF1dGhvcml6ZQEPT0F1dGgyQXV0aG9yaXplAQxzdGF0ZWRlcHQudXMBAQEVb3BlbmlkY29ubmVjdC5pZHRva2VuAAABASRlMDM1NmU1NS1lMTI0LTQ1MmMtODM3ZC1hZWI3NTA0MTg1ZmYBJWh0dHBzOi8vZWNhLWttdC1xYS5henVyZXdlYnNpdGVzLm5ldC8AAAAAAAAAAAAAAQEaAAAAASVodHRwczovL2VjYS1rbXQtcWEuYXp1cmV3ZWJzaXRlcy5uZXQvAQkBCGFkYWxfdmVyAQUxLjAuMAEDY2lkASQ5ZGEwN2Q3Ny0wMmRlLTQxM2QtYWU1My0xNzFlZGZkYTA5NDIBCWVycm9yX3VyaQElaHR0cHM6Ly9lY2Eta210LXFhLmF6dXJld2Vic2l0ZXMubmV0LwEPaW5jbHVkZV9hdF9oYXNoAQExAQtpbnRlcmFjdGl2ZQEBMQEFTm9uY2UBJGI0ZjYyNDE2LWFiNDktNDgzMi04YWVmLTgwZTEyNDE5MTM2YQECcmMBJDcwZGRmYTg1LWJjYjgtNDZhYi05MzNkLWFmZWY4ZTgwNTE2ZAEJc2Vzc2lvbklkASRmZmFhNjk0YS02NzkyLTRkZTktOTdkYS0yNDIzY2ZhOWU3OTkBD2xpbWl0X3Rva2Vuc2l6ZQEBMe01&wp=MBI_FED_SSL&id=";
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBackground_page_overPane
        {
            get
            {
                if ((this.mUIBackground_page_overPane == null))
                {
                    this.mUIBackground_page_overPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "background_page_overlay";
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "overlay ie_legacy";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"overlay ie_legacy\" id=\"background_page_overlay\" style=\"visibility: visible" +
                        "; opacity: 0.164; background-color: rgb(0, 114, 198);\"";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIBackground_page_overPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIBackground_page_overPane;
            }
        }
        
        public HtmlEdit UIUseraccountEdit
        {
            get
            {
                if ((this.mUIUseraccountEdit == null))
                {
                    this.mUIUseraccountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_userid_inputtext";
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User account";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required email field normaltext";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login\" tabindex=\"1\" class=\"login_t";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUseraccountEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIUseraccountEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state\" " +
                        "id=\"cred_sign_in_button\" role=\"button\" style=\"opacity: 1;\" onclick=\"Post.SubmitC" +
                        "reds();return false;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBackground_page_overPane;
        
        private HtmlEdit mUIUseraccountEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public UICbpspmenus1Custom UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUITogglenavigationButton;
        
        private UICbpspmenus1Custom mUICbpspmenus1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UICbpspmenus1Custom : HtmlCustom
    {
        
        public UICbpspmenus1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOfficesHyperlink
        {
            get
            {
                if ((this.mUIOfficesHyperlink == null))
                {
                    this.mUIOfficesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Offices";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/alloffices/";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allo";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIOfficesHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOfficesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument1 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/alloffices/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane(this);
                }
                return this.mUISortlistPane;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane mUISortlistPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISortlistPane : HtmlDiv
    {
        
        public UISortlistPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 56 offices\r\n\r\n \r\n\r\n\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-isolate-scope\" id=\"sort-list\" st-table=\"offices\" st-pipe=\"getOffices\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIECAAEHyperlink
        {
            get
            {
                if ((this.mUIECAAEHyperlink == null))
                {
                    this.mUIECAAEHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIECAAEHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ECA/A/E";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/overview";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIECAAEHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIECAAEHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAAEHyperlink;
            }
        }
        
        public HtmlHyperlink UIECAIIPEXHyperlink
        {
            get
            {
                if ((this.mUIECAIIPEXHyperlink == null))
                {
                    this.mUIECAIIPEXHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIECAIIPEXHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ECA-IIP/EX";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/overview";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/ove";
                    this.mUIECAIIPEXHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIECAIIPEXHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIECAIIPEXHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIECAAEHyperlink;
        
        private HtmlHyperlink mUIECAIIPEXHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument2 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1414/overview#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UITopPane : HtmlDiv
    {
        
        public UITopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA/A/E\r\n\r\n\r\n\r\nLast Updated Feb 11, 2015";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBranchesProgramsHyperlink
        {
            get
            {
                if ((this.mUIBranchesProgramsHyperlink == null))
                {
                    this.mUIBranchesProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Branches & Programs";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/branches";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIBranchesProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIBranchesProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBranchesProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument3 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1414/branches#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane1 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane1(this);
                }
                return this.mUITopPane;
            }
        }
        
        public UISortlistPane1 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane1(this);
                }
                return this.mUISortlistPane;
            }
        }
        
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public UICbpspmenus1Custom1 UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom1(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane1 mUITopPane;
        
        private UISortlistPane1 mUISortlistPane;
        
        private HtmlButton mUITogglenavigationButton;
        
        private UICbpspmenus1Custom1 mUICbpspmenus1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UITopPane1 : HtmlDiv
    {
        
        public UITopPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA/A/E\r\n\r\n\r\n\r\nLast Updated Feb 11, 2015";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "UL";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "branch-list";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"branch-list\" ng-show=\"!isLoadingB";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISortlistPane1 : HtmlDiv
    {
        
        public UISortlistPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 1 of 1 programs\r\n\r\n\r\n \r\n \r\nF";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope ng-isolate-scope\" id=\"sort-list\" st-table=\"programs\" st-pipe=\"get" +
                "Programs\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search-contextual";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search-contextual\" type=\"search\" ";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public HtmlHyperlink UIFulbrightVisitingSchHyperlink
        {
            get
            {
                if ((this.mUIFulbrightVisitingSchHyperlink == null))
                {
                    this.mUIFulbrightVisitingSchHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFulbrightVisitingSchHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Fulbright Visiting Scholar Program";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1414/programs/54/overview";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1414/";
                    this.mUIFulbrightVisitingSchHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIFulbrightVisitingSchHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIFulbrightVisitingSchHyperlink;
            }
        }
        
        public HtmlDiv UIFulbrightVisitingSchPane
        {
            get
            {
                if ((this.mUIFulbrightVisitingSchPane == null))
                {
                    this.mUIFulbrightVisitingSchPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIFulbrightVisitingSchPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIFulbrightVisitingSchPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Fulbright Visiting Scholar Program \r\n\r\nS";
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"margin-left: 0px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60}" +
                        "\"";
                    this.mUIFulbrightVisitingSchPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "49";
                    this.mUIFulbrightVisitingSchPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIFulbrightVisitingSchPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIItemEdit;
        
        private HtmlHyperlink mUIFulbrightVisitingSchHyperlink;
        
        private HtmlDiv mUIFulbrightVisitingSchPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UICbpspmenus1Custom1 : HtmlCustom
    {
        
        public UICbpspmenus1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOfficesHyperlink
        {
            get
            {
                if ((this.mUIOfficesHyperlink == null))
                {
                    this.mUIOfficesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOfficesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Offices";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/alloffices/";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allo";
                    this.mUIOfficesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIOfficesHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIOfficesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOfficesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument4 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1/overview#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane2 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane2(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane2 mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UITopPane2 : HtmlDiv
    {
        
        public UITopPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ECA-IIP/EX\r\n\r\n\r\n\r\nLast Updated Jan 26, 2";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBranchesProgramsHyperlink
        {
            get
            {
                if ((this.mUIBranchesProgramsHyperlink == null))
                {
                    this.mUIBranchesProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBranchesProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Branches & Programs";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/branches";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/bra";
                    this.mUIBranchesProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIBranchesProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIBranchesProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBranchesProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument5 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1/branches#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UISortlistPane2 UISortlistPane
        {
            get
            {
                if ((this.mUISortlistPane == null))
                {
                    this.mUISortlistPane = new UISortlistPane2(this);
                }
                return this.mUISortlistPane;
            }
        }
        
        public UISortlistPane11 UISortlistPane1
        {
            get
            {
                if ((this.mUISortlistPane1 == null))
                {
                    this.mUISortlistPane1 = new UISortlistPane11(this);
                }
                return this.mUISortlistPane1;
            }
        }
        #endregion
        
        #region Fields
        private UISortlistPane2 mUISortlistPane;
        
        private UISortlistPane11 mUISortlistPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISortlistPane2 : HtmlDiv
    {
        
        public UISortlistPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 136 programs\r\n\r\n\r\n \r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope ng-isolate-scope\" id=\"sort-list\" st-table=\"programs\" st-pipe=\"get" +
                "Programs\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search-contextual";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search-contextual\" type=\"search\" ";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public HtmlDiv UIAcademicExchangeProgPane
        {
            get
            {
                if ((this.mUIAcademicExchangeProgPane == null))
                {
                    this.mUIAcademicExchangeProgPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAcademicExchangeProgPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAcademicExchangeProgPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Academic Exchange Programs - Near East P";
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"margin-left: 60px;\" ng-style=\"{marginLeft: (program.programLevel - 1) * 60" +
                        "}\"";
                    this.mUIAcademicExchangeProgPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "50";
                    this.mUIAcademicExchangeProgPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIAcademicExchangeProgPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIItemEdit;
        
        private HtmlDiv mUIAcademicExchangeProgPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISortlistPane11 : HtmlDiv
    {
        
        public UISortlistPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Showing 1 - 25 of 37 programs\r\n\r\n\r\n \r\n \r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope ng-isolate-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope ng-isolate-scope\" id=\"sort-list\" st-table=\"programs\" st-pipe=\"get" +
                "Programs\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "47";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "search-contextual";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"search-contextual\" type=\"search\" ";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIItemEdit;
        #endregion
    }
}
