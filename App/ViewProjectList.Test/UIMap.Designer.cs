// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ViewProjectList.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Verify Branches & Projects link exists
        /// </summary>
        public void BranchesandProjectsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProjectsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UITopPane.UIBranchesProjectsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Branches & Projects' link equals 'Branches & Projects'
            Assert.AreEqual(this.BranchesandProjectsLinkExpectedValues.UIBranchesProjectsHyperlinkInnerText, uIBranchesProjectsHyperlink.InnerText, "No Branches and Projects link");
        }
        
        /// <summary>
        /// Close browser window by clicking (X)
        /// </summary>
        public void CloseBrowser()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Perform Close on Browser Window
            uINewtabInternetExplorWindow.Close();
        }
        
        /// <summary>
        /// Check for Content Menu Button
        /// </summary>
        public void ContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
            Assert.AreEqual(this.ContentMenuButtonExpectedValues.UITogglenavigationButtonControlType, uITogglenavigationButton.ControlType.ToString(), "No Content Menu Button");
        }
        
        /// <summary>
        /// Verify the hyperlink for individual program
        /// </summary>
        public void IndividualProgramLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAcademicExchangeProgHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UIAcademicExchangeProgHyperlink;
            #endregion

            // Verify that the 'ControlType' property of 'Academic Exchange Programs' link equals 'Hyperlink'
            Assert.AreEqual(this.IndividualProgramLinkExpectedValues.UIAcademicExchangeProgHyperlinkControlType, uIAcademicExchangeProgHyperlink.ControlType.ToString(), "No Hyperlink available for specific Program");
        }
        
        /// <summary>
        /// Login to QA site with ECATest1 creds
        /// </summary>
        public void LogintoQA()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UINewtabInternetExplorWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            WinEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIItemWindow.UIItemEdit;
            WinButton uIGotohttpsecakmtqaazuButton = this.UINewtabInternetExplorWindow.UIPageControlToolBar.UIGotohttpsecakmtqaazuButton;
            HtmlEdit uIUseraccountEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIUseraccountEdit;
            HtmlCustom uICredentialsCustom = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UICredentialsCustom;
            HtmlEdit uIPasswordEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIPasswordEdit;
            HtmlSpan uISigninPane = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UISigninPane;
            #endregion

            // Go to web page 'about:Tabs' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.LogintoQAParams.UINewtabInternetExplorWindowUrl));

            // Click 'Address and search using Google' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(37, 11));

            // Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
            Keyboard.SendKeys(uIItemEdit, this.LogintoQAParams.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt...' button
            Mouse.Click(uIGotohttpsecakmtqaazuButton, new Point(6, 15));

            // Type 'ECATest1@statedept.us' in 'User account' text box
            uIUseraccountEdit.Text = this.LogintoQAParams.UIUseraccountEditText;

            // Type '{Tab}' in 'User account' text box
            Keyboard.SendKeys(uIUseraccountEdit, this.LogintoQAParams.UIUseraccountEditSendKeys, ModifierKeys.None);

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'credentials' custom control at (1, 1)
            Mouse.Hover(uICredentialsCustom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LogintoQAParams.UIPasswordEditPassword;

            // Double-Click 'Sign in' pane
            Mouse.DoubleClick(uISigninPane, new Point(37, 13));
        }
        
        /// <summary>
        /// Refreshes All Programs page for the load of all programs; otherwise a COM exception is thrown and no data is displayed
        /// </summary>
        public void RefreshAllPrograms()
        {
            #region Variable Declarations
            HtmlHyperlink uIProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UICbpspmenus1Custom.UIProgramsHyperlink;
            #endregion

            // Type '{F5}' in 'Programs' link
            Keyboard.SendKeys(uIProgramsHyperlink, this.RefreshAllProgramsParams.UIProgramsHyperlinkSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Refresh Branches & Projects to load the projects list for the specific program.
        /// </summary>
        public void RefreshBranchesandProjects()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProjectsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument3.UITopPane.UIBranchesProjectsHyperlink;
            #endregion

            // Type '{F5}' in 'Branches & Projects' link
            Keyboard.SendKeys(uIBranchesProjectsHyperlink, this.RefreshBranchesandProjectsParams.UIBranchesProjectsHyperlinkSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Refresh browser for individual program overview to load
        /// </summary>
        public void RefreshIndividualProgram()
        {
            #region Variable Declarations
            HtmlDocument uIHttpsecakmtqaazureweDocument2 = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2;
            #endregion

            // Type '{F5}' in 'https://eca-kmt-qa.azurewebsites.net/#/offices/1/p...' document
            Keyboard.SendKeys(uIHttpsecakmtqaazureweDocument2, this.RefreshIndividualProgramParams.UIHttpsecakmtqaazureweDocument2SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Scroll Down on the Branches & Projects page to view the Projects List
        /// </summary>
        public void ScrollDown()
        {
            #region Variable Declarations
            HtmlDocument uIHttpsecakmtqaazureweDocument4 = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument4;
            #endregion

            // Move 'https://eca-kmt-qa.azurewebsites.net/' document
            //Mouse.StartDragging(uIHttpsecakmtqaazureweDocument4, new Point(1354, 179));
            //Mouse.StopDragging(uIHttpsecakmtqaazureweDocument4, 11, 140);
        }
        
        /// <summary>
        /// Click on the link for Branches & Projects to get to the projects list under the specific program
        /// </summary>
        public void SelectBranchesandProjectsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIBranchesProjectsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument2.UITopPane.UIBranchesProjectsHyperlink;
            #endregion

            // Click 'Branches & Projects' link
            Mouse.Click(uIBranchesProjectsHyperlink, new Point(86, 5));
        }
        
        /// <summary>
        /// Toggle Content Menu Button to Expand
        /// </summary>
        public void SelectContentMenuButton()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UIItemPane;
            #endregion

            // Click pane
            Mouse.Click(uIItemPane, new Point(10, 0));
        }
        
        /// <summary>
        /// Click on the individual program link to load the overview for the program
        /// </summary>
        public void SelectIndividualProgramLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAcademicExchangeProgHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UIAcademicExchangeProgHyperlink;
            #endregion

            // Click 'Academic Exchange Programs' link
            Mouse.Click(uIAcademicExchangeProgHyperlink, new Point(306, 20));
        }
        
        /// <summary>
        /// Click the Programs Link in the content menu
        /// </summary>
        public void SelectProgramsLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIProgramsHyperlink;
            #endregion

            // Click 'Programs' link
            Mouse.Click(uIProgramsHyperlink, new Point(74, 39));
        }
        
        /// <summary>
        /// Check for Title cell for Projects List
        /// </summary>
        public void TitleCell()
        {
            #region Variable Declarations
            HtmlHeaderCell uITitleCell = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument4.UITitleStatusYearRegioPane.UIItemTable.UITitleCell;
            #endregion

            // Verify that the 'InnerText' property of 'Title' cell equals 'Title'
            Assert.AreEqual(this.TitleCellExpectedValues.UITitleCellInnerText, uITitleCell.InnerText, "No Title section in grid");
        }
        
        #region Properties
        public virtual BranchesandProjectsLinkExpectedValues BranchesandProjectsLinkExpectedValues
        {
            get
            {
                if ((this.mBranchesandProjectsLinkExpectedValues == null))
                {
                    this.mBranchesandProjectsLinkExpectedValues = new BranchesandProjectsLinkExpectedValues();
                }
                return this.mBranchesandProjectsLinkExpectedValues;
            }
        }
        
        public virtual ContentMenuButtonExpectedValues ContentMenuButtonExpectedValues
        {
            get
            {
                if ((this.mContentMenuButtonExpectedValues == null))
                {
                    this.mContentMenuButtonExpectedValues = new ContentMenuButtonExpectedValues();
                }
                return this.mContentMenuButtonExpectedValues;
            }
        }
        
        public virtual IndividualProgramLinkExpectedValues IndividualProgramLinkExpectedValues
        {
            get
            {
                if ((this.mIndividualProgramLinkExpectedValues == null))
                {
                    this.mIndividualProgramLinkExpectedValues = new IndividualProgramLinkExpectedValues();
                }
                return this.mIndividualProgramLinkExpectedValues;
            }
        }
        
        public virtual LogintoQAParams LogintoQAParams
        {
            get
            {
                if ((this.mLogintoQAParams == null))
                {
                    this.mLogintoQAParams = new LogintoQAParams();
                }
                return this.mLogintoQAParams;
            }
        }
        
        public virtual RefreshAllProgramsParams RefreshAllProgramsParams
        {
            get
            {
                if ((this.mRefreshAllProgramsParams == null))
                {
                    this.mRefreshAllProgramsParams = new RefreshAllProgramsParams();
                }
                return this.mRefreshAllProgramsParams;
            }
        }
        
        public virtual RefreshBranchesandProjectsParams RefreshBranchesandProjectsParams
        {
            get
            {
                if ((this.mRefreshBranchesandProjectsParams == null))
                {
                    this.mRefreshBranchesandProjectsParams = new RefreshBranchesandProjectsParams();
                }
                return this.mRefreshBranchesandProjectsParams;
            }
        }
        
        public virtual RefreshIndividualProgramParams RefreshIndividualProgramParams
        {
            get
            {
                if ((this.mRefreshIndividualProgramParams == null))
                {
                    this.mRefreshIndividualProgramParams = new RefreshIndividualProgramParams();
                }
                return this.mRefreshIndividualProgramParams;
            }
        }
        
        public virtual TitleCellExpectedValues TitleCellExpectedValues
        {
            get
            {
                if ((this.mTitleCellExpectedValues == null))
                {
                    this.mTitleCellExpectedValues = new TitleCellExpectedValues();
                }
                return this.mTitleCellExpectedValues;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        #endregion
        
        #region Fields
        private BranchesandProjectsLinkExpectedValues mBranchesandProjectsLinkExpectedValues;
        
        private ContentMenuButtonExpectedValues mContentMenuButtonExpectedValues;
        
        private IndividualProgramLinkExpectedValues mIndividualProgramLinkExpectedValues;
        
        private LogintoQAParams mLogintoQAParams;
        
        private RefreshAllProgramsParams mRefreshAllProgramsParams;
        
        private RefreshBranchesandProjectsParams mRefreshBranchesandProjectsParams;
        
        private RefreshIndividualProgramParams mRefreshIndividualProgramParams;
        
        private TitleCellExpectedValues mTitleCellExpectedValues;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BranchesandProjectsLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class BranchesandProjectsLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Branches & Projects' link equals 'Branches & Projects'
        /// </summary>
        public string UIBranchesProjectsHyperlinkInnerText = "Branches & Projects";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ContentMenuButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ContentMenuButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
        /// </summary>
        public string UITogglenavigationButtonControlType = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'IndividualProgramLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class IndividualProgramLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Academic Exchange Programs' link equals 'Hyperlink'
        /// </summary>
        public string UIAcademicExchangeProgHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogintoQA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class LogintoQAParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:Tabs' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "about:Tabs";
        
        /// <summary>
        /// Type 'https://eca-kmt-qa.azurewebsites.net/' in text box
        /// </summary>
        public string UIItemEditSendKeys = "https://eca-kmt-qa.azurewebsites.net/";
        
        /// <summary>
        /// Type 'ECATest1@statedept.us' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditText = "ECATest1@statedept.us";
        
        /// <summary>
        /// Type '{Tab}' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pnl8gvcmh7nq2IDxDyIPucvLUfiP5WCkCWyYApPZam4=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RefreshAllPrograms'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RefreshAllProgramsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{F5}' in 'Programs' link
        /// </summary>
        public string UIProgramsHyperlinkSendKeys = "{F5}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RefreshBranchesandProjects'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RefreshBranchesandProjectsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{F5}' in 'Branches & Projects' link
        /// </summary>
        public string UIBranchesProjectsHyperlinkSendKeys = "{F5}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RefreshIndividualProgram'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RefreshIndividualProgramParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{F5}' in 'https://eca-kmt-qa.azurewebsites.net/#/offices/1/p...' document
        /// </summary>
        public string UIHttpsecakmtqaazureweDocument2SendKeys = "{F5}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TitleCell'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class TitleCellExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Title' cell equals 'Title'
        /// </summary>
        public string UITitleCellInnerText = "Title";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPageControlToolBar UIPageControlToolBar
        {
            get
            {
                if ((this.mUIPageControlToolBar == null))
                {
                    this.mUIPageControlToolBar = new UIPageControlToolBar(this);
                }
                return this.mUIPageControlToolBar;
            }
        }
        
        public UISignintoAzureActiveDDocument UISignintoAzureActiveDDocument
        {
            get
            {
                if ((this.mUISignintoAzureActiveDDocument == null))
                {
                    this.mUISignintoAzureActiveDDocument = new UISignintoAzureActiveDDocument(this);
                }
                return this.mUISignintoAzureActiveDDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument UIHttpsecakmtqaazureweDocument
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument = new UIHttpsecakmtqaazureweDocument(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument1 UIHttpsecakmtqaazureweDocument1
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument1 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument1 = new UIHttpsecakmtqaazureweDocument1(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument1;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument2 UIHttpsecakmtqaazureweDocument2
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument2 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument2 = new UIHttpsecakmtqaazureweDocument2(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument2;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument3 UIHttpsecakmtqaazureweDocument3
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument3 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument3 = new UIHttpsecakmtqaazureweDocument3(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument3;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument4 UIHttpsecakmtqaazureweDocument4
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument4 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument4 = new UIHttpsecakmtqaazureweDocument4(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument4;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIPageControlToolBar mUIPageControlToolBar;
        
        private UISignintoAzureActiveDDocument mUISignintoAzureActiveDDocument;
        
        private UIHttpsecakmtqaazureweDocument mUIHttpsecakmtqaazureweDocument;
        
        private UIHttpsecakmtqaazureweDocument1 mUIHttpsecakmtqaazureweDocument1;
        
        private UIHttpsecakmtqaazureweDocument2 mUIHttpsecakmtqaazureweDocument2;
        
        private UIHttpsecakmtqaazureweDocument3 mUIHttpsecakmtqaazureweDocument3;
        
        private UIHttpsecakmtqaazureweDocument4 mUIHttpsecakmtqaazureweDocument4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Google";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Address and search using Google";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPageControlToolBar : WinToolBar
    {
        
        public UIPageControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Page Control";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinButton UIGotohttpsecakmtqaazuButton
        {
            get
            {
                if ((this.mUIGotohttpsecakmtqaazuButton == null))
                {
                    this.mUIGotohttpsecakmtqaazuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGotohttpsecakmtqaazuButton.SearchProperties[WinButton.PropertyNames.Name] = "Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt+Enter to open in a new tab)";
                    this.mUIGotohttpsecakmtqaazuButton.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIGotohttpsecakmtqaazuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGotohttpsecakmtqaazuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISignintoAzureActiveDDocument : HtmlDocument
    {
        
        public UISignintoAzureActiveDDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to Azure Active Directory";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/login.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/login.srf?wa=wsignin1.0&wtrealm=https%3a%2f%2flogin.windows.net&wreply=https%3a%2f%2flogin.windows.net%2fstatedept.us%2fwsfederation&wctx=3wEBD09BdXRoMkF1dGhvcml6ZQEPT0F1dGgyQXV0aG9yaXplAQxzdGF0ZWRlcHQudXMBAQEVb3BlbmlkY29ubmVjdC5pZHRva2VuAAABASRlMDM1NmU1NS1lMTI0LTQ1MmMtODM3ZC1hZWI3NTA0MTg1ZmYBJWh0dHBzOi8vZWNhLWttdC1xYS5henVyZXdlYnNpdGVzLm5ldC8AAAAAAAAAAAAAAQEaAAAAASVodHRwczovL2VjYS1rbXQtcWEuYXp1cmV3ZWJzaXRlcy5uZXQvAQkBCGFkYWxfdmVyAQUwLjAuNwEDY2lkASQ5MGVlN2FmYy0xNTk1LTRlYWYtOWU2Yy1mMGQ5N2I0NmYwOTIBCWVycm9yX3VyaQElaHR0cHM6Ly9lY2Eta210LXFhLmF6dXJld2Vic2l0ZXMubmV0LwEPaW5jbHVkZV9hdF9oYXNoAQExAQtpbnRlcmFjdGl2ZQEBMQEFTm9uY2UBJDE4NGJkYmIxLWRmZGUtNDA3Mi05NzY2LWE0NmYwN2Y4OWFjNwECcmMBJGZmYjExNjIyLTRhMjQtNDUyYy04MDc4LTExYTBmY2Q2ZjVjYQEJc2Vzc2lvbklkASRlNjE3Y2ExNi00ZjY0LTRiZDMtYWExNC02NjJhNjQzMTgzYjIBD2xpbWl0X3Rva2Vuc2l6ZQEBMe01&wp=MBI_FED_SSL&id=";
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBackground_page_overPane
        {
            get
            {
                if ((this.mUIBackground_page_overPane == null))
                {
                    this.mUIBackground_page_overPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "background_page_overlay";
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "overlay ie_legacy";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"overlay ie_legacy\" id=\"background_page_overlay\" style=\"visibility: visible" +
                        "; opacity: 0.576; background-color: rgb(0, 114, 198);\"";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIBackground_page_overPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIBackground_page_overPane;
            }
        }
        
        public HtmlEdit UIUseraccountEdit
        {
            get
            {
                if ((this.mUIUseraccountEdit == null))
                {
                    this.mUIUseraccountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_userid_inputtext";
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User account";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required email field normaltext";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login\" tabindex=\"1\" class=\"login_t";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUseraccountEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIUseraccountEdit;
            }
        }
        
        public HtmlCustom UICredentialsCustom
        {
            get
            {
                if ((this.mUICredentialsCustom == null))
                {
                    this.mUICredentialsCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUICredentialsCustom.SearchProperties["TagName"] = "FORM";
                    this.mUICredentialsCustom.SearchProperties["Id"] = "credentials";
                    this.mUICredentialsCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUICredentialsCustom.FilterProperties["Class"] = null;
                    this.mUICredentialsCustom.FilterProperties["ControlDefinition"] = "id=\"credentials\" action=\"https://login.m";
                    this.mUICredentialsCustom.FilterProperties["TagInstance"] = "1";
                    this.mUICredentialsCustom.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUICredentialsCustom;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state\" " +
                        "id=\"cred_sign_in_button\" role=\"button\" style=\"opacity: 1;\" onclick=\"Post.SubmitC" +
                        "reds();return false;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBackground_page_overPane;
        
        private HtmlEdit mUIUseraccountEdit;
        
        private HtmlCustom mUICredentialsCustom;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "icon-bar";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"icon-bar\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIItemPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public UICbpspmenus1Custom UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUITogglenavigationButton;
        
        private HtmlSpan mUIItemPane;
        
        private UICbpspmenus1Custom mUICbpspmenus1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbpspmenus1Custom : HtmlCustom
    {
        
        public UICbpspmenus1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIProgramsHyperlink
        {
            get
            {
                if ((this.mUIProgramsHyperlink == null))
                {
                    this.mUIProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Programs";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/allprograms/";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allp";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument1 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/allprograms/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UICbpspmenus1Custom1 UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom1(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        
        public UITopPane UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UICbpspmenus1Custom1 mUICbpspmenus1Custom;
        
        private UITopPane mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbpspmenus1Custom1 : HtmlCustom
    {
        
        public UICbpspmenus1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIProgramsHyperlink
        {
            get
            {
                if ((this.mUIProgramsHyperlink == null))
                {
                    this.mUIProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Programs";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/allprograms/";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allp";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane : HtmlDiv
    {
        
        public UITopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "All Programs\r\nECA \r\n\r\n \r\n\r\nAcademic Exch";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAcademicExchangeProgHyperlink
        {
            get
            {
                if ((this.mUIAcademicExchangeProgHyperlink == null))
                {
                    this.mUIAcademicExchangeProgHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAcademicExchangeProgHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAcademicExchangeProgHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAcademicExchangeProgHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAcademicExchangeProgHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Academic Exchange Programs";
                    this.mUIAcademicExchangeProgHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIAcademicExchangeProgHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAcademicExchangeProgHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/programs/47/overview";
                    this.mUIAcademicExchangeProgHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIAcademicExchangeProgHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/pro";
                    this.mUIAcademicExchangeProgHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIAcademicExchangeProgHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIAcademicExchangeProgHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAcademicExchangeProgHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument2 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1/programs/47/overview#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane1 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane1(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane1 mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane1 : HtmlDiv
    {
        
        public UITopPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Office of the Executive Director • Acade";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBranchesProjectsHyperlink
        {
            get
            {
                if ((this.mUIBranchesProjectsHyperlink == null))
                {
                    this.mUIBranchesProjectsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Branches & Projects";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/programs/47/projects";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/pro";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIBranchesProjectsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIBranchesProjectsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBranchesProjectsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument3 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/offices/1/programs/47/projects#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITopPane2 UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane2(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UITopPane2 mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPane2 : HtmlDiv
    {
        
        public UITopPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Office of the Executive Director • Acade";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBranchesProjectsHyperlink
        {
            get
            {
                if ((this.mUIBranchesProjectsHyperlink == null))
                {
                    this.mUIBranchesProjectsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBranchesProjectsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Branches & Projects";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/offices/1/programs/47/projects";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding\" href=\"#/offices/1/pro";
                    this.mUIBranchesProjectsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIBranchesProjectsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIBranchesProjectsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBranchesProjectsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpsecakmtqaazureweDocument4 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UITitleStatusYearRegioPane UITitleStatusYearRegioPane
        {
            get
            {
                if ((this.mUITitleStatusYearRegioPane == null))
                {
                    this.mUITitleStatusYearRegioPane = new UITitleStatusYearRegioPane(this);
                }
                return this.mUITitleStatusYearRegioPane;
            }
        }
        #endregion
        
        #region Fields
        private UITitleStatusYearRegioPane mUITitleStatusYearRegioPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITitleStatusYearRegioPane : HtmlDiv
    {
        
        public UITitleStatusYearRegioPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sort-list";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Title\r\n\r\nStatus\r\n\r\nYear\r\n\r\nRegion\r\n\r\n \r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"sort-list\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "44";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Title\r\n\r\nStatus\r\n\r\nYear\r\n\r\nRegion\r\n\r\n \r\n";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"col-md-12\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "col-md-12";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHeaderCell UITitleCell
        {
            get
            {
                if ((this.mUITitleCell == null))
                {
                    this.mUITitleCell = new HtmlHeaderCell(this);
                    #region Search Criteria
                    this.mUITitleCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUITitleCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUITitleCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUITitleCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Title";
                    this.mUITitleCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=\"col-md-7 sort-label medium st-sort-ascent\" st-sort-default=\"true\" st-sort=" +
                        "\"\'name\'\"";
                    this.mUITitleCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUITitleCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUITitleCell.FilterProperties[HtmlCell.PropertyNames.Class] = "col-md-7 sort-label medium st-sort-ascent";
                    this.mUITitleCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUITitleCell.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITitleCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHeaderCell mUITitleCell;
        #endregion
    }
}
