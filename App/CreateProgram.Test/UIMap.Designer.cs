// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CreateProgram.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Open browser; navigate to QA site; enter ECATest login creds; click sign in.
        /// </summary>
        public void LogintoQA()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchusinEdit = this.UINewtabInternetExplorWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            WinEdit uIItemEdit = this.UINewtabInternetExplorWindow.UIItemWindow.UIItemEdit;
            WinButton uIGotohttpsecakmtqaazuButton = this.UINewtabInternetExplorWindow.UIPageControlToolBar.UIGotohttpsecakmtqaazuButton;
            HtmlDiv uIBackground_page_overPane = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIBackground_page_overPane;
            HtmlEdit uIUseraccountEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIUseraccountEdit;
            HtmlEdit uIPasswordEdit = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UIPasswordEdit;
            HtmlSpan uISigninPane = this.UINewtabInternetExplorWindow.UISignintoAzureActiveDDocument.UISigninPane;
            #endregion

            // Go to web page 'about:Tabs' using new browser instance
            this.UINewtabInternetExplorWindow.LaunchUrl(new System.Uri(this.LogintoQAParams.UINewtabInternetExplorWindowUrl));

            // Click 'Address and search using Bing' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(65, 6));

            // Type 'https{RShiftKey}://eca-kmt-qa.az' in text box
            Keyboard.SendKeys(uIItemEdit, this.LogintoQAParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'urewebsites.net/' in text box
            Keyboard.SendKeys(uIItemEdit, this.LogintoQAParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Click 'Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt...' button
            Mouse.Click(uIGotohttpsecakmtqaazuButton, new Point(10, 7));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'background_page_overlay' pane at (1, 1)
            Mouse.Hover(uIBackground_page_overPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type 'ECATest1@statedept.us' in 'User account' text box
            uIUseraccountEdit.Text = this.LogintoQAParams.UIUseraccountEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LogintoQAParams.UIPasswordEditPassword;

            // Click 'Sign in' pane
            Mouse.Click(uISigninPane, new Point(38, 19));
        }
        
        /// <summary>
        /// Verify the Content Menu button is available to toggle.
        /// </summary>
        public void AssertContentMenuButton()
        {
            #region Variable Declarations
            HtmlButton uITogglenavigationButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UITogglenavigationButton;
            #endregion

            // Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
            Assert.AreEqual(this.AssertContentMenuButtonExpectedValues.UITogglenavigationButtonControlType, uITogglenavigationButton.ControlType.ToString(), "No Content Menu button available.");
        }
        
        /// <summary>
        /// Click the Content Menu button to toggle and expand the menu to view the menu items.
        /// </summary>
        public void SelectContentMenuButton()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UIItemPane;
            #endregion

            // Click pane
            Mouse.Click(uIItemPane, new Point(8, 1));
        }
        
        /// <summary>
        /// Verify the Programs menu link is available for selection.
        /// </summary>
        public void AssertProgramsMenuItemLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIProgramsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Programs' link equals 'Programs'
            Assert.AreEqual(this.AssertProgramsMenuItemLinkExpectedValues.UIProgramsHyperlinkInnerText, uIProgramsHyperlink.InnerText, "No Programs menu item.");

            // Verify that the 'ControlType' property of 'Programs' link equals 'Hyperlink'
            Assert.AreEqual(this.AssertProgramsMenuItemLinkExpectedValues.UIProgramsHyperlinkControlType, uIProgramsHyperlink.ControlType.ToString(), "No hyperlink for Program menu item.");
        }
        
        /// <summary>
        /// Click the Programs link in the Content Menu to navigate to the All Programs page.
        /// </summary>
        public void SelectProgramsMenuItem()
        {
            #region Variable Declarations
            HtmlHyperlink uIProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument.UICbpspmenus1Custom.UIProgramsHyperlink;
            #endregion

            // Click 'Programs' link
            Mouse.Click(uIProgramsHyperlink, new Point(58, 33));
        }
        
        /// <summary>
        /// Refresh/Reload All Programs page to display.
        /// </summary>
        public void RefreshAllProgramsPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIProgramsHyperlink = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UICbpspmenus1Custom.UIProgramsHyperlink;
            #endregion

            // Type '{F5}' in 'Programs' link
            Keyboard.SendKeys(uIProgramsHyperlink, this.RefreshAllProgramsPageParams.UIProgramsHyperlinkSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Verify that the display text, control type, and inner text are correct for the Create Program button.
        /// </summary>
        public void AssertCreateProgramButton()
        {
            #region Variable Declarations
            HtmlButton uICREATEPROGRAMButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UICREATEPROGRAMButton;
            #endregion

            // Verify that the 'DisplayText' property of 'CREATE PROGRAM' button equals 'CREATE PROGRAM'
            Assert.AreEqual(this.AssertCreateProgramButtonExpectedValues.UICREATEPROGRAMButtonDisplayText, uICREATEPROGRAMButton.DisplayText, "No Create Program button available.");

            // Verify that the 'ControlType' property of 'CREATE PROGRAM' button equals 'Button'
            Assert.AreEqual(this.AssertCreateProgramButtonExpectedValues.UICREATEPROGRAMButtonControlType, uICREATEPROGRAMButton.ControlType.ToString(), "Create Program is not an available button.");

            // Verify that the 'InnerText' property of 'CREATE PROGRAM' button equals 'CREATE PROGRAM'
            Assert.AreEqual(this.AssertCreateProgramButtonExpectedValues.UICREATEPROGRAMButtonInnerText, uICREATEPROGRAMButton.InnerText, "Inner Text for Create Program button does not match.");
        }
        
        /// <summary>
        /// Click the Create Program button to bring up the Create Program modal for creating a new program.
        /// </summary>
        public void SelectCreateProgramButton()
        {
            #region Variable Declarations
            HtmlButton uICREATEPROGRAMButton = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UICREATEPROGRAMButton;
            #endregion

            // Click 'CREATE PROGRAM' button
            Mouse.Click(uICREATEPROGRAMButton, new Point(77, 17));
        }
        
        /// <summary>
        /// Verify the Create Program modal dialog window/box appears/is available.
        /// </summary>
        public void AssertCreateProgramModal()
        {
            #region Variable Declarations
            HtmlDiv uICreateProgramDidyoukPane = this.UINewtabInternetExplorWindow.UIHttpsecakmtqaazureweDocument1.UITopPane.UICreateProgramDidyoukPane;
            #endregion

            // Verify that the 'Class' property of 'Create Program Did you know?' pane equals 'ng-modal-dialog'
            Assert.AreEqual(this.AssertCreateProgramModalExpectedValues.UICreateProgramDidyoukPaneClass, uICreateProgramDidyoukPane.Class, "No Create Program modal dialog box.");
        }
        
        #region Properties
        public virtual LogintoQAParams LogintoQAParams
        {
            get
            {
                if ((this.mLogintoQAParams == null))
                {
                    this.mLogintoQAParams = new LogintoQAParams();
                }
                return this.mLogintoQAParams;
            }
        }
        
        public virtual AssertContentMenuButtonExpectedValues AssertContentMenuButtonExpectedValues
        {
            get
            {
                if ((this.mAssertContentMenuButtonExpectedValues == null))
                {
                    this.mAssertContentMenuButtonExpectedValues = new AssertContentMenuButtonExpectedValues();
                }
                return this.mAssertContentMenuButtonExpectedValues;
            }
        }
        
        public virtual AssertProgramsMenuItemLinkExpectedValues AssertProgramsMenuItemLinkExpectedValues
        {
            get
            {
                if ((this.mAssertProgramsMenuItemLinkExpectedValues == null))
                {
                    this.mAssertProgramsMenuItemLinkExpectedValues = new AssertProgramsMenuItemLinkExpectedValues();
                }
                return this.mAssertProgramsMenuItemLinkExpectedValues;
            }
        }
        
        public virtual RefreshAllProgramsPageParams RefreshAllProgramsPageParams
        {
            get
            {
                if ((this.mRefreshAllProgramsPageParams == null))
                {
                    this.mRefreshAllProgramsPageParams = new RefreshAllProgramsPageParams();
                }
                return this.mRefreshAllProgramsPageParams;
            }
        }
        
        public virtual AssertCreateProgramButtonExpectedValues AssertCreateProgramButtonExpectedValues
        {
            get
            {
                if ((this.mAssertCreateProgramButtonExpectedValues == null))
                {
                    this.mAssertCreateProgramButtonExpectedValues = new AssertCreateProgramButtonExpectedValues();
                }
                return this.mAssertCreateProgramButtonExpectedValues;
            }
        }
        
        public virtual AssertCreateProgramModalExpectedValues AssertCreateProgramModalExpectedValues
        {
            get
            {
                if ((this.mAssertCreateProgramModalExpectedValues == null))
                {
                    this.mAssertCreateProgramModalExpectedValues = new AssertCreateProgramModalExpectedValues();
                }
                return this.mAssertCreateProgramModalExpectedValues;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        #endregion
        
        #region Fields
        private LogintoQAParams mLogintoQAParams;
        
        private AssertContentMenuButtonExpectedValues mAssertContentMenuButtonExpectedValues;
        
        private AssertProgramsMenuItemLinkExpectedValues mAssertProgramsMenuItemLinkExpectedValues;
        
        private RefreshAllProgramsPageParams mRefreshAllProgramsPageParams;
        
        private AssertCreateProgramButtonExpectedValues mAssertCreateProgramButtonExpectedValues;
        
        private AssertCreateProgramModalExpectedValues mAssertCreateProgramModalExpectedValues;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogintoQA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class LogintoQAParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'about:Tabs' using new browser instance
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "about:Tabs";
        
        /// <summary>
        /// Type 'https{RShiftKey}://eca-kmt-qa.az' in text box
        /// </summary>
        public string UIItemEditSendKeys = "https{RShiftKey}://eca-kmt-qa.az";
        
        /// <summary>
        /// Type 'urewebsites.net/' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "urewebsites.net/";
        
        /// <summary>
        /// Type 'ECATest1@statedept.us' in 'User account' text box
        /// </summary>
        public string UIUseraccountEditText = "ECATest1@statedept.us";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pnl8gvcmh7nq2IDxDyIPucvLUfiP5WCkCWyYApPZam4=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertContentMenuButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertContentMenuButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Toggle navigation' button equals 'Button'
        /// </summary>
        public string UITogglenavigationButtonControlType = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertProgramsMenuItemLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertProgramsMenuItemLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Programs' link equals 'Programs'
        /// </summary>
        public string UIProgramsHyperlinkInnerText = "Programs";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Programs' link equals 'Hyperlink'
        /// </summary>
        public string UIProgramsHyperlinkControlType = "Hyperlink";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RefreshAllProgramsPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class RefreshAllProgramsPageParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{F5}' in 'Programs' link
        /// </summary>
        public string UIProgramsHyperlinkSendKeys = "{F5}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCreateProgramButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertCreateProgramButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'CREATE PROGRAM' button equals 'CREATE PROGRAM'
        /// </summary>
        public string UICREATEPROGRAMButtonDisplayText = "CREATE PROGRAM";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'CREATE PROGRAM' button equals 'Button'
        /// </summary>
        public string UICREATEPROGRAMButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'CREATE PROGRAM' button equals 'CREATE PROGRAM'
        /// </summary>
        public string UICREATEPROGRAMButtonInnerText = "CREATE PROGRAM";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCreateProgramModal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class AssertCreateProgramModalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Class' property of 'Create Program Did you know?' pane equals 'ng-modal-dialog'
        /// </summary>
        public string UICreateProgramDidyoukPaneClass = "ng-modal-dialog";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPageControlToolBar UIPageControlToolBar
        {
            get
            {
                if ((this.mUIPageControlToolBar == null))
                {
                    this.mUIPageControlToolBar = new UIPageControlToolBar(this);
                }
                return this.mUIPageControlToolBar;
            }
        }
        
        public UISignintoAzureActiveDDocument UISignintoAzureActiveDDocument
        {
            get
            {
                if ((this.mUISignintoAzureActiveDDocument == null))
                {
                    this.mUISignintoAzureActiveDDocument = new UISignintoAzureActiveDDocument(this);
                }
                return this.mUISignintoAzureActiveDDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument UIHttpsecakmtqaazureweDocument
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument = new UIHttpsecakmtqaazureweDocument(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument;
            }
        }
        
        public UIHttpsecakmtqaazureweDocument1 UIHttpsecakmtqaazureweDocument1
        {
            get
            {
                if ((this.mUIHttpsecakmtqaazureweDocument1 == null))
                {
                    this.mUIHttpsecakmtqaazureweDocument1 = new UIHttpsecakmtqaazureweDocument1(this);
                }
                return this.mUIHttpsecakmtqaazureweDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIPageControlToolBar mUIPageControlToolBar;
        
        private UISignintoAzureActiveDDocument mUISignintoAzureActiveDDocument;
        
        private UIHttpsecakmtqaazureweDocument mUIHttpsecakmtqaazureweDocument;
        
        private UIHttpsecakmtqaazureweDocument1 mUIHttpsecakmtqaazureweDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Address and search using Bing";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIPageControlToolBar : WinToolBar
    {
        
        public UIPageControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Page Control";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinButton UIGotohttpsecakmtqaazuButton
        {
            get
            {
                if ((this.mUIGotohttpsecakmtqaazuButton == null))
                {
                    this.mUIGotohttpsecakmtqaazuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGotohttpsecakmtqaazuButton.SearchProperties[WinButton.PropertyNames.Name] = "Go to “https://eca-kmt-qa.azurewebsites.net/” (Alt+Enter to open in a new tab)";
                    this.mUIGotohttpsecakmtqaazuButton.WindowTitles.Add("New tab");
                    #endregion
                }
                return this.mUIGotohttpsecakmtqaazuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGotohttpsecakmtqaazuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UISignintoAzureActiveDDocument : HtmlDocument
    {
        
        public UISignintoAzureActiveDDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Sign in to Azure Active Directory";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/login.srf";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://login.microsoftonline.com/login.srf?wa=wsignin1.0&wtrealm=https%3a%2f%2flogin.windows.net&wreply=https%3a%2f%2flogin.windows.net%2fstatedept.us%2fwsfederation&wctx=3wEBD09BdXRoMkF1dGhvcml6ZQEPT0F1dGgyQXV0aG9yaXplAQxzdGF0ZWRlcHQudXMBAQEVb3BlbmlkY29ubmVjdC5pZHRva2VuAAABASRlMDM1NmU1NS1lMTI0LTQ1MmMtODM3ZC1hZWI3NTA0MTg1ZmYBJWh0dHBzOi8vZWNhLWttdC1xYS5henVyZXdlYnNpdGVzLm5ldC8AAAAAAAAAAAAAAQEaAAAAASVodHRwczovL2VjYS1rbXQtcWEuYXp1cmV3ZWJzaXRlcy5uZXQvAQkBCGFkYWxfdmVyAQUwLjAuNwEDY2lkASQ4MTcxMzdiMS01MjBlLTRlODUtYTUzNi0yNjUwYTUwNjFlODQBCWVycm9yX3VyaQElaHR0cHM6Ly9lY2Eta210LXFhLmF6dXJld2Vic2l0ZXMubmV0LwEPaW5jbHVkZV9hdF9oYXNoAQExAQtpbnRlcmFjdGl2ZQEBMQEFTm9uY2UBJDAyNmY5N2M4LTBmMTQtNGU5MC1iOTVhLTMyYjNmYmMwYjI3YgECcmMBJDZhMzg0YjAxLWJmYmMtNDdjZi1iYzAyLTEwZDkyMTUwMzY4NQEJc2Vzc2lvbklkASRkNzdiMzAwMy04ZDBmLTQzOTItYTM0OC05YzE1YTQxYWNkMzABD2xpbWl0X3Rva2Vuc2l6ZQEBMe01&wp=MBI_FED_SSL&id=";
            this.WindowTitles.Add("Sign in to Azure Active Directory");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBackground_page_overPane
        {
            get
            {
                if ((this.mUIBackground_page_overPane == null))
                {
                    this.mUIBackground_page_overPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "background_page_overlay";
                    this.mUIBackground_page_overPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "overlay ie_legacy";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"overlay ie_legacy\" id=\"background_page_overlay\" style=\"visibility: visible" +
                        "; opacity: 0.664; background-color: rgb(0, 114, 198);\"";
                    this.mUIBackground_page_overPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIBackground_page_overPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIBackground_page_overPane;
            }
        }
        
        public HtmlEdit UIUseraccountEdit
        {
            get
            {
                if ((this.mUIUseraccountEdit == null))
                {
                    this.mUIUseraccountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_userid_inputtext";
                    this.mUIUseraccountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User account";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required email field normaltext";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login\" tabindex=\"1\" class=\"login_t";
                    this.mUIUseraccountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUseraccountEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIUseraccountEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "cred_password_inputtext";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "login_textfield textfield required field normaltext";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"passwd\" tabindex=\"2\" class=\"login_";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlSpan UISigninPane
        {
            get
            {
                if ((this.mUISigninPane == null))
                {
                    this.mUISigninPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "cred_sign_in_button";
                    this.mUISigninPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "button normaltext cred_sign_in_button refresh_domain_state";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"11\" class=\"button normaltext cred_sign_in_button refresh_domain_state\" " +
                        "id=\"cred_sign_in_button\" role=\"button\" style=\"opacity: 1;\" onclick=\"Post.SubmitC" +
                        "reds();return false;\"";
                    this.mUISigninPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISigninPane.WindowTitles.Add("Sign in to Azure Active Directory");
                    #endregion
                }
                return this.mUISigninPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBackground_page_overPane;
        
        private HtmlEdit mUIUseraccountEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlSpan mUISigninPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlButton UITogglenavigationButton
        {
            get
            {
                if ((this.mUITogglenavigationButton == null))
                {
                    this.mUITogglenavigationButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Toggle navigation ";
                    this.mUITogglenavigationButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle collapsed";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle collapsed\" type=\"bu";
                    this.mUITogglenavigationButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUITogglenavigationButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUITogglenavigationButton;
            }
        }
        
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "icon-bar";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"icon-bar\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIItemPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public UICbpspmenus1Custom UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUITogglenavigationButton;
        
        private HtmlSpan mUIItemPane;
        
        private UICbpspmenus1Custom mUICbpspmenus1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UICbpspmenus1Custom : HtmlCustom
    {
        
        public UICbpspmenus1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left cbp-spmenu-open";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIProgramsHyperlink
        {
            get
            {
                if ((this.mUIProgramsHyperlink == null))
                {
                    this.mUIProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Programs";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/allprograms/";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allp";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UIHttpsecakmtqaazureweDocument1 : HtmlDocument
    {
        
        public UIHttpsecakmtqaazureweDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://eca-kmt-qa.azurewebsites.net/#/allprograms/#top";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public UICbpspmenus1Custom1 UICbpspmenus1Custom
        {
            get
            {
                if ((this.mUICbpspmenus1Custom == null))
                {
                    this.mUICbpspmenus1Custom = new UICbpspmenus1Custom1(this);
                }
                return this.mUICbpspmenus1Custom;
            }
        }
        
        public UITopPane UITopPane
        {
            get
            {
                if ((this.mUITopPane == null))
                {
                    this.mUITopPane = new UITopPane(this);
                }
                return this.mUITopPane;
            }
        }
        #endregion
        
        #region Fields
        private UICbpspmenus1Custom1 mUICbpspmenus1Custom;
        
        private UITopPane mUITopPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UICbpspmenus1Custom1 : HtmlCustom
    {
        
        public UICbpspmenus1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "cbp-spmenu-s1";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left";
            this.FilterProperties["ControlDefinition"] = "class=\"cbp-spmenu cbp-spmenu-vertical cb";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIProgramsHyperlink
        {
            get
            {
                if ((this.mUIProgramsHyperlink == null))
                {
                    this.mUIProgramsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIProgramsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Programs";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#/allprograms/";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-binding ng-scope";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-binding ng-scope\" href=\"#/allp";
                    this.mUIProgramsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIProgramsHyperlink.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUIProgramsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIProgramsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.22609.0")]
    public class UITopPane : HtmlDiv
    {
        
        public UITopPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "top";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "All Programs\r\nECA \r\nCREATE PROGRAM \r\n\r\n\r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-scope";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-scope\" id=\"top\" ng-click=\"closeMenus()\" autoscroll=\"true\" ui-view=\"\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "24";
            this.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
            #endregion
        }
        
        #region Properties
        public HtmlButton UICREATEPROGRAMButton
        {
            get
            {
                if ((this.mUICREATEPROGRAMButton == null))
                {
                    this.mUICREATEPROGRAMButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUICREATEPROGRAMButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICREATEPROGRAMButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICREATEPROGRAMButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "CREATE PROGRAM";
                    this.mUICREATEPROGRAMButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICREATEPROGRAMButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICREATEPROGRAMButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-success right col-sd-2";
                    this.mUICREATEPROGRAMButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-success right col-sd-2\" n";
                    this.mUICREATEPROGRAMButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUICREATEPROGRAMButton.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUICREATEPROGRAMButton;
            }
        }
        
        public HtmlDiv UICreateProgramDidyoukPane
        {
            get
            {
                if ((this.mUICreateProgramDidyoukPane == null))
                {
                    this.mUICreateProgramDidyoukPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICreateProgramDidyoukPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICreateProgramDidyoukPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICreateProgramDidyoukPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Create Program\r\n\r\n\r\n\r\n\r\n\r\nDid you know? ";
                    this.mUICreateProgramDidyoukPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICreateProgramDidyoukPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ng-modal-dialog";
                    this.mUICreateProgramDidyoukPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ng-modal-dialog\" ng-style=\"dialogStyle\"";
                    this.mUICreateProgramDidyoukPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "61";
                    this.mUICreateProgramDidyoukPane.WindowTitles.Add("https://eca-kmt-qa.azurewebsites.net/");
                    #endregion
                }
                return this.mUICreateProgramDidyoukPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUICREATEPROGRAMButton;
        
        private HtmlDiv mUICreateProgramDidyoukPane;
        #endregion
    }
}
